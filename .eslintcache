[{"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/Welcome.tsx":"1","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Layout.tsx":"2","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/NewBusiness.tsx":"3","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/InputField.tsx":"4","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Loading.tsx":"5","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Login.tsx":"6","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessService.tsx":"7","/Users/oscargracia/Documents/proyectos/boombook/manager/src/index.tsx":"8","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/theme.tsx":"9","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Settings.tsx":"10","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/userService.tsx":"11","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/ContainerPage.tsx":"12","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/HttpClient.tsx":"13","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingInformation.tsx":"14","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/business/AddressForm.tsx":"15","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessAddressService.tsx":"16","/Users/oscargracia/Documents/proyectos/boombook/manager/src/reportWebVitals.ts":"17","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Signup.tsx":"18","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Header.tsx":"19","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/constants.tsx":"20","/Users/oscargracia/Documents/proyectos/boombook/manager/src/App.tsx":"21","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingServices.tsx":"22","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingSuccess.tsx":"23","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/BookingCalendar.tsx":"24","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Wrapper.tsx":"25","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Sidebar.tsx":"26","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/WrapperSettings.tsx":"27","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingHours.tsx":"28","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/signupValidation.tsx":"29","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/businessValidation.tsx":"30","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAddress.tsx":"31","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsLocation.tsx":"32","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsServices.tsx":"33","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/loginValidation.tsx":"34","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceList.tsx":"35","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceItem.tsx":"36","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ModalNewService.tsx":"37","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceForm.tsx":"38","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/LoadingView.tsx":"39","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/newServiceValidation.tsx":"40","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/AlertError.tsx":"41","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/calendar/Calendar.tsx":"42","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/DeleteServiceDialog.tsx":"43","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsHour.tsx":"44","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatHoursDate.tsx":"45"},{"size":2849,"mtime":1609360257865,"results":"46","hashOfConfig":"47"},{"size":2240,"mtime":1609373384555,"results":"48","hashOfConfig":"47"},{"size":3106,"mtime":1609358325713,"results":"49","hashOfConfig":"47"},{"size":2572,"mtime":1609556792115,"results":"50","hashOfConfig":"47"},{"size":465,"mtime":1608931363552,"results":"51","hashOfConfig":"47"},{"size":2568,"mtime":1609356265362,"results":"52","hashOfConfig":"47"},{"size":1483,"mtime":1609791309903,"results":"53","hashOfConfig":"47"},{"size":655,"mtime":1608599718469,"results":"54","hashOfConfig":"47"},{"size":2002,"mtime":1609289367219,"results":"55","hashOfConfig":"47"},{"size":4073,"mtime":1609375602211,"results":"56","hashOfConfig":"47"},{"size":555,"mtime":1609348998265,"results":"57","hashOfConfig":"47"},{"size":372,"mtime":1609386873637,"results":"58","hashOfConfig":"47"},{"size":753,"mtime":1608697602026,"results":"59","hashOfConfig":"47"},{"size":1329,"mtime":1609276176399,"results":"60","hashOfConfig":"47"},{"size":6080,"mtime":1609382863792,"results":"61","hashOfConfig":"47"},{"size":675,"mtime":1609281400176,"results":"62","hashOfConfig":"47"},{"size":425,"mtime":1608597130937,"results":"63","hashOfConfig":"47"},{"size":2712,"mtime":1609349427575,"results":"64","hashOfConfig":"47"},{"size":895,"mtime":1609385626428,"results":"65","hashOfConfig":"47"},{"size":195,"mtime":1609289390192,"results":"66","hashOfConfig":"47"},{"size":2752,"mtime":1609731512939,"results":"67","hashOfConfig":"47"},{"size":3704,"mtime":1609559851450,"results":"68","hashOfConfig":"47"},{"size":893,"mtime":1609275485344,"results":"69","hashOfConfig":"47"},{"size":427,"mtime":1608769442409,"results":"70","hashOfConfig":"47"},{"size":428,"mtime":1608598132872,"results":"71","hashOfConfig":"47"},{"size":1602,"mtime":1609381505038,"results":"72","hashOfConfig":"47"},{"size":1121,"mtime":1609731544457,"results":"73","hashOfConfig":"47"},{"size":4890,"mtime":1609559796814,"results":"74","hashOfConfig":"47"},{"size":619,"mtime":1609557698721,"results":"75","hashOfConfig":"47"},{"size":345,"mtime":1609362204983,"results":"76","hashOfConfig":"47"},{"size":3458,"mtime":1609376453185,"results":"77","hashOfConfig":"47"},{"size":6288,"mtime":1609382014998,"results":"78","hashOfConfig":"47"},{"size":3098,"mtime":1609729943959,"results":"79","hashOfConfig":"47"},{"size":465,"mtime":1608745602962,"results":"80","hashOfConfig":"47"},{"size":664,"mtime":1609645792759,"results":"81","hashOfConfig":"47"},{"size":1401,"mtime":1609730159504,"results":"82","hashOfConfig":"47"},{"size":855,"mtime":1609643196313,"results":"83","hashOfConfig":"47"},{"size":3371,"mtime":1609728292711,"results":"84","hashOfConfig":"47"},{"size":339,"mtime":1609375491142,"results":"85","hashOfConfig":"47"},{"size":358,"mtime":1609558404865,"results":"86","hashOfConfig":"47"},{"size":470,"mtime":1608703263232,"results":"87","hashOfConfig":"47"},{"size":4048,"mtime":1608923811281,"results":"88","hashOfConfig":"47"},{"size":2075,"mtime":1609729996424,"results":"89","hashOfConfig":"47"},{"size":6387,"mtime":1609801085240,"results":"90","hashOfConfig":"47"},{"size":484,"mtime":1609800709654,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"1n66cqf",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"97"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/Welcome.tsx",[],["191","192"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Layout.tsx",[],["193","194"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/NewBusiness.tsx",["195"],"import { Box, Heading, Progress } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Loading } from '../components/general/Loading';\nimport { BoardingHours } from '../components/onboarding/BoardingHours';\nimport { BoardingInformation } from '../components/onboarding/BoardingInformation';\nimport { BoardingServices } from '../components/onboarding/BoardingServices';\nimport { BoardingSuccess } from '../components/onboarding/BoardingSuccess';\nimport { Welcome } from '../components/onboarding/Welcome';\nimport { BusinessService } from '../services/businessService';\n\nimport { UserService } from '../services/userService';\nimport { IBusiness } from '../types/Business';\nimport { User } from '../types/User';\n\ninterface NewBusinessParams {\n  step?: string | undefined\n}\n\nexport const NewBusiness: React.FC = () => {\n  const history = useHistory();\n  const params = useParams<NewBusinessParams>();\n  const option = params.step !== undefined ? Number(params.step) : 1;\n\n  const [step, setStep] = useState<number>(option || 1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  \n\n  useEffect(() => {\n    const option = params.step !== undefined ? Number(params.step) : 1;\n    setStep(option)\n  }, [option, params.step]);\n\n  useEffect(() => {\n    const getMe = async () => {\n      const { success, user } = await new UserService().getMe();\n      if (!user || !success) {\n        return;\n      }\n      setUser(user);\n    };\n  \n    const getBusiness = async () => {\n      const { success, business }  = await new BusinessService().get();\n      if (success) {\n        setBusiness(business);\n      }\n    }\n    getMe();\n    getBusiness();\n    setIsLoading(false);\n    \n  }, []);\n\n  const handleSteps = (step: number) => {\n    // if (step === 4) {\n    //   history.push('/');\n    //   return;\n    // }\n    setStep(step)\n  }\n\n  if (!user || isLoading) {\n    return <Loading />\n  }\n\n  const buildOnboarding = () => {\n    switch (step) {\n      case 1:\n        return <Welcome business={business} user={user} />\n      case 2:\n        return <BoardingInformation setStep={handleSteps} />\n      case 3:\n        return <BoardingServices />\n      case 4:\n        return <BoardingHours />\n      case 5:\n        return <BoardingSuccess />\n      default:\n        return <Heading>No se pudo cargar la pagina</Heading>\n    }\n  }\n\n  return (\n    <Box bg='#FFFFFF' height='100vh'>\n      <Box mx='auto' w='800px' py={10}>\n        <Box>\n          <Progress value={20 * step} colorScheme='green' />\n        </Box>\n        <Box mt={10}>\n          { (user && !isLoading) && buildOnboarding() }\n        </Box>\n        {/* <Flex direction='row' mt={6}>\n          <Button variant='link' onClick={goBack}>\n            Atras\n          </Button>\n          <Spacer />\n          <Button size='lg' variant='primary'>\n            Siguiente\n          </Button>\n        </Flex> */}\n        \n      </Box>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/InputField.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Loading.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Login.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/index.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/theme.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Settings.tsx",["196"],"// libraries\nimport React, { useEffect, useState } from 'react'\nimport { Box, VStack, Select, Button, FormControl, FormLabel, Heading, FormErrorMessage, useToast } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { InputField } from '../components/general/InputField';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { IBusiness } from '../types/Business';\nimport { businessValidation } from '../validations/businessValidation';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\n// local components\n\ninterface SettingsProps {}\n\nexport const Settings: React.FC<SettingsProps> = () => {\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const toast = useToast();\n\n  useEffect(() => {\n    const fetchBusiness = async () => {\n      const { business } = await new BusinessService().get();\n      console.log('Business', business);\n      \n      setBusiness(business);\n    }\n    fetchBusiness();\n  }, []);\n\n  const onSubmit = async (values: IBusiness) => {\n    if (business && business.id) {\n      const response =await new BusinessService().update(values, business.id)\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      console.log('respuesta', response);\n    }\n  }\n\n  if(!business) {\n    return <LoadingView />\n  }\n\n  const initialValues : IBusiness = {\n    name: business.name ? business.name : '',\n    businessCategoryId: business.businessCategoryId ? business.businessCategoryId : 0,\n    phone: business.phone ? business.phone : ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box w='70%'>\n          <Heading as='h2' size='md' mb={8}>Datos básicos</Heading>\n          <Formik initialValues={initialValues} onSubmit={onSubmit} validate={businessValidation}>\n            { (({ isSubmitting, values, handleChange, errors }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                  <InputField inputSize='lg' name='name' label='Nombre del negocio' />\n                  <FormControl isInvalid={!!errors.businessCategoryId}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Categoría</FormLabel>\n                    <Select name='businessCategoryId' size='lg' value={values.businessCategoryId} onChange={handleChange}>\n                      <option value='0' >Selecciona una categoría</option>\n                      <option value='1' >Salon</option>\n                      <option value='2' >Spa</option>\n                      <option value='3' >Barberia</option>\n                      <option value='4' >Tatuajes</option>\n                      <option value='5' >Maquillaje</option>\n                      <option value='6' >Podologia</option>\n                      <option value='7' >Servicios para el hogar</option>\n                      <option value='8' >Servicios para el mascotas</option>\n                    </Select>\n                    { errors.businessCategoryId && <FormErrorMessage>{errors.businessCategoryId}</FormErrorMessage> }\n                  </FormControl>\n                  <InputField inputSize='lg' name='phone' label='Teléfono de contacto (opcional)' />\n                  {/* <HStack spacing={3} w='100%'>\n                    <InputField inputSize='lg' name='category' label='Horario de apertura' />\n                    <InputField inputSize='lg' name='category' label='Horario de clausura' />\n                  </HStack> */}\n                  <Button variant='primary' size='lg' type='submit' isLoading={isSubmitting}>\n                    Guardar\n                  </Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/userService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/ContainerPage.tsx",[],["197","198"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/HttpClient.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingInformation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/business/AddressForm.tsx",["199"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport { BusinessAddressService } from '../../services/businessAddressService';\nimport { TOKEN_MAPBOX } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { BusinessAddress, BusinessAddressResponse } from '../../types/BusinessAddress';\n\ninterface AddressFormProps {\n  handleSaveAddress: any\n  business: Required<IBusiness>\n}\n\nexport const AddressForm: React.FC<AddressFormProps> = ({ handleSaveAddress, business }) => {\n  \n  const [address, setAddresss] = useState<BusinessAddress | null>(null);\n  \n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [latLng, setLatLng] = useState({ lng: -74.5, lat: 40 });\n  const [map, setMap] = useState<mapboxgl.Map | null>(null);\n  const [mrk, setMrk] = useState<mapboxgl.Marker | null>(null);\n\n  const mapContainer = useRef<any>(null);\n  \n  const fetchAddress = async (map: Map) => {\n    const { success, address } = await new BusinessAddressService().get(business.id);\n    if (success && address) {\n      setAddresss(address);\n      setGeoAddress(address.addressMap);\n      setLatLng({ lat: address.lat, lng: address.lng });\n\n      if (map) {\n        map.jumpTo({ center: [address.lng, address.lat], zoom: 16 });\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([address.lng, address.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        setMrk(marker);\n      }\n    }\n  }\n\n  useEffect(() => {\n    mapboxgl.accessToken = TOKEN_MAPBOX;\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n      center: [-100.3161126, 25.6866142], // starting position [lng, lat]\n      zoom: 16 // starting zoom\n    });\n    setMap(map);\n\n    \n    map.on('load', function() {\n      fetchAddress(map);\n    });\n\n  }, [])\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (business.id) {\n      if (address?.id) {\n        response = await new BusinessAddressService().update({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress }, business.id, address.id);\n      } else {\n        response = await new BusinessAddressService().create({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress }, business.id);\n      }\n      if (response.success && response.address) {\n        setAddresss(response.address);\n      }\n      \n      if (handleSaveAddress) {\n        handleSaveAddress();\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    const latLng = await getLatLng(results[0]);\n    setLatLng(latLng);\n    if (map) {\n      \n      // map.jumpTo({ 'center': [latLng.lng, latLng.lat], 'zoom': 14 });\n      map.jumpTo({ center: [latLng.lng, latLng.lat], zoom: 16 });\n\n      if (!mrk) {\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([latLng.lng, latLng.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        setMrk(marker);\n      } else {\n        mrk.setLngLat([latLng.lng, latLng.lat]);\n      }\n      \n    }\n  }\n\n  const onDragEnd = (marker: Marker) => {\n    var lngLat = marker.getLngLat();\n    setLatLng(lngLat);\n    console.log('NUEVAS CORDENADAS', lngLat);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        { (({ isSubmitting }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10}>\n              <VStack w='100%' align='flex-start'>\n                <Text fontWeight='bold'>Ingresa la dirección completa de tu negocio</Text>\n                <PlacesAutocomplete\n                  value={geoAddress}\n                  onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                  onSelect={handleSelect}\n                  searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                >\n                  { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                      <Box w='100%'>\n                        <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                        <Box shadow='md' background='#FFFFFF'>\n                          { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                          {suggestions.map(suggestion => {\n                            return (\n                              <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                <Text fontWeight='bold'>{suggestion.description}</Text>\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      </Box>\n                  )) }\n                </PlacesAutocomplete>\n              </VStack>\n            </Flex>\n            <Box>\n              <Box w='100%' h='200px' ref={el => (mapContainer.current = el)}></Box>\n              {/* <Text fontWeight='bold' fontSize='xs' mt={2}>Mueve el marcador si es necesario pero asegurate que este en el lugar correcto.</Text> */}\n              <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n              \n            </Box>\n\n            <Flex mt={4} align='flex-end' justifyContent='flex-end'>\n              <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Siguiente</Button>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n      \n      {/* <Box w='100%' h='200px' id='map'></Box> */}\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessAddressService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/reportWebVitals.ts",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Signup.tsx",["200"],"import React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\nimport { AlertError } from '../components/general/AlertError';\nimport { signupValidation } from '../validations/signupValidation';\n\ninterface SignupProps {}\n\nexport const Signup: React.FC<SignupProps> = ({}) => {\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.signup(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n      return;\n    }\n\n    history.push('/');\n\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Bienvenido</Heading>\n        <Text mt={2} fontWeight='bold'>Registrate y obten 3 meses gratis.</Text>\n        <Box mt={4}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={signupValidation}>\n            {({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={4}>\n                  <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' />\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Registrate</Button>\n\n                  { error && <AlertError description={error} /> }\n\n                  <Text as=\"em\" fontSize='sm'>Al registrarte, confirmas que aceptas los <Link href='#' color=\"teal.500\">Términos y condiciones</Link> y la <Link href='#' color=\"teal.500\">Política de privacidad</Link>.</Text>\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿Ya tienes tu cuenta?{\" \"}\n                    <Link as={Lnk} to='/login' color='primary' fontWeight='bold'>\n                      Iniciar sesion\n                    </Link>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Header.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/constants.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/App.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingServices.tsx",["201"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingSuccess.tsx",["202"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/BookingCalendar.tsx",["203"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Wrapper.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Sidebar.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/WrapperSettings.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingHours.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/signupValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/businessValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAddress.tsx",["204","205"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Box, Button, Heading, HStack, useToast, VStack , Text} from '@chakra-ui/react';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddress } from '../types/BusinessAddress';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { InputField } from '../components/general/InputField';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\ninterface SettingsAddressProps {}\n\nexport const SettingsAddress: React.FC<SettingsAddressProps> = () => {\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n  \n  useEffect(() => {\n    const fetchAddress = async () => {\n      const { address } = await new BusinessAddressService().get(businessContext.id);\n      if (address) {\n        setAddress(address);\n      }\n      console.log('Direccion', address);\n    }\n\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async (values: any) => {\n    if (businessContext && businessContext.id && address?.id) {\n      console.log('Id de negocio', businessContext.id, values);\n      const { success } = await new BusinessAddressService().update(values, businessContext.id, address.id);\n      if (success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  if (!address) {\n    return <LoadingView />\n  }\n\n  const initialValues = {\n    street: address.street ? address.street : '',\n    area: address.area ? address.area : '',\n    city: address.city ? address.city : '',\n    state: address.state ? address.state : '',\n    zipcode: address.zipcode ? address.zipcode : '',\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Dirección</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Esta información es utilizada  si la ubicación por coordenadas no es precisa, así que es recomendable ingresarla.</Text>\n        <Box w='80%'>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            { (({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='street' label='Calle y número' />\n                  <InputField inputSize='lg' name='area' label='Colonia' />\n                </HStack>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='city' label='Municipio' />\n                  <InputField inputSize='lg' name='state' label='Estado' />\n                </HStack>\n                <HStack spacing={4} w='49%'>\n                  <InputField inputSize='lg' name='zipcode' label='Codigo postal' />\n                </HStack>\n                <Button variant='primary' type='submit' size='lg' isLoading={isSubmitting}>Guardar</Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsLocation.tsx",["206"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsServices.tsx",["207","208","209"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/loginValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceList.tsx",["210"],"import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { IService } from '../../types/IService';\nimport { ServiceItem } from './ServiceItem';\n\ninterface ServiceListProps {\n  services: IService[]\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceList: React.FC<ServiceListProps> = ({ services, handleEditService, handleDeleteService }) => {\n  return (\n    <Box shadow='sm'>\n      { services.map((item) => (\n        <ServiceItem\n          service={item}\n          handleEditService={handleEditService}\n          handleDeleteService={handleDeleteService}\n          key={item.id}\n        />\n      )) }\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceItem.tsx",["211","212","213","214"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ModalNewService.tsx",["215","216","217","218"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceForm.tsx",["219"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/LoadingView.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/newServiceValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/AlertError.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/calendar/Calendar.tsx",["220","221","222","223"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/DeleteServiceDialog.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsHour.tsx",["224","225","226"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatHoursDate.tsx",[],{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"227","replacedBy":"231"},{"ruleId":"229","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":21,"column":9,"nodeType":"235","messageId":"236","endLine":21,"endColumn":16},{"ruleId":"233","severity":1,"message":"237","line":12,"column":10,"nodeType":"235","messageId":"236","endLine":12,"endColumn":17},{"ruleId":"227","replacedBy":"238"},{"ruleId":"229","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":62,"column":6,"nodeType":"242","endLine":62,"endColumn":8,"suggestions":"243"},{"ruleId":"244","severity":1,"message":"245","line":15,"column":47,"nodeType":"246","messageId":"247","endLine":15,"endColumn":49},{"ruleId":"244","severity":1,"message":"245","line":13,"column":67,"nodeType":"246","messageId":"247","endLine":13,"endColumn":69},{"ruleId":"244","severity":1,"message":"245","line":9,"column":65,"nodeType":"246","messageId":"247","endLine":9,"endColumn":67},{"ruleId":"244","severity":1,"message":"245","line":8,"column":65,"nodeType":"246","messageId":"247","endLine":8,"endColumn":67},{"ruleId":"233","severity":1,"message":"237","line":11,"column":10,"nodeType":"235","messageId":"236","endLine":11,"endColumn":17},{"ruleId":"240","severity":1,"message":"248","line":31,"column":6,"nodeType":"242","endLine":31,"endColumn":8,"suggestions":"249"},{"ruleId":"240","severity":1,"message":"241","line":65,"column":6,"nodeType":"242","endLine":65,"endColumn":8,"suggestions":"250"},{"ruleId":"233","severity":1,"message":"251","line":1,"column":10,"nodeType":"235","messageId":"236","endLine":1,"endColumn":21},{"ruleId":"244","severity":1,"message":"245","line":17,"column":67,"nodeType":"246","messageId":"247","endLine":17,"endColumn":70},{"ruleId":"240","severity":1,"message":"252","line":38,"column":6,"nodeType":"242","endLine":38,"endColumn":8,"suggestions":"253"},{"ruleId":"233","severity":1,"message":"254","line":2,"column":15,"nodeType":"235","messageId":"236","endLine":2,"endColumn":19},{"ruleId":"233","severity":1,"message":"255","line":1,"column":15,"nodeType":"235","messageId":"236","endLine":1,"endColumn":21},{"ruleId":"233","severity":1,"message":"256","line":1,"column":23,"nodeType":"235","messageId":"236","endLine":1,"endColumn":30},{"ruleId":"233","severity":1,"message":"257","line":1,"column":38,"nodeType":"235","messageId":"236","endLine":1,"endColumn":44},{"ruleId":"233","severity":1,"message":"258","line":3,"column":10,"nodeType":"235","messageId":"236","endLine":3,"endColumn":29},{"ruleId":"233","severity":1,"message":"259","line":2,"column":87,"nodeType":"235","messageId":"236","endLine":2,"endColumn":98},{"ruleId":"233","severity":1,"message":"255","line":2,"column":100,"nodeType":"235","messageId":"236","endLine":2,"endColumn":106},{"ruleId":"233","severity":1,"message":"254","line":2,"column":108,"nodeType":"235","messageId":"236","endLine":2,"endColumn":112},{"ruleId":"233","severity":1,"message":"260","line":2,"column":114,"nodeType":"235","messageId":"236","endLine":2,"endColumn":127},{"ruleId":"233","severity":1,"message":"261","line":2,"column":65,"nodeType":"235","messageId":"236","endLine":2,"endColumn":72},{"ruleId":"233","severity":1,"message":"262","line":2,"column":8,"nodeType":"235","messageId":"236","endLine":2,"endColumn":16},{"ruleId":"233","severity":1,"message":"263","line":8,"column":7,"nodeType":"235","messageId":"236","endLine":8,"endColumn":11},{"ruleId":"244","severity":1,"message":"245","line":51,"column":51,"nodeType":"246","messageId":"247","endLine":51,"endColumn":53},{"ruleId":"233","severity":1,"message":"264","line":109,"column":9,"nodeType":"235","messageId":"236","endLine":109,"endColumn":13},{"ruleId":"233","severity":1,"message":"265","line":7,"column":10,"nodeType":"235","messageId":"236","endLine":7,"endColumn":19},{"ruleId":"233","severity":1,"message":"234","line":31,"column":9,"nodeType":"235","messageId":"236","endLine":31,"endColumn":16},{"ruleId":"240","severity":1,"message":"248","line":50,"column":6,"nodeType":"242","endLine":50,"endColumn":8,"suggestions":"266"},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],["267"],["268"],"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'Loading' is defined but never used.",["267"],["268"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAddress'. Either include it or remove the dependency array.","ArrayExpression",["269"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has a missing dependency: 'businessContext.id'. Either include it or remove the dependency array.",["270"],["271"],"'AlertDialog' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchServices'. Either include it or remove the dependency array.",["272"],"'Text' is defined but never used.","'Button' is defined but never used.","'Divider' is defined but never used.","'HStack' is defined but never used.","'CgChevronDoubleDown' is defined but never used.","'ModalFooter' is defined but never used.","'useDisclosure' is defined but never used.","'Heading' is defined but never used.","'ReactDOM' is defined but never used.","'cita' is assigned a value but never used.","'book' is assigned a value but never used.","'IBusiness' is defined but never used.",["273"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"274","fix":"278"},{"desc":"279","fix":"280"},{"desc":"276","fix":"281"},"Update the dependencies array to be: [fetchAddress]",{"range":"282","text":"283"},"Update the dependencies array to be: [businessContext.id]",{"range":"284","text":"285"},{"range":"286","text":"283"},"Update the dependencies array to be: [fetchServices]",{"range":"287","text":"288"},{"range":"289","text":"285"},[2178,2180],"[fetchAddress]",[1253,1255],"[businessContext.id]",[2517,2519],[1516,1518],"[fetchServices]",[1554,1556]]