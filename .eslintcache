[{"/Users/oscargracia/Documents/proyectos/boombook/manager/src/index.tsx":"1","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/theme.tsx":"2","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Signup.tsx":"3","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/NewBusiness.tsx":"4","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsServices.tsx":"5","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Booking.tsx":"6","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Wrapper.tsx":"7","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/ContainerPage.tsx":"8","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Loading.tsx":"9","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/signupValidation.tsx":"10","/Users/oscargracia/Documents/proyectos/boombook/manager/src/context/socketContext.tsx":"11","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/gallery/UploadGallery.tsx":"12","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/minutesToHours.tsx":"13","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessService.tsx":"14","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingHistoryList.tsx":"15","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ModalNewService.tsx":"16","/Users/oscargracia/Documents/proyectos/boombook/manager/src/hooks/useSocket.tsx":"17","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/propsToParams.tsx":"18","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/newServiceValidation.tsx":"19","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingSuccess.tsx":"20","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/businessValidation.tsx":"21","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/business/AddressForm.tsx":"22","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Home.tsx":"23","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Settings.tsx":"24","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAddress.tsx":"25","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Layout.tsx":"26","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/InputField.tsx":"27","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/WrapperSettings.tsx":"28","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingListNext.tsx":"29","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingsList.tsx":"30","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/userService.tsx":"31","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessAddressService.tsx":"32","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/gallery/UploadCover.tsx":"33","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatDate.tsx":"34","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/Welcome.tsx":"35","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/DeleteServiceDialog.tsx":"36","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/HttpClient.tsx":"37","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceForm.tsx":"38","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Login.tsx":"39","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsGallery.tsx":"40","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/loginValidation.tsx":"41","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Header.tsx":"42","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/LoadingView.tsx":"43","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceItem.tsx":"44","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/CalendarItem.tsx":"45","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingInformation.tsx":"46","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/bookingService.tsx":"47","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Sidebar.tsx":"48","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/hoursFilters.tsx":"49","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingHours.tsx":"50","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingServices.tsx":"51","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsLocation.tsx":"52","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingCalendar.tsx":"53","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatHoursDate.tsx":"54","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/AlertError.tsx":"55","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Bookings.tsx":"56","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/calendarText.tsx":"57","/Users/oscargracia/Documents/proyectos/boombook/manager/src/App.tsx":"58","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsHour.tsx":"59","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceList.tsx":"60","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/constants.tsx":"61","/Users/oscargracia/Documents/proyectos/boombook/manager/src/reportWebVitals.ts":"62","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/generateName.tsx":"63","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/welcomeValidation.tsx":"64","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/categoryService.tsx":"65","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingCover.tsx":"66","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Footer.tsx":"67","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Services.tsx":"68","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Customers.tsx":"69","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/customers/CustomerList.tsx":"70","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/customerService.tsx":"71","/Users/oscargracia/Documents/proyectos/boombook/manager/src/hooks/useMap.tsx":"72","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAdvanced.tsx":"73"},{"size":655,"mtime":1608599718469,"results":"74","hashOfConfig":"75"},{"size":2512,"mtime":1611880825710,"results":"76","hashOfConfig":"75"},{"size":2789,"mtime":1614027777591,"results":"77","hashOfConfig":"75"},{"size":3082,"mtime":1612568801766,"results":"78","hashOfConfig":"75"},{"size":3098,"mtime":1609729943959,"results":"79","hashOfConfig":"75"},{"size":6473,"mtime":1612744446300,"results":"80","hashOfConfig":"75"},{"size":428,"mtime":1608598132872,"results":"81","hashOfConfig":"75"},{"size":414,"mtime":1612488275317,"results":"82","hashOfConfig":"75"},{"size":465,"mtime":1608931363552,"results":"83","hashOfConfig":"75"},{"size":691,"mtime":1614027626710,"results":"84","hashOfConfig":"75"},{"size":823,"mtime":1611538033635,"results":"85","hashOfConfig":"75"},{"size":3672,"mtime":1612740535333,"results":"86","hashOfConfig":"75"},{"size":282,"mtime":1612390015542,"results":"87","hashOfConfig":"75"},{"size":1941,"mtime":1611873176852,"results":"88","hashOfConfig":"75"},{"size":2239,"mtime":1612744379224,"results":"89","hashOfConfig":"75"},{"size":855,"mtime":1609643196313,"results":"90","hashOfConfig":"75"},{"size":842,"mtime":1611536615242,"results":"91","hashOfConfig":"75"},{"size":187,"mtime":1611099986970,"results":"92","hashOfConfig":"75"},{"size":358,"mtime":1609558404865,"results":"93","hashOfConfig":"75"},{"size":1829,"mtime":1612565846189,"results":"94","hashOfConfig":"75"},{"size":345,"mtime":1609362204983,"results":"95","hashOfConfig":"75"},{"size":5783,"mtime":1612753899656,"results":"96","hashOfConfig":"75"},{"size":417,"mtime":1611032444180,"results":"97","hashOfConfig":"75"},{"size":3447,"mtime":1614207216012,"results":"98","hashOfConfig":"75"},{"size":3458,"mtime":1609376453185,"results":"99","hashOfConfig":"75"},{"size":4421,"mtime":1612667416433,"results":"100","hashOfConfig":"75"},{"size":2572,"mtime":1609556792115,"results":"101","hashOfConfig":"75"},{"size":11045,"mtime":1614276382417,"results":"102","hashOfConfig":"75"},{"size":2362,"mtime":1612743818540,"results":"103","hashOfConfig":"75"},{"size":4638,"mtime":1612743640017,"results":"104","hashOfConfig":"75"},{"size":555,"mtime":1609348998265,"results":"105","hashOfConfig":"75"},{"size":675,"mtime":1609281400176,"results":"106","hashOfConfig":"75"},{"size":2281,"mtime":1612677597078,"results":"107","hashOfConfig":"75"},{"size":392,"mtime":1612728956861,"results":"108","hashOfConfig":"75"},{"size":3747,"mtime":1614028996830,"results":"109","hashOfConfig":"75"},{"size":2076,"mtime":1612678001090,"results":"110","hashOfConfig":"75"},{"size":753,"mtime":1608697602026,"results":"111","hashOfConfig":"75"},{"size":3371,"mtime":1609728292711,"results":"112","hashOfConfig":"75"},{"size":2568,"mtime":1609356265362,"results":"113","hashOfConfig":"75"},{"size":1126,"mtime":1611810714786,"results":"114","hashOfConfig":"75"},{"size":465,"mtime":1608745602962,"results":"115","hashOfConfig":"75"},{"size":1729,"mtime":1612566620091,"results":"116","hashOfConfig":"75"},{"size":339,"mtime":1609375491142,"results":"117","hashOfConfig":"75"},{"size":1401,"mtime":1609730159504,"results":"118","hashOfConfig":"75"},{"size":396,"mtime":1612489440550,"results":"119","hashOfConfig":"75"},{"size":1336,"mtime":1612677530012,"results":"120","hashOfConfig":"75"},{"size":669,"mtime":1612743653362,"results":"121","hashOfConfig":"75"},{"size":1747,"mtime":1612723454496,"results":"122","hashOfConfig":"75"},{"size":489,"mtime":1612754124672,"results":"123","hashOfConfig":"75"},{"size":4963,"mtime":1614029398902,"results":"124","hashOfConfig":"75"},{"size":4177,"mtime":1612548806841,"results":"125","hashOfConfig":"75"},{"size":5284,"mtime":1612753064269,"results":"126","hashOfConfig":"75"},{"size":4575,"mtime":1614030317986,"results":"127","hashOfConfig":"75"},{"size":922,"mtime":1611102843776,"results":"128","hashOfConfig":"75"},{"size":470,"mtime":1608703263232,"results":"129","hashOfConfig":"75"},{"size":1521,"mtime":1612743988831,"results":"130","hashOfConfig":"75"},{"size":324,"mtime":1611030897823,"results":"131","hashOfConfig":"75"},{"size":3346,"mtime":1614276448158,"results":"132","hashOfConfig":"75"},{"size":6376,"mtime":1614276559120,"results":"133","hashOfConfig":"75"},{"size":664,"mtime":1609645792759,"results":"134","hashOfConfig":"75"},{"size":299,"mtime":1612330165569,"results":"135","hashOfConfig":"75"},{"size":425,"mtime":1608597130937,"results":"136","hashOfConfig":"75"},{"size":103,"mtime":1612397106719,"results":"137","hashOfConfig":"75"},{"size":422,"mtime":1614028793054,"results":"138","hashOfConfig":"75"},{"size":275,"mtime":1612496779763,"results":"139","hashOfConfig":"75"},{"size":1012,"mtime":1612672937296,"results":"140","hashOfConfig":"75"},{"size":1493,"mtime":1612583171200,"results":"141","hashOfConfig":"75"},{"size":2824,"mtime":1612723883601,"results":"142","hashOfConfig":"75"},{"size":1719,"mtime":1612728452038,"results":"143","hashOfConfig":"75"},{"size":933,"mtime":1612728742684,"results":"144","hashOfConfig":"75"},{"size":327,"mtime":1612724842502,"results":"145","hashOfConfig":"75"},{"size":1492,"mtime":1612753916288,"results":"146","hashOfConfig":"75"},{"size":3841,"mtime":1614285018154,"results":"147","hashOfConfig":"75"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},"1n66cqf",{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"150"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"153"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"170"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"153"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"150"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"150"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"150"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"153"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"173"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"246"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"252"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"153"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"173"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"246"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"246"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"153"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"153"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"196"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"153"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"182"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"170"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"299","messages":"300","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"173"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"315"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"173"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"246"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"196"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"246"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"173"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"153"},"/Users/oscargracia/Documents/proyectos/boombook/manager/src/index.tsx",[],["337","338"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/theme.tsx",[],["339","340"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Signup.tsx",["341"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/NewBusiness.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsServices.tsx",["342","343","344"],"import { AlertDialog, Box, Button, Flex, Heading, Spacer, Text, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { DeleteServiceDialog } from '../components/services/DeleteServiceDialog';\nimport { ModalNewService } from '../components/services/ModalNewService';\nimport { ServiceList } from '../components/services/ServiceList';\nimport { BusinessService } from '../services/businessService';\nimport { IService } from '../types/IService';\n\ninterface SettingsServicesProps {\n  \n}\n\nexport const SettingsServices: React.FC<SettingsServicesProps> = ({ }) => {\n  // Hooks\n  const { onOpen, isOpen, onClose } = useDisclosure()\n  const businessContext = useContext(UserContext);\n\n  // States\n  const [services, setServices] = useState<IService[]>([])\n  const [service, setService] = useState<IService>()\n  const [isLoading, setIsLoading] = useState(true);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const fetchServices = async  () => {\n    const { success, services } = await new BusinessService().getServices(businessContext.id);\n    if (success && services) {\n      setServices(services);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetchServices();\n  }, []);\n\n  const realodList = () => {\n    fetchServices();\n    onClose();\n  }\n\n  const handleCreateService = () => {\n    setService(undefined)\n    onOpen();\n  }\n\n  const handleEditService = (service: IService) => {\n    setService(service);\n    onOpen()\n    \n  }\n\n  const handleDeleteService = (service: IService) => {\n    setService(service);\n    setIsDeleteModal(true);\n  }\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ModalNewService isOpen={isOpen} onClose={onClose} realodList={realodList} service={service} />\n      { service &&  <DeleteServiceDialog isOpen={isDeleteModal} realodList={realodList} service={service} onClose={() => setIsDeleteModal(!isDeleteModal)} /> }\n      <ContainerPage title='Configuración'>\n        <WrapperSettings>\n          <Flex direction='row' align='center'>\n            <Box>\n              <Heading as='h2' size='md' mb={2}>Servicios</Heading>\n              <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Añade tantos servicios necesites para que tus clientes sepan todo lo que ofreces.</Text>\n            </Box>\n            <Spacer />\n            <Box>\n              <Button variant='primary' onClick={handleCreateService}>Nuevo servicio</Button>\n            </Box>\n          </Flex>\n          <Box>\n            <ServiceList\n              services={services}\n              handleEditService={handleEditService}\n              handleDeleteService={handleDeleteService}\n              />\n          </Box>\n        </WrapperSettings>\n      </ContainerPage>\n    </>\n  );\n}",["345","346"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Booking.tsx",["347","348","349","350","351","352","353"],"import React, { useEffect, useState } from 'react'\nimport { Box, Button, Container, Flex, Heading, HStack, IconButton, Spacer, Stack, Text, Tooltip, useToast, VStack } from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { IBooking } from '../types/IBooking';\nimport { BookingService } from '../services/bookingService';\nimport { formatDateLG } from '../utils/formatDate';\nimport { minutesToHour } from '../utils/minutesToHours';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { IBookingService } from '../types/IBookingService';\n\ninterface BookingProps {}\n\n// Datos de clioente\n/**\n Nombre\n Telefono,\n\n Fecha\n Hora\n Mensaje\n\n Servicios\n\n Acciones\n  Aceptar\n  Rechazar\n  Contactar\n*/\n\nexport const Booking: React.FC<BookingProps> = ({}) => {\n\n  // hooks\n  const { id } :any = useParams();\n  const toast = useToast();\n\n  // state\n  const [booking, setBooking] = useState<Required<IBooking>>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchBooking = async () => {\n    const { success, booking } = await new BookingService().get(id)\n    if (success) {\n      setBooking(booking);\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchBooking();\n  }, []);\n\n  const handleToAcept = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().accepted(id);\n      if (response.success) {\n        fetchBooking();\n      }\n      setIsLoading(false);\n      console.log('respues de reservacion', response);\n    }    \n  }\n\n  const handleToCancel = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().canceled(id);\n      if (response.success) {\n        fetchBooking();\n      }\n      console.log('Respuesta de servicio', response);\n      setIsLoading(false);\n      toast({\n        status: 'error',\n        title: 'Servicio rechazado',\n        position: 'top',\n      })\n      \n    }\n  }    \n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  if (!booking) {\n    return (\n      <Text>Servicio no encontrado</Text>\n    )\n  }\n\n  const colorStatus = (statusId :number) => {\n    switch (statusId) {\n      case 1:\n        return '#D69E2E'\n      case 2:\n        return 'primary'\n      case 3:\n        return 'error'\n      default:\n        break;\n    }\n  }\n  \n  return (\n    <>\n      <Box bg={colorStatus(booking.bookingStatusId)} color='#FFF' py={6} px={12} borderBottomWidth={1} borderColor='borders'>\n        <VStack align='left' justify='flex-start'>\n          <Heading as='h1'>{booking.customer.firstName} {booking.customer.lastName}</Heading>\n          <Text color='#FFF'>Teléfono: {booking.customer.phone}</Text>\n          <Text color='#FFF'>Fecha de solicitud: {formatDateLG(booking.createdAt)}</Text>\n        </VStack>\n      </Box>\n      \n      <ContainerPage>\n        <Flex justify='space-between'>\n          <Flex direction='column' w='62%'>\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders' mb={6}>\n              <Heading as='h4' fontSize='2xl' mb={6}>Resumen del servicio</Heading>\n\n              { booking.message &&\n              <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                <Text fontSize='sm' fontWeight='600' color='subtext'>Comentario</Text>\n                <Text as='cite'>{booking.message}</Text>\n              </VStack>\n              }\n              <HStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Fecha de servicio</Text>\n                  <Text fontWeight='600'>{formatDateLG(booking.bookingDate)}</Text>\n                </VStack>\n              </HStack>\n              <HStack spacing={10}>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Tiempo de servicio</Text>\n                  <Text fontWeight='600'>{minutesToHour(booking.totalTime)}</Text>\n                </VStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Total a cobrar</Text>\n                  <Text fontWeight='600'>${booking.totalPrice}MXN</Text>\n                </VStack>\n              </HStack>\n            </Box>\n\n            <Box bg='surface' py={6} px={6} w='100%' borderWidth={1} borderColor='borders'>\n              <Heading as='h4' fontSize='2xl' mb={6}>Servicios</Heading>\n              <Stack mb={3} w='100%'>\n                { booking.bookingService.map((item: IBookingService) => (\n                  <Flex align='center' justify='space-evenly' flex='100%'>\n                    <Text fontSize='md' fontWeight='semibold' w='260px'>{item.nameService}</Text>\n                    <Spacer />\n                    <Flex alignSelf='center'>\n                      <Box w='15px' />\n                      <Flex direction='column'>\n                        <Text fontSize='xs' pr='10px'>${item.priceService}MXN</Text>\n                        <Text fontSize='xs' pr='10px'>{item.timeService}min</Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )) }\n              </Stack>\n            </Box>\n          </Flex>\n\n          <Box w='35%'>\n            { booking.bookingStatusId === 1 &&\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders'>\n              <Flex justifyContent='center' direction='column' alignItems='center'>\n                <Heading as='h4' fontSize='2xl'>Solicitud</Heading>\n                <Text mt={10} textAlign='center'>Oscar Alberto esta interesado en hacer una reservación. ¿Lo aceptas?</Text>\n                <VStack my={6} w='100%'>\n                  <Button variant='primary' isFullWidth size='lg' onClick={handleToAcept}>\n                    Aceptar\n                  </Button>\n                  <Button variant='outline' colorScheme='red' isFullWidth size='lg' onClick={handleToCancel}>\n                    Rechazar\n                  </Button>\n                </VStack>\n              </Flex>\n            </Box>\n            }\n          </Box>\n\n        </Flex>\n      </ContainerPage>\n    </>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Wrapper.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/ContainerPage.tsx",["354","355"],"import { Box, Flex, Heading, Text } from '@chakra-ui/react';\nimport React from 'react'\n\ninterface ContainerPageProps {\n  title?: string\n}\n\nexport const ContainerPage: React.FC<ContainerPageProps> = ({ title, children }) => {\n  return (\n    <Box p={6} py={4} w='100%' maxW='1920px'>\n      { title && <Heading as='h3' size='lg'>{title}</Heading> }\n      <Box mt={3}>\n        {children}\n      </Box>\n    </Box>\n  );\n}",["356","357"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Loading.tsx",[],["358","359"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/signupValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/context/socketContext.tsx",["360","361"],"import { position, useToast } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSocket } from '../hooks/useSocket';\nimport { formatDate } from '../utils/formatDate';\nimport { formatBookingDate } from '../utils/formatHoursDate';\n\nexport const SocketContext = React.createContext<any>(null);\n\nexport const SocketProvider: React.FC = ({ children }) => {\n  // hooks\n  const toast = useToast();\n  const { socket, online } = useSocket();\n  \n  socket.on('new-booking', (data :any) => {\n    console.log('Socket data', data);\n    \n    toast({\n      title: 'Nueva reservación',\n      description: `${formatDate(data.bookingDate)}`,\n      status: 'success',\n      position: 'top',\n    })\n  });\n  \n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      { children }\n    </SocketContext.Provider>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/gallery/UploadGallery.tsx",["362","363"],"import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormLabel, Text, useToast, Image, Wrap, IconButton } from '@chakra-ui/react';\nimport { RiDeleteBin6Line } from 'react-icons/ri'\n\nimport { BusinessService } from '../../services/businessService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface UploadGalleryProps {}\n\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg';\n\nexport const UploadGallery: React.FC<UploadGalleryProps> = ({}) => {\n  // hooks\n\n  // state\n  const [photos, setPhotos] = useState<object[]>([]);\n  const [isUploading, setIsUplaoding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetch = async () => {\n    const response = await new BusinessService().getPhotos();\n    if (response.success) {\n      const files = response.photos.map((item :any) => ({\n        image: item.file,\n        id: item.id,\n      }))\n\n      setPhotos(files);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, [])\n\n  \n\n  const onChangeGallery = async (e :any) => {\n    setIsUplaoding(true);\n    setIsLoading(true);\n    const files : FileList = e.target.files;\n    const newFiles = Array.from(files).map((item:any) => ({\n      image: URL.createObjectURL(item),\n      id: item.id,\n    }))\n    \n    const newPhotos = [...photos, ...newFiles]\n    setPhotos(newPhotos);\n\n    \n    for (let i = 0; i < files.length; i++) {\n      const dataFiles = new FormData();\n      dataFiles.append('file', files[i]);\n      const response = await new BusinessService().uplaodGallery(dataFiles);\n      console.log('Respuesta imagenes', response);\n    }\n    \n    \n\n    // if (response.success) {\n    //   toast({\n    //     title: \"Datos actualizados.\",\n    //     status: \"success\",\n    //     isClosable: true,\n    //     position: 'top'\n    //   });\n    // }\n    setIsUplaoding(false);\n    setIsLoading(false);\n  }\n\n  const handleDeletePhoto = async (id :number, index :number) => {\n    setIsLoading(true);\n    if (id) {\n      const response = await new BusinessService().deletePhoto(id);\n      if (response.success) {\n        setPhotos([\n          ...photos.splice(0, index),\n          ...photos.splice(index + 1),\n        ]);\n      }\n    }\n    setIsLoading(false);\n  }\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n  \n  return (\n    <>\n      <Box w='60%'>\n        <Text fontWeight='bold' mb={4}>Galeria</Text>\n        <Text fontSize='sm' color='subtext' mb={3}>Añade las fotos de tu negocio y local para que los usuarios conozcan tus servicios.</Text>\n        <Button variant='primary-outline' isLoading={isUploading} p={0} mt={4}>\n          <FormLabel w='100%' h='100%' htmlFor='files' m={0} p={2} px={4} >Añadir imagenes +</FormLabel>\n        </Button>\n        <input\n          type=\"file\"\n          id=\"files\" \n          name='files'\n          accept={acceptedFileTypes} \n          multiple\n          onChange={onChangeGallery}\n          style={{ display: 'none' }}\n        />\n      </Box>\n      <Box w='90%'>\n        <Wrap direction='row' flex={1} mt={4}>\n          { photos.map((photo :any, index :number) => (\n            <Box p={2} key={index} pos='relative' role='group'>\n              <Flex pos='absolute' w='200px' alignItems='flex-end' justifyContent='flex-end' p={2} display='none' _groupHover={{ display: 'flex' }}>\n                <IconButton size='sm' aria-label='Delete photo' icon={<RiDeleteBin6Line size={20} />} onClick={() => handleDeletePhoto(photo.id, index)} />\n              </Flex>\n              <Image w='200px' h='133px' objectFit=\"cover\" src={photo.image} />\n            </Box>\n          )) }\n        </Wrap>\n      </Box>\n    </>\n  );\n}",["364","365"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/minutesToHours.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingHistoryList.tsx",["366"],"import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption } from \"@chakra-ui/react\"\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface BookingsListHistoryProps {}\n\nexport const BookingsListHistory: React.FC<BookingsListHistoryProps> = ({}) => {\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      // const params = { startDate: moment(new Date()).toISOString() };\n      const params = {};\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  const statusColor = (id: number) : string => {\n    switch (id) {\n      case 1:\n        return 'yellow.500'\n      case 2:\n        return 'primary'\n      case 3:\n        return 'red.500'\n      default:\n        return 'primary'\n    }\n}\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Cálculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>#</Th>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n            <Th>Estatus</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td>{item.id}</Td>\n              <Td>{item.customer?.firstName} {item.customer?.lastName}</Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n              <Td color={statusColor(item.bookingStatus.id)}>{item.bookingStatus.name}</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ModalNewService.tsx",["367","368","369","370"],"import React from 'react'\nimport { Modal, ModalOverlay, ModalContent, ModalCloseButton, ModalHeader, ModalBody, ModalFooter, Button, Text, useDisclosure } from '@chakra-ui/react';\nimport { ServiceForm } from './ServiceForm';\nimport { IService } from '../../types/IService';\n\ninterface ModalNewServiceProps {\n  isOpen: boolean\n  onClose: any\n  realodList: any\n  service?: IService\n}\n\nexport const ModalNewService: React.FC<ModalNewServiceProps> = ({ isOpen, onClose, realodList, service }) => {  \n  return (\n    <Modal isOpen={isOpen} onClose={onClose} motionPreset='slideInBottom'>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Nuevo servicio</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <ServiceForm realodList={realodList} service={service} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/hooks/useSocket.tsx",["371","372","373","374"],"import { useEffect, useMemo, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { API_DOMAIN, URL_API } from '../config/constants';\n\n\nexport const useSocket = () => {\n    \n    const socket : Socket = io(API_DOMAIN, { transports: ['websocket'] });\n    const [ online, setOnline ] = useState(false);\n    \n    // socket.on('saludo', (data :any) => {\n    //   console.log('Datos de saludo', data);\n    // })\n\n    // useEffect(() => {\n    //     setOnline( socket.connected );\n    // }, [socket])\n\n    // useEffect(() => {\n    //     socket.on('connect', () => {\n    //       console.log('Socket conectado');\n          \n    //     });\n    // }, [ socket ])\n\n    // useEffect(() => {\n    //     socket.on('disconnect', () => setOnline( false ));\n    // }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}",["375","376"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/propsToParams.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/newServiceValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingSuccess.tsx",["377"],"import React, { useEffect, useState } from 'react'\nimport { Button, Flex, Heading, Text } from '@chakra-ui/react'\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport { APP_NAME } from '../../config/constants';\nimport { useHistory } from 'react-router-dom';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\n\ninterface BoardingSuccessProps {\n  \n}\n\nexport const BoardingSuccess: React.FC<BoardingSuccessProps> = ({ }) => {\n  const history = useHistory();\n\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  \n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  const publishBusiness = async () => {\n    const data : IBusiness = { isCompleted: true, isPublic: true };\n    if (business) {\n      const response = await new BusinessService().update(data, business.id);\n      if (response.success) {\n        history.push('/');\n      }\n    }\n  }\n\n  return (\n    <Flex align='center' direction='column' textAlign='center'>\n      <AiFillCheckCircle size={90} color='#25CB67' />\n      <Heading my={6} as='h2'>Completado</Heading>\n      <Text fontSize='xl' fontWeight='500' mb={3}>\n        Gracias por registrate en {APP_NAME}, toda la información registrada anteriormente puede ser modificada desde la página de configuración.\n      </Text>\n      <Text fontSize='md' fontWeight='500'>\n        Te sugerimos ir al módulo de configuración para que añadas más servicios y publiques tu galería de fotos.\n      </Text>\n      \n\n      <Button variant='primary' size='lg' mt={6} px={16} onClick={publishBusiness}>\n        Aceptar y publicar\n      </Button>\n    </Flex>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/businessValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/business/AddressForm.tsx",["378","379","380","381","382","383"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport { BusinessAddressService } from '../../services/businessAddressService';\nimport { TOKEN_MAPBOX } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { BusinessAddress, BusinessAddressResponse } from '../../types/BusinessAddress';\nimport { useGoogleMaps } from '../../hooks/useMap';\n\ninterface AddressFormProps {\n  handleSaveAddress: any\n  business: Required<IBusiness>\n}\n\nexport const AddressForm: React.FC<AddressFormProps> = ({ handleSaveAddress, business }) => {\n  \n  const [address, setAddresss] = useState<BusinessAddress | null>(null);\n  \n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [coords, setCoords] = useState({ lat: 25.6866142, lng: -100.3161126 });\n  \n  const [state, setState] = useState('');\n  const [city, setCity] = useState('');\n\n  const { refContainer, addMarker, changeLocation } = useGoogleMaps({ coords, setCoords });\n  \n  const fetchAddress = async () => {\n    const { success, address } = await new BusinessAddressService().get(business.id);\n    if (success && address) {\n      setAddresss(address);\n      setGeoAddress(address.addressMap);\n      setCoords({ lat: address.lat, lng: address.lng });\n      changeLocation({ lat: address.lat, lng: address.lng });\n      addMarker({ lat: address.lat, lng: address.lng });\n    }\n  }\n\n  useEffect(() => {\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (business.id) {\n      if (address?.id) {\n        response = await new BusinessAddressService().update({ lat: coords.lat, lng: coords.lng, addressMap: geoAddress, state, city }, business.id, address.id);\n      } else {\n        response = await new BusinessAddressService().create({ lat: coords.lat, lng: coords.lng, addressMap: geoAddress, state, city }, business.id);\n      }\n      if (response.success && response.address) {\n        setAddresss(response.address);\n      }\n      \n      if (handleSaveAddress) {\n        handleSaveAddress();\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    fillInAddress(results[0]);\n    \n    const latLng = await getLatLng(results[0]);\n    setCoords(latLng);\n    changeLocation(latLng);\n    addMarker(latLng);\n  }\n\n  const fillInAddress = (place: google.maps.GeocoderResult) => {\n    const addressComponent : google.maps.GeocoderAddressComponent[] = place.address_components;\n    for (var i = 0; i < addressComponent.length; i++) {\n      if (addressComponent[i].types[0] === 'locality') {\n        const locality : any = addressComponent[i];\n        console.log('locality', locality.long_name);\n        setCity(locality.long_name);\n      }\n      if (addressComponent[i].types[0] === 'administrative_area_level_1') {\n        const administrativeArea : any = addressComponent[i];\n        console.log('administrative_area_level_1', administrativeArea.long_name);\n        setState(administrativeArea.long_name);\n      }\n    }\n  }\n\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n  \n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        { (({ isSubmitting }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10}>\n              <VStack w='100%' align='flex-start'>\n                <Text fontWeight='bold'>Ingresa la dirección completa de tu negocio</Text>\n                <PlacesAutocomplete\n                  value={geoAddress}\n                  onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                  onSelect={handleSelect}\n                  searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                >\n                  { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                      <Box w='100%'>\n                        <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                        <Box shadow='md' background='#FFFFFF'>\n                          { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                          {suggestions.map(suggestion => {\n                            return (\n                              <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                <Text fontWeight='bold'>{suggestion.description}</Text>\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      </Box>\n                  )) }\n                </PlacesAutocomplete>\n              </VStack>\n            </Flex>\n            <Box>\n              <Box ref={refContainer} h='200px' w='100%' />\n              {/* <Text fontWeight='bold' fontSize='xs' mt={2}>Mueve el marcador si es necesario pero asegurate que este en el lugar correcto.</Text> */}\n              <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n              \n            </Box>\n\n            <Flex mt={4} align='flex-end' justifyContent='flex-end'>\n              <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Siguiente</Button>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n      \n      {/* <Box w='100%' h='200px' id='map'></Box> */}\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Home.tsx",["384"],"import React from 'react'\nimport { Box } from '@chakra-ui/react';\n\n// local components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { BookingCalendar } from '../components/booking/BookingCalendar';\n\n\ninterface HomeProps {}\n\nexport const Home: React.FC<HomeProps> = ({}) => {\n  return (\n    <ContainerPage>\n      <Box>\n        <BookingCalendar />\n      </Box>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Settings.tsx",["385"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAddress.tsx",["386","387"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Box, Button, Heading, HStack, useToast, VStack , Text} from '@chakra-ui/react';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddress } from '../types/BusinessAddress';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { InputField } from '../components/general/InputField';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\ninterface SettingsAddressProps {}\n\nexport const SettingsAddress: React.FC<SettingsAddressProps> = () => {\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n  \n  useEffect(() => {\n    const fetchAddress = async () => {\n      const { address } = await new BusinessAddressService().get(businessContext.id);\n      if (address) {\n        setAddress(address);\n      }\n      console.log('Direccion', address);\n    }\n\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async (values: any) => {\n    if (businessContext && businessContext.id && address?.id) {\n      console.log('Id de negocio', businessContext.id, values);\n      const { success } = await new BusinessAddressService().update(values, businessContext.id, address.id);\n      if (success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  if (!address) {\n    return <LoadingView />\n  }\n\n  const initialValues = {\n    street: address.street ? address.street : '',\n    area: address.area ? address.area : '',\n    city: address.city ? address.city : '',\n    state: address.state ? address.state : '',\n    zipcode: address.zipcode ? address.zipcode : '',\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Dirección</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Esta información es utilizada  si la ubicación por coordenadas no es precisa, así que es recomendable ingresarla.</Text>\n        <Box w='80%'>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            { (({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='street' label='Calle y número' />\n                  <InputField inputSize='lg' name='area' label='Colonia' />\n                </HStack>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='city' label='Municipio' />\n                  <InputField inputSize='lg' name='state' label='Estado' />\n                </HStack>\n                <HStack spacing={4} w='49%'>\n                  <InputField inputSize='lg' name='zipcode' label='Codigo postal' />\n                </HStack>\n                <Button variant='primary' type='submit' size='lg' isLoading={isSubmitting}>Guardar</Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Layout.tsx",["388"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/InputField.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/WrapperSettings.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingListNext.tsx",["389","390","391","392","393","394","395","396"],"import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip } from \"@chakra-ui/react\"\nimport moment from 'moment';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\ninterface BookingsListNextProps {}\n\nexport const BookingsListNext: React.FC<BookingsListNextProps> = ({}) => {\n  // hooks\n  const history = useHistory();\n  // state\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { status: 2, time: 10, dateEnd: moment(new Date()).toISOString() };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Cálculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>#</Th>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td>{item.id}</Td>\n              <Td\n                textDecor='underline'\n                onClick={() => history.push(`/bookings/${item.id}`)}\n                fontWeight='600'\n                _hover={{ bg: 'primaryLight', cursor: 'pointer' }}\n              >\n                {item.customer?.firstName} {item.customer?.lastName}\n              </Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingsList.tsx",["397","398","399"],"import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip, useToast } from \"@chakra-ui/react\"\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface BookingsListProps {}\n\n// Añadir toolt tip al tiempo y precio indicando que es el calculo basado en lo que registro el negocio\n\n// Este monto se basa en el precio de los servicios que registraste\n\nexport const BookingsList: React.FC<BookingsListProps> = ({}) => {\n  // hooks\n  const toast = useToast();\n  const history = useHistory();\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [bookingId, setBookingId] = useState(0)\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { status: 1, time: 10 };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  const handleToAcept = async (index :number, id? :number) => {\n    console.log('Booking id', id);\n    if (id) {\n      setBookingId(id);\n      const response = await new BookingService().accepted(id);\n      if (response.success) {\n        setBookings([\n          ...bookings.slice(0, index),\n          ...bookings.slice(index + 1)\n        ]);\n\n        toast({\n          status: 'success',\n          title: 'Servicio aceptado',\n          position: 'top',\n        })\n      }\n      setBookingId(0);\n    }    \n  }\n\n  const handleToCancel = async (index :number, id? :number) => {\n    if (id) {\n      setBookingId(id);\n      const response = await new BookingService().canceled(id);\n      if (response.success) {\n        setBookings([\n          ...bookings.slice(0, index),\n          ...bookings.slice(index + 1)\n        ]);\n\n        toast({\n          status: 'error',\n          title: 'Servicio rechazado',\n          position: 'top',\n        })\n      }\n      setBookingId(0);\n    }    \n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Cálculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>#</Th>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n            <Th />\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking, index :number) => (\n            <Tr fontSize='14px'>\n              <Td>{item.id}</Td>\n              <Td\n                textDecor='underline'\n                onClick={() => history.push(`/bookings/${item.id}`)}\n                fontWeight='600'\n                _hover={{ bg: 'primaryLight', cursor: 'pointer' }}\n              >\n                {item.customer?.firstName} {item.customer?.lastName}\n              </Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n              <Td>\n                <Flex>\n                  <Tooltip label=\"Aceptar\" fontSize=\"md\">\n                    <IconButton\n                      aria-label=\"Aceptar\"\n                      variant=\"ghost\"\n                      size='lg'\n                      fontSize=\"36px\"\n                      icon={<AiOutlineCheckCircle />}\n                      mr={1}\n                      onClick={() => handleToAcept(index, item.id)}\n                      isLoading={bookingId === item.id}\n                    />\n                  </Tooltip>\n                  <Tooltip label=\"Rechazar\" fontSize=\"md\">\n                    <IconButton\n                      aria-label=\"Aceptar\"\n                      variant=\"ghost\"\n                      size='lg'\n                      fontSize=\"36px\"\n                      icon={<AiOutlineCloseCircle />}\n                      mr={1}\n                      onClick={() => handleToCancel(index, item.id)}\n                      isLoading={bookingId === item.id}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/userService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessAddressService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/gallery/UploadCover.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatDate.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/Welcome.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/DeleteServiceDialog.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/HttpClient.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceForm.tsx",["400"],"import React, { useContext } from 'react'\nimport { Box, Button, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, VStack } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { InputField, TextareaField } from '../general/InputField'\nimport { NewServiceSchema } from '../../validations/newServiceValidation'\nimport { IService, IServiceResponse } from '../../types/IService'\nimport { BusinessService } from '../../services/businessService'\nimport { UserContext } from '../general/Layout'\n\ninterface ServiceFormProps {\n  realodList: any\n  service?: IService\n}\n\nexport const ServiceForm: React.FC<ServiceFormProps> = ({ realodList, service }) => {\n  const businessContext = useContext(UserContext);\n\n  const onSubmit = async (values: IService) => {\n    let response : IServiceResponse;\n    if (service?.id) {\n      response = await new BusinessService().updateService(values, service.id, businessContext.id);\n    } else {\n      response = await new BusinessService().createService(values, businessContext.id);\n    }\n    \n    console.log('respuesta', response);\n    if (response.success) {\n      if (realodList) {\n        realodList();\n      }\n    }\n  }\n\n  const initialValues = !service ? {\n    name: '',\n    description: '',\n    price: '',\n    time: '',\n  } : service;\n\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <VStack spacing={4}>\n              <InputField name='name' label='Nombre' />\n              <TextareaField name='description' label='Descripción (opcional)' />\n              <HStack>\n                <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                <FormControl isInvalid={!!errors.time}>\n                  <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                  <Select name='time' size='lg' placeholder=\"Seleccioné una duración\" value={values.time} onChange={handleChange}>\n                    <option value=\"15\">15 min.</option>\n                    <option value=\"30\">30 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"60\">1:00 hr.</option>\n                    <option value=\"75\">1:15 hr.</option>\n                    <option value=\"90\">1:30 hr.</option>\n                    <option value=\"105\">1:45 hr.</option>\n                    <option value=\"120\">2:00 hr.</option>\n                  </Select>\n                  { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                </FormControl>\n              </HStack>\n              <Button type='submit' isLoading={isSubmitting} variant='primary' alignSelf='end'>Guardar</Button>\n            </VStack>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}",["401","402"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Login.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsGallery.tsx",["403","404","405","406","407","408","409","410","411","412","413","414"],"import React, { HtmlHTMLAttributes, useEffect, useState } from 'react'\nimport { Text, Heading, Box, Flex, Image, Divider, Button, VStack, FormLabel, useToast } from '@chakra-ui/react';\n\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { UploadCover } from '../components/gallery/UploadCover';\nimport { UploadGallery } from '../components/gallery/UploadGallery';\n\ninterface SettingsGalleryProps {}\n\nexport const SettingsGallery: React.FC<SettingsGalleryProps> = () => {\n  \n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Fotos</Heading>\n\n        <Flex w='90%' justify='space-between' mt={4}>\n          <UploadCover />\n        </Flex>\n\n        <Divider my={6} />\n\n        <Flex w='100%' justify='space-between' direction='column'>\n          <UploadGallery />\n        </Flex>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}",["415","416"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/loginValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Header.tsx",["417"],"import { Flex, MenuButton, Spacer, Text, Menu, MenuList, MenuItem, Link } from '@chakra-ui/react';\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { APP_NAME } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { User } from '../../types/User';\n\nimport logo from '../../assets/logo-reserly-2.png';\n\ninterface HeaderProps {\n  user: User | null\n  business: IBusiness\n  logout: any\n}\n\nexport const Header: React.FC<HeaderProps> = ({ user, business, logout }) => {\n\n  if (!user) {\n    return (\n      <Flex bg='surface' align='center' justify='center' shadow='md' borderBottomColor='#DDD' borderWidth={1} py={4}>\n        <Text>{APP_NAME}</Text>\n        <Spacer />\n        <Text>Iniciar sesion</Text>\n      </Flex>\n    )\n  }\n  \n  return (\n    <Flex h='66px' bg='surface' align='center' justify='center' borderBottomColor='borders' borderBottomWidth={1} py={4} px={8}>\n      <Flex align='center' w='190px'>\n        <Link href=\"/\">\n          <img src={logo} alt=\"uorder\" width=\"120\" height=\"40\" />\n        </Link>\n      </Flex>\n      <Text fontWeight='semibold' color='subtext'>{business.name}</Text>\n      <Text fontWeight='bold' fontSize='xs' ml={4} color={business.isPublic ? 'primary' : 'yellow.300'}>\n        { business.isPublic ? 'Publicado' : 'No publicado' }\n        \n      </Text>\n      <Spacer />\n      <Menu>\n        {/* <Link href='/' size=\"sm\" variant=\"primary\" mx={3}>Modo cliente</Link> */}\n        <MenuButton as={Link} mx={3} variant='primary'>\n          Mi Cuenta\n        </MenuButton>\n        <MenuList zIndex={3} borderColor=\"#DDD\">\n          <MenuItem onClick={logout}>Cerrar sesión</MenuItem>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/LoadingView.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceItem.tsx",["418","419","420","421"],"import { Box, Button, Divider, Flex, HStack, IconButton, Menu, MenuButton, MenuItem, MenuList, Text } from '@chakra-ui/react';\nimport React from 'react'\nimport { CgChevronDoubleDown } from 'react-icons/cg';\nimport { CgMoreVerticalAlt } from 'react-icons/cg';\nimport { IService } from '../../types/IService';\n\ninterface ServiceItemProps {\n  service: IService\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceItem: React.FC<ServiceItemProps> = ({ service, handleEditService, handleDeleteService }) => {\n  return (\n    <Flex shadow='md' bg='surface' px={4} py={4} borderBottomWidth={1} borderBottomColor='borders' align='center'>\n      <Box w='50%'>\n        <Text size='xs' fontWeight='bold'>{service.name}</Text>\n        <Text fontSize='sm'>{service.description}</Text>\n      </Box>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>{service.time} min.</Text>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>${service.price}</Text>\n      <Box>\n        <Menu>\n          <MenuButton as={IconButton} icon={<CgMoreVerticalAlt />}/>\n          <MenuList>\n            {/* <MenuItem>Pausar</MenuItem> */}\n            <MenuItem onClick={() => handleEditService(service)} >Editar</MenuItem>\n            <MenuItem onClick={() => handleDeleteService(service)}>Eliminar</MenuItem>\n          </MenuList>\n        </Menu>\n      </Box>\n    </Flex>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/CalendarItem.tsx",["422"],"import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { User } from '../../types/User';\n\ninterface CalendarItemProps {\n  event: any\n}\n\nexport const CalendarItem: React.FC<CalendarItemProps> = ({ event }) => {\n  const { customer } = event;\n  return (\n    <Box>\n      <Text fontWeight='semibold' isTruncated>{customer.firstName} {customer.lastName}</Text>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingInformation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/bookingService.tsx",[],["423","424"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Sidebar.tsx",["425","426","427"],"import React from 'react'\nimport { Box, Flex, Image, Link, Text } from '@chakra-ui/react';\nimport {\n  CgCalendar,\n  CgHome,\n  CgUserList,\n  CgToolbox,\n  CgList,\n  CgCalendarDates,\n} from 'react-icons/cg';\nimport { Link as Lnk } from 'react-router-dom';\n\nimport ReserlyLogo from './../../assets/Reserly.png';\nimport { IBusiness } from '../../types/Business';\n\ninterface SidebarProps {\n  logout: any\n  business: IBusiness\n}\n\nconst MenuLink: React.FC<{ title: string, icon: any, href: string }> = ({title, icon, href}) => (\n  <Flex direction='row'>  \n    <Link as={Lnk} to={href} w='100%' _hover={{ bg: 'primary', color: '#FFFFFF' }} fontWeight='bold'>\n      <Flex direction='row' align='center' p={3} >\n        {icon()} <Text fontSize='sm' ml={5}>{title}</Text>\n      </Flex>\n    </Link>\n  </Flex>\n)\n\nexport const Sidebar: React.FC<SidebarProps> = ({ logout }) => {\n  return (\n    <Box w='210px' h='100vh' bg='surface' shadow='sm' borderRightWidth={1} borderRightColor='borders' pos='sticky' top='0' left='0'>\n      {/* <Flex py={3} textAlign='center' justify='center' align='center'>\n        <Image src={ReserlyLogo} alt='Reserly' h='64px' />\n      </Flex> */}\n\n      <Box mt={3}>\n        <MenuLink title='Calendario' icon={CgCalendarDates} href='/' />\n        {/* <MenuLink title='Calendario' icon={CgCalendar} href='/calendar' /> */}\n        <MenuLink title='Reservaciones' icon={CgCalendar} href='/bookings' />\n        <MenuLink title='Servicios' icon={CgList} href='/services' />\n        <MenuLink title='Clientes' icon={CgUserList} href='/customers' />\n        {/* <MenuLink title='Clientes' icon={CgUserList} href='/customers' /> */}\n        <MenuLink title='Configuración' icon={CgToolbox} href='/settings' />\n      </Box>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/hoursFilters.tsx",["428","429"],"import { IHour } from \"../types/IHour\";\n\nexport const getMin = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openFrom && b.openFrom) {\n      return a.openFrom.localeCompare(b.openFrom);\n    }\n  });\n\n  return hours[0].openFrom;\n}\n\nexport const getMax = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openTill && b.openTill) {\n      return b.openTill.localeCompare(a.openTill);\n    }\n  });\n\n  console.log('Orden get max', hours);\n\n  return hours[0].openTill;\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingHours.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingServices.tsx",["430"],"import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, Text, VStack } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, Formik } from 'formik';\nimport { InputField } from '../general/InputField';\nimport { BusinessService } from '../../services/businessService';\nimport { IService } from '../../types/IService';\nimport { IBusiness } from '../../types/Business';\nimport { NewServiceSchema } from '../../validations/newServiceValidation';\n\ninterface BoardingServicesProps {}\n\nexport const BoardingServices: React.FC<BoardingServicesProps> = ({}) => {\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n\n  const history = useHistory()\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  const onSubmit = async (values: IService) => {\n    if (business) {\n      const { success } = await new BusinessService().createService(values, business.id)\n      if (success) {\n        history.push('/new-business/4');\n      }\n    }\n  }\n\n  const initialValue = {\n    name: '',\n    description: '',\n    time: '',\n    price: '',\n  }\n\n  return (\n    <Box textAlign='center'>\n    <Heading as='h2'>¿Qué servicios realizas?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Añade un servicio para empezar a utilizar Boombook</Text>\n      \n      <Formik initialValues={initialValue} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <Flex align='center' w='100%' justify='center' mt={10}>\n              <VStack w='70%' spacing={3}>\n                <InputField inputSize='lg' name='name' label='Nombre del servicio' />\n                <InputField inputSize='lg' name='description' label='Descripción' />\n                <HStack w='100%' direction='row' justify='space-between'>\n                  <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                  {/* <InputNumberField inputSize='lg' name='Precio' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  {/* <InputField inputSize='lg' name='time' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  <FormControl isInvalid={!!errors.time}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                    <Select name='time' size='lg' placeholder=\"Seleccione la duración\" value={values.time} onChange={handleChange}>\n                      <option value=\"15\">15 min.</option>\n                      <option value=\"30\">30 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"60\">1:00 hr.</option>\n                      <option value=\"75\">1:15 hr.</option>\n                      <option value=\"90\">1:30 hr.</option>\n                      <option value=\"105\">1:45 hr.</option>\n                      <option value=\"120\">2:00 hr.</option>\n                      <option value=\"135\">2:15 hr.</option>\n                      <option value=\"140\">2:30 hr.</option>\n                    </Select>\n                    <FormErrorMessage>{errors.time}</FormErrorMessage>\n                  </FormControl>\n                </HStack>\n                <Button size='lg' alignSelf='flex-end' variant='primary' type='submit' isLoading={isSubmitting}>Siguiente</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsLocation.tsx",["431","432","433","434","435","436","437","438"],"import React, { useContext, useRef, useState, useEffect } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button, useToast, Heading } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { BusinessAddress, BusinessAddressResponse } from '../types/BusinessAddress';\nimport { TOKEN_MAPBOX } from '../config/constants';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { useGoogleMaps } from '../hooks/useMap';\n\ninterface SettingsLocationProps {\n\n}\n\nexport const SettingsLocation: React.FC<SettingsLocationProps> = () => {\n  // Contexto\n  const businessContext = useContext(UserContext);\n  \n  // Hooks\n  const toast = useToast();\n  \n\n  // States\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [coords, setCoords] = useState({ lat: 25.6866142, lng: -100.3161126 });\n\n  const [isLoading, setIsLoading] = useState(true);\n  \n  const { refContainer, addMarker, changeLocation } = useGoogleMaps({ coords, setCoords });\n  \n  const fetchAddress = async () => {\n    const { success, address } = await new BusinessAddressService().get(businessContext.id);\n    if (success && address) {\n      setAddress(address);\n      setGeoAddress(address.addressMap);\n      setCoords({ lat: address.lat, lng: address.lng });\n      changeLocation({ lat: address.lat, lng: address.lng });\n      addMarker({ lat: address.lat, lng: address.lng });\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetchAddress();\n  }, [])\n\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (businessContext.id && address?.id) {\n      response = await new BusinessAddressService().update({ lat: coords.lat, lng: coords.lng, addressMap: geoAddress }, businessContext.id, address.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    const latLng = await getLatLng(results[0]);\n    \n    setCoords(latLng);\n    changeLocation(latLng);\n    addMarker(latLng);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Ubicación</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Ingresa correctamente esta\u0010 información, es la que visualizarán las personas para poder llegar a tu negocio</Text>\n        <Box>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n          { (({ isSubmitting }) => (\n            <Form>\n              <Flex aling='center' justify='center' mb={2}>\n                <VStack w='100%' align='flex-start'>\n                  <PlacesAutocomplete\n                    value={geoAddress}\n                    onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                    onSelect={handleSelect}\n                    searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                  >\n                    { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <Box w='100%'>\n                          <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                          <Box shadow='md' background='#FFFFFF'>\n                            { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                            {suggestions.map(suggestion => {\n                              return (\n                                <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                  <Text fontWeight='bold'>{suggestion.description}</Text>\n                                </Box>\n                              );\n                            })}\n                          </Box>\n                        </Box>\n                    )) }\n                  </PlacesAutocomplete>\n                </VStack>\n              </Flex>\n              <Box>\n                <Box ref={refContainer} h='200px' w='100%' />\n                <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n                \n              </Box>\n\n              <Flex mt={4} align='flex-start' justifyContent='flex-start'>\n                <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Guardar</Button>\n              </Flex>\n            </Form>\n          )) }\n        </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingCalendar.tsx",["439","440","441","442","443","444"],"import React, { HTMLAttributes, useContext, useEffect, useState } from 'react'\nimport { Box, Flex, HStack, Text } from '@chakra-ui/react';\nimport { Calendar, Event, EventPropGetter, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\n\nimport { IBooking } from '../../types/IBooking';\nimport { BookingService } from '../../services/bookingService';\nimport { formatBookingDate, formatHoursDate } from '../../utils/formatHoursDate';\nimport { messages } from '../../config/calendarText';\nimport { CalendarItem } from './CalendarItem';\n\nimport './BookingCalendar.css';\nimport { BusinessService } from '../../services/businessService';\nimport { UserContext } from '../general/Layout';\nimport { getMin, getMax } from '../../utils/hoursFilters';\nimport { useHistory } from 'react-router-dom';\n\nconst localizer = momentLocalizer(moment)\n\ninterface BookingCalendarProps {}\n\nexport const BookingCalendar: React.FC<BookingCalendarProps> = ({}) => {\n  // hooks\n  const history = useHistory();\n\n  // context\n  const businessContext = useContext(UserContext);\n  \n  // state\n  const [bookings, setBookings] = useState<Event[]>([]);\n  const [rangeTime, setRangeTime] = useState({ min: '00:00', max: '23:30' });\n\n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const hours1 = response.hours;\n        const hours2 = [...response.hours];\n        const min = getMin(hours1);\n        const max = getMax(hours2);\n\n        if (min && max) {\n          setRangeTime({ min, max });\n        }\n        \n        const newHours = formatHoursDate(response.hours);\n        // console.log('Horas', newHours);\n      }\n    }\n\n    fetchHours();\n  }, []);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const response = await new BookingService().getAll({ statuses: [1, 2] });\n      if (response.success) {\n        const bookingEvents = formatBookingDate(response.bookings);\n        setBookings(bookingEvents);\n      }\n    }\n    fetch();\n  }, []);\n\n  const onSelectEvent = (event :any) => {\n    console.log('Click en el evento', event);\n    if (event.id) {\n      history.push(`/bookings/${event.id}`);\n    }\n  }\n\n  const eventPropGetter = (event: any, _start: any, _end: any, _isSelected: any) : React.HTMLAttributes<HTMLDivElement> => {\n    \n    const style : React.CSSProperties = {\n      backgroundColor: event.bookingStatusId === 2 ? '#BDEFD1' : '#FEFCBF',\n      borderRadius: 0,\n      opacity: 1,\n      borderWidth: 0,\n      fontSize: '12px',\n      color: event.bookingStatusId === 2 ? '#16793D' : '#D69E2E',\n      borderLeftWidth: 5,\n      borderLeftColor: event.bookingStatusId === 2 ? '#05AF3C' : '#ECC94B',\n      flexDirection: 'column',\n      fontWeight: 'bold',\n    }\n    return {\n      style\n    }\n  }\n\n  const slotPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {}\n    return {\n      style\n    }\n  }\n\n  const slotGroupPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {\n      minHeight: '80px',\n    }\n    return {\n      style\n    }\n  }\n\n  const dayPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {\n      backgroundColor: '#FFF',\n    }\n    return {\n      style\n    }\n  }\n  \n  return (\n    <Box h='80vh'>\n      <Flex pb={2}>\n        <Flex mb={1}>\n          <HStack mr={3}>\n            <Box bg='primary' w={4} h={4} />\n            <Text fontSize='sm'>Aceptado</Text>\n          </HStack>\n          <HStack>\n            <Box bg='yellow.300' w={4} h={4} />\n            <Text fontSize='sm'>Pendiente</Text>\n          </HStack>\n        </Flex>\n      </Flex>\n      <Calendar\n        localizer={localizer}\n        events={bookings}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        timeslots={2}\n        step={15}\n        messages={messages}\n        eventPropGetter={eventPropGetter}\n        slotPropGetter={slotPropGetter}\n        slotGroupPropGetter={slotGroupPropGetter}\n        dayPropGetter={dayPropGetter}\n        components={{\n          event: CalendarItem\n        }}\n        defaultView='week'\n        views={{ week: true, day: true, agenda: true }}\n        min={moment(rangeTime.min, [moment.ISO_8601, 'HH:mm']).toDate()}\n        max={moment(rangeTime.max, [moment.ISO_8601, 'HH:mm']).toDate()}\n        onSelectEvent={onSelectEvent}\n      />\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatHoursDate.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/AlertError.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Bookings.tsx",["445"],"import { Box, Button, HStack, Text } from '@chakra-ui/react';\nimport React, { useState } from 'react'\nimport { BookingsListHistory } from '../components/booking/BookingHistoryList';\nimport { BookingsListNext } from '../components/booking/BookingListNext';\nimport { BookingsList } from '../components/booking/BookingsList';\nimport { ContainerPage } from '../components/general/ContainerPage';\n\ninterface BookingsProps {}\n\nconst MenuLink: React.FC<{ title: string, onClick: any, isActive: boolean }> = ({title, onClick, isActive}) => (\n  <Button bg={isActive ? 'primary' : ''} variant='ghost' fontWeight='bold' pr={6} onClick={onClick}>\n    <Text color={isActive ? '#FFF' : ''} fontSize='md'>{title}</Text>\n  </Button>\n)\n\nexport const Bookings: React.FC<BookingsProps> = ({}) => {\n  const [tab, setTab] = useState(1);\n\n  return (\n    <ContainerPage title='Reservaciones'>\n      <Box bg='surface' borderBottomWidth={1} borderColor='borders' py={3}>\n        <Box>\n          <HStack mt={4} borderBottomWidth={1} borderColor='borders' p={3}>\n            <MenuLink title='Pendientes' onClick={() => setTab(1)} isActive={tab === 1} />\n            <MenuLink title='Próximas' onClick={() => setTab(2)} isActive={tab === 2} />\n            <MenuLink title='Todas' onClick={() => setTab(3)} isActive={tab === 3} />\n          </HStack>\n          { tab === 1 && <BookingsList /> }\n          { tab === 2 && <BookingsListNext /> }\n          { tab === 3 && <BookingsListHistory /> }\n        </Box>\n      </Box>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/calendarText.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/App.tsx",["446"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsHour.tsx",["447","448","449"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceList.tsx",["450"],"import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { IService } from '../../types/IService';\nimport { ServiceItem } from './ServiceItem';\n\ninterface ServiceListProps {\n  services: IService[]\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceList: React.FC<ServiceListProps> = ({ services, handleEditService, handleDeleteService }) => {\n  return (\n    <Box shadow='sm'>\n      { services.map((item) => (\n        <ServiceItem\n          service={item}\n          handleEditService={handleEditService}\n          handleDeleteService={handleDeleteService}\n          key={item.id}\n        />\n      )) }\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/constants.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/reportWebVitals.ts",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/generateName.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/welcomeValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/categoryService.tsx",["451"],"import HttpClient from './HttpClient';\n\nimport { API_DOMAIN, URL_API } from \"../config/constants\";\n\nexport class CategoryService extends HttpClient {\n\n  public constructor() {\n    super(`${API_DOMAIN}/api/v1`);\n  }\n\n  public getAll = () => this.instance.get('/categories');\n}",["452","453"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingCover.tsx",["454"],"import { Box, Button, Flex, Heading, Text } from '@chakra-ui/react';\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { UploadCover } from '../gallery/UploadCover';\n\ninterface BoardingCoverProps {\n\n}\n\nexport const BoardingCover: React.FC<BoardingCoverProps> = ({}) => {\n  const history = useHistory();\n\n  const handleOnUpload = () => {\n    // history.push('/new-business/6');\n  }\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>Foto de portada</Heading>\n      <Text fontSize='xl' fontWeight='500'>Esta es la primera imagen que verán las personas, puede ser el logotipo de tu negocio, imagen de tu local o una imagen de un servicio.</Text>\n      <Flex w='100%' justify='space-between' mt={10}>\n        <UploadCover onUpload={handleOnUpload} />\n      </Flex>\n\n      <Box textAlign='right' mr={4}>\n        <Button size='lg' mt={10} variant='primary' onClick={() => history.push('/new-business/6')}>\n          Siguiente\n        </Button>\n      </Box>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Footer.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Services.tsx",["455","456"],"import { Box, Button, Flex, Spacer, Text, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { DeleteServiceDialog } from '../components/services/DeleteServiceDialog';\nimport { ModalNewService } from '../components/services/ModalNewService';\nimport { ServiceList } from '../components/services/ServiceList';\nimport { BusinessService } from '../services/businessService';\nimport { IService } from '../types/IService';\n\ninterface ServicesProps {\n  \n}\n\nexport const Services: React.FC<ServicesProps> = ({ }) => {\n  // Hooks\n  const { onOpen, isOpen, onClose } = useDisclosure()\n  const businessContext = useContext(UserContext);\n\n  // States\n  const [services, setServices] = useState<IService[]>([])\n  const [service, setService] = useState<IService>()\n  const [isLoading, setIsLoading] = useState(true);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const fetchServices = async  () => {\n    const { success, services } = await new BusinessService().getServices(businessContext.id);\n    if (success && services) {\n      setServices(services);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetchServices();\n  }, []);\n\n  const realodList = () => {\n    fetchServices();\n    onClose();\n  }\n\n  const handleCreateService = () => {\n    setService(undefined)\n    onOpen();\n  }\n\n  const handleEditService = (service: IService) => {\n    setService(service);\n    onOpen()\n    \n  }\n\n  const handleDeleteService = (service: IService) => {\n    setService(service);\n    setIsDeleteModal(true);\n  }\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ModalNewService isOpen={isOpen} onClose={onClose} realodList={realodList} service={service} />\n      { service &&  <DeleteServiceDialog isOpen={isDeleteModal} realodList={realodList} service={service} onClose={() => setIsDeleteModal(!isDeleteModal)} /> }\n      <ContainerPage title='Servicios'>\n        <Flex direction='row' align='center'>\n          <Box>\n            <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Añade tantos servicios necesites para que tus clientes conozcan todo lo que ofreces.</Text>\n          </Box>\n          <Spacer />\n          <Box>\n            <Button variant='primary' onClick={handleCreateService}>Nuevo servicio</Button>\n          </Box>\n        </Flex>\n        <Box>\n          <ServiceList\n            services={services}\n            handleEditService={handleEditService}\n            handleDeleteService={handleDeleteService}\n            />\n        </Box>\n      </ContainerPage>\n    </>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Customers.tsx",["457","458","459","460","461"],"import { Box, Flex, Spacer, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { IService } from '../types/IService';\nimport { CustomerService } from '../services/customerService';\nimport { ICustomer } from '../types/ICustomer';\nimport { CustomerList } from '../components/customers/CustomerList';\n\ninterface CustomersProps {\n  \n}\n\nexport const Customers: React.FC<CustomersProps> = ({ }) => {\n  // Hooks\n\n  // States\n  const [customers, setCustomers] = useState<ICustomer[]>([])\n  const [isLoading, setIsLoading] = useState(true);\n  \n  const fetch = async  () => {\n    const { success, customers } = await new CustomerService().getAll();\n    console.log('Clientes', customers);\n    \n    if (success && customers) {\n      setCustomers(customers);\n    }\n\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetch();\n  }, []);\n\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ContainerPage title={`Clientes (${customers.length})`}>\n        <Flex direction='row' align='center'>\n          {/* <Box>\n            <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Añade tantos servicios necesites para que tus clientes sepan todo lo que ofreces.</Text>\n          </Box> */}\n          <Spacer />\n        </Flex>\n        <Box bg='surface' borderBottomWidth={1} borderColor='borders' py={3}>\n          <CustomerList customers={customers} />\n        </Box>\n      </ContainerPage>\n    </>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/customers/CustomerList.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/customerService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/hooks/useMap.tsx",["462"],"import { useEffect, useRef } from \"react\";\n\nexport const useGoogleMaps = ({ coords, setCoords } : any) : any => {\n  const refContainer = useRef<any>();\n  const refMap = useRef<google.maps.Map>();\n  const refMarker = useRef<google.maps.Marker>();\n  \n  useEffect(() => {\n    const uluru = { lat: coords.lat, lng: coords.lng };\n    const map = new google.maps.Map(refContainer.current, {\n      center: uluru,\n      zoom: 17,\n      scrollwheel: false,\n      streetViewControl: false,\n      fullscreenControl: false,\n      mapTypeControl: false,\n      zoomControl: true,\n      disableDoubleClickZoom: true,\n      zoomControlOptions: { position: google.maps.ControlPosition.TOP_LEFT }\n    });\n\n      refMap.current = map;\n\n      map.addListener('dragend', () => {\n        const { lat, lng } = map.getCenter();\n        console.log('DRAGGEG', lat, lng);\n        \n        setCoords({ lat: lat(), lng: lng() });\n      });\n\n  }, []);\n\n  const addMarker = ({ lat, lng } : any) => {\n    if (refMap.current) {\n      const mark = new google.maps.Marker({ position: { lat, lng }, map: refMap.current, draggable: true })\n      refMarker.current = mark;\n      if (mark) {\n        mark.addListener('dragend', (e: any) => {\n          setCoords({ lat: e.latLng.lat(), lng: e.latLng.lng() })\n        });\n      }\n    } \n  }\n\n  const changeLocation = (coords :any) => {\n    if (refMap.current) {\n      refMap.current.setCenter(coords);\n    }\n  }\n\n  return {\n    refContainer,\n    addMarker,\n    changeLocation,\n  }\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAdvanced.tsx",["463","464","465","466","467","468","469","470","471","472","473","474","475","476","477"],"import React, { useState, useEffect, useContext } from 'react'\nimport { Heading, HStack, Text, Tooltip, FormControl, Select, Switch, IconButton, Box, Flex, VStack, Button, useToast, Stack, Spacer, Divider } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { FaDoorOpen, FaDoorClosed } from 'react-icons/fa';\n\n// Types\nimport { IBusiness } from '../types/Business';\n\n// services\nimport { BusinessService } from '../services/businessService';\nimport { formatHoursDate } from '../utils/formatHoursDate';\n\n// components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { IHour } from '../types/IHour';\n\n\ninterface SettingsAdvancedProps {\n\n}\n\nexport const SettingsAdvanced: React.FC<SettingsAdvancedProps> = () => {\n  // context\n  const businessContext = useContext(UserContext);\n\n  // Hooks\n  const history = useHistory()\n  const toast = useToast();\n\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const [hasBookingConfimation, setHasBookingConfimation] = useState(false);\n  const [hasParallelBookings, setHasParallelBookings] = useState(false);\n  const [isPublic, setIsPublic] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  \n  useEffect(() => {\n    const fetchBusiness = async () => {\n      const { business } = await new BusinessService().get();\n      console.log('Datos de negocio', business);\n      if (business) {\n        setBusiness(business);\n        setHasBookingConfimation(business.hasBookingConfimation);\n        setHasParallelBookings(business.hasParallelBookings);\n        setIsPublic(business.isPublic);\n      }\n      \n    }\n    fetchBusiness();\n  }, []);\n\n  const onSubmit = async () => {\n    setIsSubmitting(true);\n    if (business && business.id) {\n      const response = await new BusinessService().update({ isPublic, hasBookingConfimation, hasParallelBookings }, business.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      console.log('Respuesta de ', response);\n    }\n    setIsSubmitting(false);\n  }\n  \n  const initialValue = {}\n\n  if (!business) {\n    return <LoadingView />\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box>\n          <Heading as='h2' size='md' mb={2}>Configuraciones avanzadas</Heading>\n        </Box>\n        <Flex w='100%' mt={10}>\n          <VStack align=\"flex-start\" direction=\"row\" divider={<Divider />} spacing={6}>\n            <Flex w='450px'>\n              <Text fontWeight='500'>Permitir varias reservaciones a la misma hora</Text>\n              <Spacer />\n              <Switch size=\"md\" isChecked={hasParallelBookings} onChange={(e) => setHasParallelBookings(!hasParallelBookings)} />\n            </Flex>\n            {/* <Flex w='450px'>\n              <Text fontWeight='500'>Confirmar reservaciones</Text>\n              <Spacer />\n              <Switch size=\"md\" isChecked={hasBookingConfimation} onChange={(e) => setHasBookingConfimation(!hasBookingConfimation)} />\n            </Flex> */}\n            <Flex w='450px'>\n              <Text fontWeight='500'>Negocio público</Text>\n              <Spacer />\n              <Switch size=\"md\" isChecked={isPublic} onChange={(e) => setIsPublic(!isPublic)} />\n            </Flex>\n            <Button variant='primary' size='lg' onClick={onSubmit} isLoading={isSubmitting}>\n              Guardar\n            </Button>\n          </VStack>\n        </Flex>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}",{"ruleId":"478","replacedBy":"479"},{"ruleId":"480","replacedBy":"481"},{"ruleId":"478","replacedBy":"482"},{"ruleId":"480","replacedBy":"483"},{"ruleId":"484","severity":1,"message":"485","line":15,"column":47,"nodeType":"486","messageId":"487","endLine":15,"endColumn":49},{"ruleId":"488","severity":1,"message":"489","line":1,"column":10,"nodeType":"490","messageId":"491","endLine":1,"endColumn":21},{"ruleId":"484","severity":1,"message":"485","line":17,"column":67,"nodeType":"486","messageId":"487","endLine":17,"endColumn":70},{"ruleId":"492","severity":1,"message":"493","line":38,"column":6,"nodeType":"494","endLine":38,"endColumn":8,"suggestions":"495"},{"ruleId":"478","replacedBy":"496"},{"ruleId":"480","replacedBy":"497"},{"ruleId":"488","severity":1,"message":"498","line":2,"column":23,"nodeType":"490","messageId":"491","endLine":2,"endColumn":32},{"ruleId":"488","severity":1,"message":"499","line":2,"column":57,"nodeType":"490","messageId":"491","endLine":2,"endColumn":67},{"ruleId":"488","severity":1,"message":"500","line":2,"column":90,"nodeType":"490","messageId":"491","endLine":2,"endColumn":97},{"ruleId":"488","severity":1,"message":"501","line":4,"column":10,"nodeType":"490","messageId":"491","endLine":4,"endColumn":30},{"ruleId":"488","severity":1,"message":"502","line":4,"column":32,"nodeType":"490","messageId":"491","endLine":4,"endColumn":52},{"ruleId":"484","severity":1,"message":"485","line":33,"column":49,"nodeType":"486","messageId":"487","endLine":33,"endColumn":51},{"ruleId":"492","severity":1,"message":"503","line":53,"column":6,"nodeType":"494","endLine":53,"endColumn":8,"suggestions":"504"},{"ruleId":"488","severity":1,"message":"505","line":1,"column":15,"nodeType":"490","messageId":"491","endLine":1,"endColumn":19},{"ruleId":"488","severity":1,"message":"506","line":1,"column":30,"nodeType":"490","messageId":"491","endLine":1,"endColumn":34},{"ruleId":"478","replacedBy":"507"},{"ruleId":"480","replacedBy":"508"},{"ruleId":"478","replacedBy":"509"},{"ruleId":"480","replacedBy":"510"},{"ruleId":"488","severity":1,"message":"511","line":1,"column":10,"nodeType":"490","messageId":"491","endLine":1,"endColumn":18},{"ruleId":"488","severity":1,"message":"512","line":5,"column":10,"nodeType":"490","messageId":"491","endLine":5,"endColumn":27},{"ruleId":"488","severity":1,"message":"513","line":2,"column":46,"nodeType":"490","messageId":"491","endLine":2,"endColumn":54},{"ruleId":"484","severity":1,"message":"485","line":12,"column":61,"nodeType":"486","messageId":"487","endLine":12,"endColumn":63},{"ruleId":"478","replacedBy":"514"},{"ruleId":"480","replacedBy":"515"},{"ruleId":"484","severity":1,"message":"485","line":12,"column":73,"nodeType":"486","messageId":"487","endLine":12,"endColumn":75},{"ruleId":"488","severity":1,"message":"516","line":2,"column":87,"nodeType":"490","messageId":"491","endLine":2,"endColumn":98},{"ruleId":"488","severity":1,"message":"517","line":2,"column":100,"nodeType":"490","messageId":"491","endLine":2,"endColumn":106},{"ruleId":"488","severity":1,"message":"506","line":2,"column":108,"nodeType":"490","messageId":"491","endLine":2,"endColumn":112},{"ruleId":"488","severity":1,"message":"518","line":2,"column":114,"nodeType":"490","messageId":"491","endLine":2,"endColumn":127},{"ruleId":"488","severity":1,"message":"519","line":1,"column":10,"nodeType":"490","messageId":"491","endLine":1,"endColumn":19},{"ruleId":"488","severity":1,"message":"520","line":1,"column":21,"nodeType":"490","messageId":"491","endLine":1,"endColumn":28},{"ruleId":"488","severity":1,"message":"521","line":3,"column":22,"nodeType":"490","messageId":"491","endLine":3,"endColumn":29},{"ruleId":"488","severity":1,"message":"522","line":9,"column":21,"nodeType":"490","messageId":"491","endLine":9,"endColumn":30},{"ruleId":"478","replacedBy":"523"},{"ruleId":"480","replacedBy":"524"},{"ruleId":"484","severity":1,"message":"485","line":13,"column":65,"nodeType":"486","messageId":"487","endLine":13,"endColumn":68},{"ruleId":"488","severity":1,"message":"525","line":1,"column":38,"nodeType":"490","messageId":"491","endLine":1,"endColumn":44},{"ruleId":"488","severity":1,"message":"526","line":8,"column":8,"nodeType":"490","messageId":"491","endLine":8,"endColumn":16},{"ruleId":"488","severity":1,"message":"527","line":8,"column":20,"nodeType":"490","messageId":"491","endLine":8,"endColumn":23},{"ruleId":"488","severity":1,"message":"528","line":8,"column":25,"nodeType":"490","messageId":"491","endLine":8,"endColumn":31},{"ruleId":"488","severity":1,"message":"529","line":11,"column":10,"nodeType":"490","messageId":"491","endLine":11,"endColumn":22},{"ruleId":"492","severity":1,"message":"530","line":46,"column":6,"nodeType":"494","endLine":46,"endColumn":8,"suggestions":"531"},{"ruleId":"484","severity":1,"message":"485","line":11,"column":43,"nodeType":"486","messageId":"487","endLine":11,"endColumn":45},{"ruleId":"488","severity":1,"message":"532","line":12,"column":10,"nodeType":"490","messageId":"491","endLine":12,"endColumn":17},{"ruleId":"488","severity":1,"message":"532","line":11,"column":10,"nodeType":"490","messageId":"491","endLine":11,"endColumn":17},{"ruleId":"492","severity":1,"message":"533","line":31,"column":6,"nodeType":"494","endLine":31,"endColumn":8,"suggestions":"534"},{"ruleId":"488","severity":1,"message":"525","line":3,"column":38,"nodeType":"490","messageId":"491","endLine":3,"endColumn":44},{"ruleId":"488","severity":1,"message":"535","line":2,"column":57,"nodeType":"490","messageId":"491","endLine":2,"endColumn":60},{"ruleId":"488","severity":1,"message":"506","line":2,"column":62,"nodeType":"490","messageId":"491","endLine":2,"endColumn":66},{"ruleId":"488","severity":1,"message":"505","line":2,"column":68,"nodeType":"490","messageId":"491","endLine":2,"endColumn":72},{"ruleId":"488","severity":1,"message":"499","line":2,"column":74,"nodeType":"490","messageId":"491","endLine":2,"endColumn":84},{"ruleId":"488","severity":1,"message":"500","line":2,"column":86,"nodeType":"490","messageId":"491","endLine":2,"endColumn":93},{"ruleId":"488","severity":1,"message":"501","line":10,"column":10,"nodeType":"490","messageId":"491","endLine":10,"endColumn":30},{"ruleId":"488","severity":1,"message":"502","line":10,"column":32,"nodeType":"490","messageId":"491","endLine":10,"endColumn":52},{"ruleId":"484","severity":1,"message":"485","line":15,"column":67,"nodeType":"486","messageId":"487","endLine":15,"endColumn":69},{"ruleId":"488","severity":1,"message":"535","line":2,"column":57,"nodeType":"490","messageId":"491","endLine":2,"endColumn":60},{"ruleId":"488","severity":1,"message":"506","line":2,"column":62,"nodeType":"490","messageId":"491","endLine":2,"endColumn":66},{"ruleId":"484","severity":1,"message":"485","line":18,"column":59,"nodeType":"486","messageId":"487","endLine":18,"endColumn":61},{"ruleId":"488","severity":1,"message":"536","line":2,"column":65,"nodeType":"490","messageId":"491","endLine":2,"endColumn":72},{"ruleId":"478","replacedBy":"537"},{"ruleId":"480","replacedBy":"538"},{"ruleId":"488","severity":1,"message":"539","line":1,"column":17,"nodeType":"490","messageId":"491","endLine":1,"endColumn":35},{"ruleId":"488","severity":1,"message":"519","line":1,"column":37,"nodeType":"490","messageId":"491","endLine":1,"endColumn":46},{"ruleId":"488","severity":1,"message":"540","line":1,"column":48,"nodeType":"490","messageId":"491","endLine":1,"endColumn":56},{"ruleId":"488","severity":1,"message":"506","line":2,"column":10,"nodeType":"490","messageId":"491","endLine":2,"endColumn":14},{"ruleId":"488","severity":1,"message":"535","line":2,"column":25,"nodeType":"490","messageId":"491","endLine":2,"endColumn":28},{"ruleId":"488","severity":1,"message":"541","line":2,"column":36,"nodeType":"490","messageId":"491","endLine":2,"endColumn":41},{"ruleId":"488","severity":1,"message":"517","line":2,"column":52,"nodeType":"490","messageId":"491","endLine":2,"endColumn":58},{"ruleId":"488","severity":1,"message":"542","line":2,"column":60,"nodeType":"490","messageId":"491","endLine":2,"endColumn":66},{"ruleId":"488","severity":1,"message":"543","line":2,"column":68,"nodeType":"490","messageId":"491","endLine":2,"endColumn":77},{"ruleId":"488","severity":1,"message":"513","line":2,"column":79,"nodeType":"490","messageId":"491","endLine":2,"endColumn":87},{"ruleId":"488","severity":1,"message":"544","line":7,"column":10,"nodeType":"490","messageId":"491","endLine":7,"endColumn":25},{"ruleId":"488","severity":1,"message":"545","line":8,"column":10,"nodeType":"490","messageId":"491","endLine":8,"endColumn":21},{"ruleId":"478","replacedBy":"546"},{"ruleId":"480","replacedBy":"547"},{"ruleId":"488","severity":1,"message":"548","line":3,"column":10,"nodeType":"490","messageId":"491","endLine":3,"endColumn":20},{"ruleId":"488","severity":1,"message":"517","line":1,"column":15,"nodeType":"490","messageId":"491","endLine":1,"endColumn":21},{"ruleId":"488","severity":1,"message":"549","line":1,"column":23,"nodeType":"490","messageId":"491","endLine":1,"endColumn":30},{"ruleId":"488","severity":1,"message":"550","line":1,"column":38,"nodeType":"490","messageId":"491","endLine":1,"endColumn":44},{"ruleId":"488","severity":1,"message":"551","line":3,"column":10,"nodeType":"490","messageId":"491","endLine":3,"endColumn":29},{"ruleId":"488","severity":1,"message":"552","line":3,"column":10,"nodeType":"490","messageId":"491","endLine":3,"endColumn":14},{"ruleId":"478","replacedBy":"553"},{"ruleId":"480","replacedBy":"554"},{"ruleId":"488","severity":1,"message":"541","line":2,"column":21,"nodeType":"490","messageId":"491","endLine":2,"endColumn":26},{"ruleId":"488","severity":1,"message":"555","line":5,"column":3,"nodeType":"490","messageId":"491","endLine":5,"endColumn":9},{"ruleId":"488","severity":1,"message":"556","line":13,"column":8,"nodeType":"490","messageId":"491","endLine":13,"endColumn":19},{"ruleId":"557","severity":1,"message":"558","line":4,"column":26,"nodeType":"559","messageId":"560","endLine":4,"endColumn":28},{"ruleId":"557","severity":1,"message":"558","line":14,"column":26,"nodeType":"559","messageId":"560","endLine":14,"endColumn":28},{"ruleId":"484","severity":1,"message":"485","line":14,"column":67,"nodeType":"486","messageId":"487","endLine":14,"endColumn":69},{"ruleId":"488","severity":1,"message":"525","line":1,"column":29,"nodeType":"490","messageId":"491","endLine":1,"endColumn":35},{"ruleId":"488","severity":1,"message":"526","line":4,"column":8,"nodeType":"490","messageId":"491","endLine":4,"endColumn":16},{"ruleId":"488","severity":1,"message":"527","line":4,"column":20,"nodeType":"490","messageId":"491","endLine":4,"endColumn":23},{"ruleId":"488","severity":1,"message":"528","line":4,"column":25,"nodeType":"490","messageId":"491","endLine":4,"endColumn":31},{"ruleId":"488","severity":1,"message":"529","line":12,"column":10,"nodeType":"490","messageId":"491","endLine":12,"endColumn":22},{"ruleId":"488","severity":1,"message":"545","line":13,"column":10,"nodeType":"490","messageId":"491","endLine":13,"endColumn":21},{"ruleId":"488","severity":1,"message":"561","line":33,"column":10,"nodeType":"490","messageId":"491","endLine":33,"endColumn":19},{"ruleId":"492","severity":1,"message":"530","line":51,"column":6,"nodeType":"494","endLine":51,"endColumn":8,"suggestions":"562"},{"ruleId":"488","severity":1,"message":"563","line":1,"column":17,"nodeType":"490","messageId":"491","endLine":1,"endColumn":31},{"ruleId":"488","severity":1,"message":"564","line":3,"column":27,"nodeType":"490","messageId":"491","endLine":3,"endColumn":42},{"ruleId":"488","severity":1,"message":"565","line":10,"column":10,"nodeType":"490","messageId":"491","endLine":10,"endColumn":18},{"ruleId":"484","severity":1,"message":"485","line":26,"column":65,"nodeType":"486","messageId":"487","endLine":26,"endColumn":67},{"ruleId":"488","severity":1,"message":"566","line":51,"column":15,"nodeType":"490","messageId":"491","endLine":51,"endColumn":23},{"ruleId":"492","severity":1,"message":"533","line":57,"column":6,"nodeType":"494","endLine":57,"endColumn":8,"suggestions":"567"},{"ruleId":"484","severity":1,"message":"485","line":16,"column":51,"nodeType":"486","messageId":"487","endLine":16,"endColumn":53},{"ruleId":"488","severity":1,"message":"568","line":16,"column":10,"nodeType":"490","messageId":"491","endLine":16,"endColumn":26},{"ruleId":"488","severity":1,"message":"569","line":7,"column":10,"nodeType":"490","messageId":"491","endLine":7,"endColumn":19},{"ruleId":"488","severity":1,"message":"570","line":31,"column":9,"nodeType":"490","messageId":"491","endLine":31,"endColumn":16},{"ruleId":"492","severity":1,"message":"533","line":50,"column":6,"nodeType":"494","endLine":50,"endColumn":8,"suggestions":"571"},{"ruleId":"488","severity":1,"message":"506","line":2,"column":15,"nodeType":"490","messageId":"491","endLine":2,"endColumn":19},{"ruleId":"488","severity":1,"message":"521","line":3,"column":22,"nodeType":"490","messageId":"491","endLine":3,"endColumn":29},{"ruleId":"478","replacedBy":"572"},{"ruleId":"480","replacedBy":"573"},{"ruleId":"484","severity":1,"message":"485","line":10,"column":61,"nodeType":"486","messageId":"487","endLine":10,"endColumn":63},{"ruleId":"484","severity":1,"message":"485","line":16,"column":51,"nodeType":"486","messageId":"487","endLine":16,"endColumn":54},{"ruleId":"492","severity":1,"message":"493","line":37,"column":6,"nodeType":"494","endLine":37,"endColumn":8,"suggestions":"574"},{"ruleId":"488","severity":1,"message":"518","line":1,"column":29,"nodeType":"490","messageId":"491","endLine":1,"endColumn":42},{"ruleId":"488","severity":1,"message":"575","line":2,"column":17,"nodeType":"490","messageId":"491","endLine":2,"endColumn":27},{"ruleId":"488","severity":1,"message":"576","line":4,"column":10,"nodeType":"490","messageId":"491","endLine":4,"endColumn":21},{"ruleId":"488","severity":1,"message":"577","line":6,"column":10,"nodeType":"490","messageId":"491","endLine":6,"endColumn":18},{"ruleId":"484","severity":1,"message":"485","line":15,"column":53,"nodeType":"486","messageId":"487","endLine":15,"endColumn":56},{"ruleId":"492","severity":1,"message":"578","line":31,"column":6,"nodeType":"494","endLine":31,"endColumn":8,"suggestions":"579"},{"ruleId":"488","severity":1,"message":"550","line":2,"column":19,"nodeType":"490","messageId":"491","endLine":2,"endColumn":25},{"ruleId":"488","severity":1,"message":"500","line":2,"column":33,"nodeType":"490","messageId":"491","endLine":2,"endColumn":40},{"ruleId":"488","severity":1,"message":"580","line":2,"column":42,"nodeType":"490","messageId":"491","endLine":2,"endColumn":53},{"ruleId":"488","severity":1,"message":"581","line":2,"column":55,"nodeType":"490","messageId":"491","endLine":2,"endColumn":61},{"ruleId":"488","severity":1,"message":"499","line":2,"column":71,"nodeType":"490","messageId":"491","endLine":2,"endColumn":81},{"ruleId":"488","severity":1,"message":"582","line":2,"column":120,"nodeType":"490","messageId":"491","endLine":2,"endColumn":125},{"ruleId":"488","severity":1,"message":"583","line":4,"column":10,"nodeType":"490","messageId":"491","endLine":4,"endColumn":20},{"ruleId":"488","severity":1,"message":"584","line":4,"column":22,"nodeType":"490","messageId":"491","endLine":4,"endColumn":34},{"ruleId":"488","severity":1,"message":"585","line":11,"column":10,"nodeType":"490","messageId":"491","endLine":11,"endColumn":25},{"ruleId":"488","severity":1,"message":"586","line":17,"column":10,"nodeType":"490","messageId":"491","endLine":17,"endColumn":14},{"ruleId":"488","severity":1,"message":"587","line":17,"column":16,"nodeType":"490","messageId":"491","endLine":17,"endColumn":22},{"ruleId":"488","severity":1,"message":"588","line":19,"column":10,"nodeType":"490","messageId":"491","endLine":19,"endColumn":15},{"ruleId":"488","severity":1,"message":"589","line":28,"column":9,"nodeType":"490","messageId":"491","endLine":28,"endColumn":24},{"ruleId":"488","severity":1,"message":"570","line":31,"column":9,"nodeType":"490","messageId":"491","endLine":31,"endColumn":16},{"ruleId":"488","severity":1,"message":"590","line":73,"column":9,"nodeType":"490","messageId":"491","endLine":73,"endColumn":21},"no-native-reassign",["591"],"no-negated-in-lhs",["592"],["591"],["592"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'AlertDialog' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchServices'. Either include it or remove the dependency array.","ArrayExpression",["593"],["591"],["592"],"'Container' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'AiOutlineCheckCircle' is defined but never used.","'AiOutlineCloseCircle' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchBooking'. Either include it or remove the dependency array.",["594"],"'Flex' is defined but never used.","'Text' is defined but never used.",["591"],["592"],["591"],["592"],"'position' is defined but never used.","'formatBookingDate' is defined but never used.","'useToast' is defined but never used.",["591"],["592"],"'ModalFooter' is defined but never used.","'Button' is defined but never used.","'useDisclosure' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'URL_API' is defined but never used.","'setOnline' is assigned a value but never used.",["591"],["592"],"'useRef' is defined but never used.","'mapboxgl' is defined but never used.","'Map' is defined but never used.","'Marker' is defined but never used.","'TOKEN_MAPBOX' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAddress'. Either include it or remove the dependency array.",["595"],"'Loading' is defined but never used.","React Hook useEffect has a missing dependency: 'businessContext.id'. Either include it or remove the dependency array.",["596"],"'Box' is defined but never used.","'Heading' is defined but never used.",["591"],["592"],"'HtmlHTMLAttributes' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'VStack' is defined but never used.","'FormLabel' is defined but never used.","'BusinessService' is defined but never used.","'LoadingView' is defined but never used.",["591"],["592"],"'useHistory' is defined but never used.","'Divider' is defined but never used.","'HStack' is defined but never used.","'CgChevronDoubleDown' is defined but never used.","'User' is defined but never used.",["591"],["592"],"'CgHome' is defined but never used.","'ReserlyLogo' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isLoading' is assigned a value but never used.",["597"],"'HTMLAttributes' is defined but never used.","'EventPropGetter' is defined but never used.","'IBooking' is defined but never used.","'newHours' is assigned a value but never used.",["598"],"'SettingsServices' is defined but never used.","'IBusiness' is defined but never used.","'history' is assigned a value but never used.",["599"],["591"],["592"],["600"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","'IService' is defined but never used.","React Hook useEffect has missing dependencies: 'coords.lat', 'coords.lng', and 'setCoords'. Either include them or remove the dependency array. If 'setCoords' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["601"],"'FormControl' is defined but never used.","'Select' is defined but never used.","'Stack' is defined but never used.","'FaDoorOpen' is defined but never used.","'FaDoorClosed' is defined but never used.","'formatHoursDate' is defined but never used.","'Form' is defined but never used.","'Formik' is defined but never used.","'IHour' is defined but never used.","'businessContext' is assigned a value but never used.","'initialValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"602","fix":"603"},{"desc":"604","fix":"605"},{"desc":"606","fix":"607"},{"desc":"608","fix":"609"},{"desc":"606","fix":"610"},{"desc":"608","fix":"611"},{"desc":"608","fix":"612"},{"desc":"602","fix":"613"},{"desc":"614","fix":"615"},"Update the dependencies array to be: [fetchServices]",{"range":"616","text":"617"},"Update the dependencies array to be: [fetchBooking]",{"range":"618","text":"619"},"Update the dependencies array to be: [fetchAddress]",{"range":"620","text":"621"},"Update the dependencies array to be: [businessContext.id]",{"range":"622","text":"623"},{"range":"624","text":"621"},{"range":"625","text":"623"},{"range":"626","text":"623"},{"range":"627","text":"617"},"Update the dependencies array to be: [coords.lat, coords.lng, setCoords]",{"range":"628","text":"629"},[1516,1518],"[fetchServices]",[1376,1378],"[fetchBooking]",[1696,1698],"[fetchAddress]",[1253,1255],"[businessContext.id]",[1972,1974],[1875,1877],[1554,1556],[1397,1399],[918,920],"[coords.lat, coords.lng, setCoords]"]