[{"/Users/oscargracia/Documents/proyectos/boombook/manager/src/index.tsx":"1","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/theme.tsx":"2","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Signup.tsx":"3","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/NewBusiness.tsx":"4","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsServices.tsx":"5","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Booking.tsx":"6","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Wrapper.tsx":"7","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/ContainerPage.tsx":"8","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Loading.tsx":"9","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/signupValidation.tsx":"10","/Users/oscargracia/Documents/proyectos/boombook/manager/src/context/socketContext.tsx":"11","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/gallery/UploadGallery.tsx":"12","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/minutesToHours.tsx":"13","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessService.tsx":"14","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingHistoryList.tsx":"15","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ModalNewService.tsx":"16","/Users/oscargracia/Documents/proyectos/boombook/manager/src/hooks/useSocket.tsx":"17","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/propsToParams.tsx":"18","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/newServiceValidation.tsx":"19","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingSuccess.tsx":"20","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/businessValidation.tsx":"21","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/business/AddressForm.tsx":"22","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Home.tsx":"23","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Settings.tsx":"24","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAddress.tsx":"25","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Layout.tsx":"26","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/InputField.tsx":"27","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/WrapperSettings.tsx":"28","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingListNext.tsx":"29","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingsList.tsx":"30","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/userService.tsx":"31","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessAddressService.tsx":"32","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/gallery/UploadCover.tsx":"33","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatDate.tsx":"34","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/Welcome.tsx":"35","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/DeleteServiceDialog.tsx":"36","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/HttpClient.tsx":"37","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceForm.tsx":"38","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Login.tsx":"39","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsGallery.tsx":"40","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/loginValidation.tsx":"41","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Header.tsx":"42","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/LoadingView.tsx":"43","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceItem.tsx":"44","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/CalendarItem.tsx":"45","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingInformation.tsx":"46","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/bookingService.tsx":"47","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Sidebar.tsx":"48","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/hoursFilters.tsx":"49","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingHours.tsx":"50","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingServices.tsx":"51","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsLocation.tsx":"52","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingCalendar.tsx":"53","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatHoursDate.tsx":"54","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/AlertError.tsx":"55","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Bookings.tsx":"56","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/calendarText.tsx":"57","/Users/oscargracia/Documents/proyectos/boombook/manager/src/App.tsx":"58","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsHour.tsx":"59","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceList.tsx":"60","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/constants.tsx":"61","/Users/oscargracia/Documents/proyectos/boombook/manager/src/reportWebVitals.ts":"62","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/generateName.tsx":"63","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/welcomeValidation.tsx":"64","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/categoryService.tsx":"65","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingCover.tsx":"66","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Footer.tsx":"67","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Services.tsx":"68"},{"size":655,"mtime":1608599718469,"results":"69","hashOfConfig":"70"},{"size":2512,"mtime":1611880825710,"results":"71","hashOfConfig":"70"},{"size":2696,"mtime":1612497971085,"results":"72","hashOfConfig":"70"},{"size":3082,"mtime":1612568801766,"results":"73","hashOfConfig":"70"},{"size":3098,"mtime":1609729943959,"results":"74","hashOfConfig":"70"},{"size":6517,"mtime":1611348846767,"results":"75","hashOfConfig":"70"},{"size":428,"mtime":1608598132872,"results":"76","hashOfConfig":"70"},{"size":414,"mtime":1612488275317,"results":"77","hashOfConfig":"70"},{"size":465,"mtime":1608931363552,"results":"78","hashOfConfig":"70"},{"size":619,"mtime":1609557698721,"results":"79","hashOfConfig":"70"},{"size":823,"mtime":1611538033635,"results":"80","hashOfConfig":"70"},{"size":3864,"mtime":1612236425279,"results":"81","hashOfConfig":"70"},{"size":282,"mtime":1612390015542,"results":"82","hashOfConfig":"70"},{"size":1941,"mtime":1611873176852,"results":"83","hashOfConfig":"70"},{"size":2050,"mtime":1611258600438,"results":"84","hashOfConfig":"70"},{"size":855,"mtime":1609643196313,"results":"85","hashOfConfig":"70"},{"size":842,"mtime":1611536615242,"results":"86","hashOfConfig":"70"},{"size":187,"mtime":1611099986970,"results":"87","hashOfConfig":"70"},{"size":358,"mtime":1609558404865,"results":"88","hashOfConfig":"70"},{"size":1829,"mtime":1612565846189,"results":"89","hashOfConfig":"70"},{"size":345,"mtime":1609362204983,"results":"90","hashOfConfig":"70"},{"size":6989,"mtime":1612576688026,"results":"91","hashOfConfig":"70"},{"size":417,"mtime":1611032444180,"results":"92","hashOfConfig":"70"},{"size":4267,"mtime":1612497190538,"results":"93","hashOfConfig":"70"},{"size":3458,"mtime":1609376453185,"results":"94","hashOfConfig":"70"},{"size":4415,"mtime":1612582707935,"results":"95","hashOfConfig":"70"},{"size":2572,"mtime":1609556792115,"results":"96","hashOfConfig":"70"},{"size":1196,"mtime":1612673101826,"results":"97","hashOfConfig":"70"},{"size":2306,"mtime":1612677720181,"results":"98","hashOfConfig":"70"},{"size":4682,"mtime":1612677715388,"results":"99","hashOfConfig":"70"},{"size":555,"mtime":1609348998265,"results":"100","hashOfConfig":"70"},{"size":675,"mtime":1609281400176,"results":"101","hashOfConfig":"70"},{"size":2281,"mtime":1612677597078,"results":"102","hashOfConfig":"70"},{"size":344,"mtime":1612482327592,"results":"103","hashOfConfig":"70"},{"size":3631,"mtime":1612677994165,"results":"104","hashOfConfig":"70"},{"size":2076,"mtime":1612678001090,"results":"105","hashOfConfig":"70"},{"size":753,"mtime":1608697602026,"results":"106","hashOfConfig":"70"},{"size":3371,"mtime":1609728292711,"results":"107","hashOfConfig":"70"},{"size":2568,"mtime":1609356265362,"results":"108","hashOfConfig":"70"},{"size":1126,"mtime":1611810714786,"results":"109","hashOfConfig":"70"},{"size":465,"mtime":1608745602962,"results":"110","hashOfConfig":"70"},{"size":1729,"mtime":1612566620091,"results":"111","hashOfConfig":"70"},{"size":339,"mtime":1609375491142,"results":"112","hashOfConfig":"70"},{"size":1401,"mtime":1609730159504,"results":"113","hashOfConfig":"70"},{"size":396,"mtime":1612489440550,"results":"114","hashOfConfig":"70"},{"size":1336,"mtime":1612677530012,"results":"115","hashOfConfig":"70"},{"size":517,"mtime":1611259614516,"results":"116","hashOfConfig":"70"},{"size":1634,"mtime":1612673117703,"results":"117","hashOfConfig":"70"},{"size":531,"mtime":1611085105614,"results":"118","hashOfConfig":"70"},{"size":4944,"mtime":1612677546186,"results":"119","hashOfConfig":"70"},{"size":4177,"mtime":1612548806841,"results":"120","hashOfConfig":"70"},{"size":6497,"mtime":1612677672257,"results":"121","hashOfConfig":"70"},{"size":4566,"mtime":1612488392972,"results":"122","hashOfConfig":"70"},{"size":922,"mtime":1611102843776,"results":"123","hashOfConfig":"70"},{"size":470,"mtime":1608703263232,"results":"124","hashOfConfig":"70"},{"size":1720,"mtime":1612677757445,"results":"125","hashOfConfig":"70"},{"size":324,"mtime":1611030897823,"results":"126","hashOfConfig":"70"},{"size":3087,"mtime":1612673089550,"results":"127","hashOfConfig":"70"},{"size":6387,"mtime":1610737509984,"results":"128","hashOfConfig":"70"},{"size":664,"mtime":1609645792759,"results":"129","hashOfConfig":"70"},{"size":299,"mtime":1612330165569,"results":"130","hashOfConfig":"70"},{"size":425,"mtime":1608597130937,"results":"131","hashOfConfig":"70"},{"size":103,"mtime":1612397106719,"results":"132","hashOfConfig":"70"},{"size":362,"mtime":1612496235551,"results":"133","hashOfConfig":"70"},{"size":275,"mtime":1612496779763,"results":"134","hashOfConfig":"70"},{"size":1012,"mtime":1612672937296,"results":"135","hashOfConfig":"70"},{"size":1493,"mtime":1612583171200,"results":"136","hashOfConfig":"70"},{"size":2916,"mtime":1612673158182,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"1n66cqf",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"152"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"146"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"140"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"140"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"140"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"140"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"162"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"146"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"140"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"162"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"140"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"185"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"140"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"162"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"162"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"162"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/oscargracia/Documents/proyectos/boombook/manager/src/index.tsx",[],["302","303"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/theme.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Signup.tsx",["304"],"import React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\nimport { AlertError } from '../components/general/AlertError';\nimport { signupValidation } from '../validations/signupValidation';\n\ninterface SignupProps {}\n\nexport const Signup: React.FC<SignupProps> = ({}) => {\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.signup(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n      return;\n    }\n\n    history.push('/');\n\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Bienvenido</Heading>\n        <Text mt={2} fontWeight='bold'>Registrate gratis.</Text>\n        <Box mt={4}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={signupValidation}>\n            {({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={4}>\n                  <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' />\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Registrate</Button>\n\n                  { error && <AlertError description={error} /> }\n\n                  <Text as=\"em\" fontSize='sm'>Al registrarte, confirmas que aceptas los <Link href='#' color=\"teal.500\">Términos y condiciones</Link> y la <Link href='#' color=\"teal.500\">Política de privacidad</Link>.</Text>\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿Ya tienes tu cuenta?{\" \"}\n                    <Link as={Lnk} to='/login' color='primary' fontWeight='bold'>\n                      Iniciar sesion\n                    </Link>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}",["305","306"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/NewBusiness.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsServices.tsx",["307","308","309"],"import { AlertDialog, Box, Button, Flex, Heading, Spacer, Text, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { DeleteServiceDialog } from '../components/services/DeleteServiceDialog';\nimport { ModalNewService } from '../components/services/ModalNewService';\nimport { ServiceList } from '../components/services/ServiceList';\nimport { BusinessService } from '../services/businessService';\nimport { IService } from '../types/IService';\n\ninterface SettingsServicesProps {\n  \n}\n\nexport const SettingsServices: React.FC<SettingsServicesProps> = ({ }) => {\n  // Hooks\n  const { onOpen, isOpen, onClose } = useDisclosure()\n  const businessContext = useContext(UserContext);\n\n  // States\n  const [services, setServices] = useState<IService[]>([])\n  const [service, setService] = useState<IService>()\n  const [isLoading, setIsLoading] = useState(true);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const fetchServices = async  () => {\n    const { success, services } = await new BusinessService().getServices(businessContext.id);\n    if (success && services) {\n      setServices(services);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetchServices();\n  }, []);\n\n  const realodList = () => {\n    fetchServices();\n    onClose();\n  }\n\n  const handleCreateService = () => {\n    setService(undefined)\n    onOpen();\n  }\n\n  const handleEditService = (service: IService) => {\n    setService(service);\n    onOpen()\n    \n  }\n\n  const handleDeleteService = (service: IService) => {\n    setService(service);\n    setIsDeleteModal(true);\n  }\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ModalNewService isOpen={isOpen} onClose={onClose} realodList={realodList} service={service} />\n      { service &&  <DeleteServiceDialog isOpen={isDeleteModal} realodList={realodList} service={service} onClose={() => setIsDeleteModal(!isDeleteModal)} /> }\n      <ContainerPage title='Configuración'>\n        <WrapperSettings>\n          <Flex direction='row' align='center'>\n            <Box>\n              <Heading as='h2' size='md' mb={2}>Servicios</Heading>\n              <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Añade tantos servicios necesites para que tus clientes sepan todo lo que ofreces.</Text>\n            </Box>\n            <Spacer />\n            <Box>\n              <Button variant='primary' onClick={handleCreateService}>Nuevo servicio</Button>\n            </Box>\n          </Flex>\n          <Box>\n            <ServiceList\n              services={services}\n              handleEditService={handleEditService}\n              handleDeleteService={handleDeleteService}\n              />\n          </Box>\n        </WrapperSettings>\n      </ContainerPage>\n    </>\n  );\n}",["310","311"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Booking.tsx",["312","313","314","315","316","317","318"],"import React, { useEffect, useState } from 'react'\nimport { Box, Button, Container, Flex, Heading, HStack, IconButton, Spacer, Stack, Text, Tooltip, useToast, VStack } from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { IBooking } from '../types/IBooking';\nimport { BookingService } from '../services/bookingService';\nimport { formatDateLG } from '../utils/formatDate';\nimport { minutesToHour } from '../utils/minutesToHours';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { IBookingService } from '../types/IBookingService';\n\ninterface BookingProps {}\n\n// Datos de clioente\n/**\n Nombre\n Telefono,\n\n Fecha\n Hora\n Mensaje\n\n Servicios\n\n Acciones\n  Aceptar\n  Rechazar\n  Contactar\n*/\n\nexport const Booking: React.FC<BookingProps> = ({}) => {\n\n  // hooks\n  const { id } :any = useParams();\n  const toast = useToast();\n\n  // state\n  const [booking, setBooking] = useState<Required<IBooking>>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchBooking = async () => {\n    const { success, booking } = await new BookingService().get(id)\n    if (success) {\n      setBooking(booking);\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchBooking();\n  }, []);\n\n  const handleToAcept = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().update(id, { bookingStatusId: 2 });\n      if (response.success) {\n        fetchBooking();\n      }\n      setIsLoading(false);\n      console.log('respues de reservacion', response);\n    }    \n  }\n\n  const handleToCancel = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().update(id, { bookingStatusId: 3 });\n      if (response.success) {\n        fetchBooking();\n      }\n      console.log('Respuesta de servicio', response);\n      setIsLoading(false);\n      toast({\n        status: 'error',\n        title: 'Servicio rechazado',\n        position: 'top',\n      })\n      \n    }\n  }    \n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  if (!booking) {\n    return (\n      <Text>Servicio no encontrado</Text>\n    )\n  }\n\n  const colorStatus = (statusId :number) => {\n    switch (statusId) {\n      case 1:\n        return '#D69E2E'\n      case 2:\n        return 'primary'\n      case 3:\n        return 'error'\n      default:\n        break;\n    }\n  }\n  \n  return (\n    <>\n      <Box bg={colorStatus(booking.bookingStatusId)} color='#FFF' py={6} px={12} borderBottomWidth={1} borderColor='borders'>\n        <VStack align='left' justify='flex-start'>\n          <Heading as='h1'>{booking.customer.firstName} {booking.customer.lastName}</Heading>\n          <Text color='#FFF'>Teléfono: {booking.customer.phone}</Text>\n          <Text color='#FFF'>Fecha de solicitud: {formatDateLG(booking.createdAt)}</Text>\n        </VStack>\n      </Box>\n      \n      <ContainerPage>\n        <Flex justify='space-between'>\n          <Flex direction='column' w='62%'>\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders' mb={6}>\n              <Heading as='h4' fontSize='2xl' mb={6}>Resumen del servicio</Heading>\n\n              { booking.message &&\n              <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                <Text fontSize='sm' fontWeight='600' color='subtext'>Comentario</Text>\n                <Text as='cite'>{booking.message}</Text>\n              </VStack>\n              }\n              <HStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Fecha de servicio</Text>\n                  <Text fontWeight='600'>{formatDateLG(booking.bookingDate)}</Text>\n                </VStack>\n              </HStack>\n              <HStack spacing={10}>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Tiempo de servicio</Text>\n                  <Text fontWeight='600'>{minutesToHour(booking.totalTime)}</Text>\n                </VStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Total a cobrar</Text>\n                  <Text fontWeight='600'>${booking.totalPrice}MXN</Text>\n                </VStack>\n              </HStack>\n            </Box>\n\n            <Box bg='surface' py={6} px={6} w='100%' borderWidth={1} borderColor='borders'>\n              <Heading as='h4' fontSize='2xl' mb={6}>Servicios</Heading>\n              <Stack mb={3} w='100%'>\n                { booking.bookingService.map((item: IBookingService) => (\n                  <Flex align='center' justify='space-evenly' flex='100%'>\n                    <Text fontSize='md' fontWeight='semibold' w='260px'>{item.nameService}</Text>\n                    <Spacer />\n                    <Flex alignSelf='center'>\n                      <Box w='15px' />\n                      <Flex direction='column'>\n                        <Text fontSize='xs' pr='10px'>${item.priceService}MXN</Text>\n                        <Text fontSize='xs' pr='10px'>{item.timeService}min</Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )) }\n              </Stack>\n            </Box>\n          </Flex>\n\n          <Box w='35%'>\n            { booking.bookingStatusId === 1 &&\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders'>\n              <Flex justifyContent='center' direction='column' alignItems='center'>\n                <Heading as='h4' fontSize='2xl'>Solicitud</Heading>\n                <Text mt={10} textAlign='center'>Oscar Alberto esta interesado en hacer una reservación. ¿Lo aceptas?</Text>\n                <VStack my={6} w='100%'>\n                  <Button variant='primary' isFullWidth size='lg' onClick={handleToAcept}>\n                    Aceptar\n                  </Button>\n                  <Button variant='outline' colorScheme='red' isFullWidth size='lg' onClick={handleToCancel}>\n                    Rechazar\n                  </Button>\n                </VStack>\n              </Flex>\n            </Box>\n            }\n          </Box>\n\n        </Flex>\n      </ContainerPage>\n    </>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Wrapper.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/ContainerPage.tsx",["319","320"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Loading.tsx",[],["321","322"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/signupValidation.tsx",[],["323","324"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/context/socketContext.tsx",["325","326"],"import { position, useToast } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSocket } from '../hooks/useSocket';\nimport { formatDate } from '../utils/formatDate';\nimport { formatBookingDate } from '../utils/formatHoursDate';\n\nexport const SocketContext = React.createContext<any>(null);\n\nexport const SocketProvider: React.FC = ({ children }) => {\n  // hooks\n  const toast = useToast();\n  const { socket, online } = useSocket();\n  \n  socket.on('new-booking', (data :any) => {\n    console.log('Socket data', data);\n    \n    toast({\n      title: 'Nueva reservación',\n      description: `${formatDate(data.bookingDate)}`,\n      status: 'success',\n      position: 'top',\n    })\n  });\n  \n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      { children }\n    </SocketContext.Provider>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/gallery/UploadGallery.tsx",["327","328","329","330"],"import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormLabel, Text, useToast, Image, VStack, SimpleGrid, Wrap, IconButton } from '@chakra-ui/react';\nimport { IoIosAdd } from 'react-icons/io';\nimport { RiDeleteBin6Line } from 'react-icons/ri'\n\n\nimport { BusinessService } from '../../services/businessService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface UploadGalleryProps {}\n\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg';\n\nexport const UploadGallery: React.FC<UploadGalleryProps> = ({}) => {\n  // hooks\n  const toast = useToast();\n\n  // state\n  const [photos, setPhotos] = useState<object[]>([]);\n  const [isUploading, setIsUplaoding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetch = async () => {\n    const response = await new BusinessService().getPhotos();\n    if (response.success) {\n      const files = response.photos.map((item :any) => ({\n        image: item.file,\n        id: item.id,\n      }))\n\n      console.log('Files fetvh', files);\n      \n      setPhotos(files);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, [])\n\n  \n\n  const onChangeGallery = async (e :any) => {\n    setIsUplaoding(true);\n    setIsLoading(true);\n    const files : FileList = e.target.files;\n    const newFiles = Array.from(files).map((item:any) => ({\n      image: URL.createObjectURL(item),\n      id: item.id,\n    }))\n    \n    const newPhotos = [...photos, ...newFiles]\n    setPhotos(newPhotos);\n\n    const dataFiles = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      dataFiles.append('files', files[i]);\n    }\n    \n    const response = await new BusinessService().uplaodGallery(dataFiles);\n\n    if (response.success) {\n      toast({\n        title: \"Datos actualizados.\",\n        status: \"success\",\n        isClosable: true,\n        position: 'top'\n      });\n      // setTimeout(() => {\n      //   // window.location.reload();\n      //   fetch();\n      //   setIsUplaoding(false);\n      // }, 5000)\n    }\n    setIsUplaoding(false);\n    setIsLoading(false);\n  }\n\n  const handleDeletePhoto = async (id :number, index :number) => {\n    setIsLoading(true);\n    if (id) {\n      const response = await new BusinessService().deletePhoto(id);\n      if (response.success) {\n        setPhotos([\n          ...photos.splice(0, index),\n          ...photos.splice(index + 1),\n        ]);\n      }\n    }\n    setIsLoading(false);\n  }\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n  \n  return (\n    <>\n      <Box w='60%'>\n        <Text fontWeight='bold' mb={4}>Galeria</Text>\n        <Text fontSize='sm' color='subtext' mb={3}>Añade las fotos de tu negocio y local para que los usuarios conozcan tus servicios.</Text>\n        <Button variant='primary-outline' isLoading={isUploading} p={0} mt={4}>\n          <FormLabel w='100%' h='100%' htmlFor='files' m={0} p={2} px={4} >Añadir imagenes +</FormLabel>\n        </Button>\n        <input\n          type=\"file\"\n          id=\"files\" \n          name='files'\n          accept={acceptedFileTypes} \n          multiple\n          onChange={onChangeGallery}\n          style={{ display: 'none' }}\n        />\n      </Box>\n      <Box w='90%'>\n        <Wrap direction='row' flex={1} mt={4}>\n          { photos.map((photo :any, index :number) => (\n            <Box p={2} key={index} pos='relative' role='group'>\n              <Flex pos='absolute' w='200px' alignItems='flex-end' justifyContent='flex-end' p={2} display='none' _groupHover={{ display: 'flex' }}>\n                <IconButton size='sm' aria-label='Delete photo' icon={<RiDeleteBin6Line size={20} />} onClick={() => handleDeletePhoto(photo.id, index)} />\n              </Flex>\n              <Image w='200px' h='133px' objectFit=\"cover\" src={photo.image} />\n            </Box>\n          )) }\n        </Wrap>\n      </Box>\n    </>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/minutesToHours.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingHistoryList.tsx",["331","332","333","334","335","336","337","338"],"import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip } from \"@chakra-ui/react\"\nimport moment from 'moment';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\n\ninterface BookingsListHistoryProps {}\n\nexport const BookingsListHistory: React.FC<BookingsListHistoryProps> = ({}) => {\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { startDate: moment(new Date()).toISOString() };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Calculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n            <Th>Estatus</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td>{item.customer?.firstName} {item.customer?.lastName}</Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n              <Td>{item.bookingStatusId === 3 ? 'Cancelada' : 'Terminada'}</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ModalNewService.tsx",["339","340","341","342"],"import React from 'react'\nimport { Modal, ModalOverlay, ModalContent, ModalCloseButton, ModalHeader, ModalBody, ModalFooter, Button, Text, useDisclosure } from '@chakra-ui/react';\nimport { ServiceForm } from './ServiceForm';\nimport { IService } from '../../types/IService';\n\ninterface ModalNewServiceProps {\n  isOpen: boolean\n  onClose: any\n  realodList: any\n  service?: IService\n}\n\nexport const ModalNewService: React.FC<ModalNewServiceProps> = ({ isOpen, onClose, realodList, service }) => {  \n  return (\n    <Modal isOpen={isOpen} onClose={onClose} motionPreset='slideInBottom'>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Nuevo servicio</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <ServiceForm realodList={realodList} service={service} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/hooks/useSocket.tsx",["343","344","345","346"],"import { useEffect, useMemo, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { API_DOMAIN, URL_API } from '../config/constants';\n\n\nexport const useSocket = () => {\n    \n    const socket : Socket = io(API_DOMAIN, { transports: ['websocket'] });\n    const [ online, setOnline ] = useState(false);\n    \n    // socket.on('saludo', (data :any) => {\n    //   console.log('Datos de saludo', data);\n    // })\n\n    // useEffect(() => {\n    //     setOnline( socket.connected );\n    // }, [socket])\n\n    // useEffect(() => {\n    //     socket.on('connect', () => {\n    //       console.log('Socket conectado');\n          \n    //     });\n    // }, [ socket ])\n\n    // useEffect(() => {\n    //     socket.on('disconnect', () => setOnline( false ));\n    // }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}",["347","348"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/propsToParams.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/newServiceValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingSuccess.tsx",["349"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/businessValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/business/AddressForm.tsx",["350"],"import React, { useState, useEffect, useRef } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport { BusinessAddressService } from '../../services/businessAddressService';\nimport { TOKEN_MAPBOX } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { BusinessAddress, BusinessAddressResponse } from '../../types/BusinessAddress';\n\ninterface AddressFormProps {\n  handleSaveAddress: any\n  business: Required<IBusiness>\n}\n\nexport const AddressForm: React.FC<AddressFormProps> = ({ handleSaveAddress, business }) => {\n  \n  const [address, setAddresss] = useState<BusinessAddress | null>(null);\n  \n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [latLng, setLatLng] = useState({ lng: -74.5, lat: 40 });\n  const [map, setMap] = useState<mapboxgl.Map | null>(null);\n  const [mrk, setMrk] = useState<mapboxgl.Marker | null>(null);\n  const [state, setState] = useState('');\n  const [city, setCity] = useState('');\n\n  const mapContainer = useRef<any>(null);\n  \n  const fetchAddress = async (map: Map) => {\n    const { success, address } = await new BusinessAddressService().get(business.id);\n    if (success && address) {\n      setAddresss(address);\n      setGeoAddress(address.addressMap);\n      setLatLng({ lat: address.lat, lng: address.lng });\n\n      if (map) {\n        map.jumpTo({ center: [address.lng, address.lat], zoom: 16 });\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([address.lng, address.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        setMrk(marker);\n      }\n    }\n  }\n\n  useEffect(() => {\n    mapboxgl.accessToken = TOKEN_MAPBOX;\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n      center: [-100.3161126, 25.6866142], // starting position [lng, lat]\n      zoom: 16 // starting zoom\n    });\n    setMap(map);\n\n    \n    map.on('load', function() {\n      fetchAddress(map);\n    });\n\n  }, [])\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (business.id) {\n      if (address?.id) {\n        response = await new BusinessAddressService().update({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress, state, city }, business.id, address.id);\n      } else {\n        response = await new BusinessAddressService().create({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress, state, city }, business.id);\n      }\n      if (response.success && response.address) {\n        setAddresss(response.address);\n      }\n      \n      if (handleSaveAddress) {\n        handleSaveAddress();\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    fillInAddress(results[0]);\n    console.log('Resultados de ubicacion', results);\n    \n    const latLng = await getLatLng(results[0]);\n    setLatLng(latLng);\n    if (map) {\n      \n      // map.jumpTo({ 'center': [latLng.lng, latLng.lat], 'zoom': 14 });\n      map.jumpTo({ center: [latLng.lng, latLng.lat], zoom: 16 });\n\n      if (!mrk) {\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([latLng.lng, latLng.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        setMrk(marker);\n      } else {\n        mrk.setLngLat([latLng.lng, latLng.lat]);\n      }\n      \n    }\n  }\n\n  const fillInAddress = (place: google.maps.GeocoderResult) => {\n    const addressComponent : google.maps.GeocoderAddressComponent[] = place.address_components;\n    for (var i = 0; i < addressComponent.length; i++) {\n      if (addressComponent[i].types[0] === 'locality') {\n        const locality : any = addressComponent[i];\n        console.log('locality', locality.long_name);\n        setCity(locality.long_name);\n      }\n      if (addressComponent[i].types[0] === 'administrative_area_level_1') {\n        const administrativeArea : any = addressComponent[i];\n        console.log('administrative_area_level_1', administrativeArea.long_name);\n        setState(administrativeArea.long_name);\n      }\n    }\n  }\n\n\n  const onDragEnd = (marker: Marker) => {\n    var lngLat = marker.getLngLat();\n    setLatLng(lngLat);\n    console.log('NUEVAS CORDENADAS', lngLat);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        { (({ isSubmitting }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10}>\n              <VStack w='100%' align='flex-start'>\n                <Text fontWeight='bold'>Ingresa la dirección completa de tu negocio</Text>\n                <PlacesAutocomplete\n                  value={geoAddress}\n                  onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                  onSelect={handleSelect}\n                  searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                >\n                  { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                      <Box w='100%'>\n                        <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                        <Box shadow='md' background='#FFFFFF'>\n                          { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                          {suggestions.map(suggestion => {\n                            return (\n                              <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                <Text fontWeight='bold'>{suggestion.description}</Text>\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      </Box>\n                  )) }\n                </PlacesAutocomplete>\n              </VStack>\n            </Flex>\n            <Box>\n              <Box w='100%' h='200px' ref={el => (mapContainer.current = el)}></Box>\n              {/* <Text fontWeight='bold' fontSize='xs' mt={2}>Mueve el marcador si es necesario pero asegurate que este en el lugar correcto.</Text> */}\n              <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n              \n            </Box>\n\n            <Flex mt={4} align='flex-end' justifyContent='flex-end'>\n              <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Siguiente</Button>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n      \n      {/* <Box w='100%' h='200px' id='map'></Box> */}\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Home.tsx",["351"],"import React from 'react'\nimport { Box } from '@chakra-ui/react';\n\n// local components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { BookingCalendar } from '../components/booking/BookingCalendar';\n\n\ninterface HomeProps {}\n\nexport const Home: React.FC<HomeProps> = ({}) => {\n  return (\n    <ContainerPage>\n      <Box>\n        <BookingCalendar />\n      </Box>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Settings.tsx",["352"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAddress.tsx",["353","354"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Box, Button, Heading, HStack, useToast, VStack , Text} from '@chakra-ui/react';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddress } from '../types/BusinessAddress';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { InputField } from '../components/general/InputField';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\ninterface SettingsAddressProps {}\n\nexport const SettingsAddress: React.FC<SettingsAddressProps> = () => {\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n  \n  useEffect(() => {\n    const fetchAddress = async () => {\n      const { address } = await new BusinessAddressService().get(businessContext.id);\n      if (address) {\n        setAddress(address);\n      }\n      console.log('Direccion', address);\n    }\n\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async (values: any) => {\n    if (businessContext && businessContext.id && address?.id) {\n      console.log('Id de negocio', businessContext.id, values);\n      const { success } = await new BusinessAddressService().update(values, businessContext.id, address.id);\n      if (success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  if (!address) {\n    return <LoadingView />\n  }\n\n  const initialValues = {\n    street: address.street ? address.street : '',\n    area: address.area ? address.area : '',\n    city: address.city ? address.city : '',\n    state: address.state ? address.state : '',\n    zipcode: address.zipcode ? address.zipcode : '',\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Dirección</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Esta información es utilizada  si la ubicación por coordenadas no es precisa, así que es recomendable ingresarla.</Text>\n        <Box w='80%'>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            { (({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='street' label='Calle y número' />\n                  <InputField inputSize='lg' name='area' label='Colonia' />\n                </HStack>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='city' label='Municipio' />\n                  <InputField inputSize='lg' name='state' label='Estado' />\n                </HStack>\n                <HStack spacing={4} w='49%'>\n                  <InputField inputSize='lg' name='zipcode' label='Codigo postal' />\n                </HStack>\n                <Button variant='primary' type='submit' size='lg' isLoading={isSubmitting}>Guardar</Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Layout.tsx",["355"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/InputField.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/WrapperSettings.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingListNext.tsx",["356","357","358","359","360","361","362","363"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingsList.tsx",["364","365","366"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/userService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessAddressService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/gallery/UploadCover.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatDate.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/Welcome.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/DeleteServiceDialog.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/HttpClient.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceForm.tsx",["367"],"import React, { useContext } from 'react'\nimport { Box, Button, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, VStack } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { InputField, TextareaField } from '../general/InputField'\nimport { NewServiceSchema } from '../../validations/newServiceValidation'\nimport { IService, IServiceResponse } from '../../types/IService'\nimport { BusinessService } from '../../services/businessService'\nimport { UserContext } from '../general/Layout'\n\ninterface ServiceFormProps {\n  realodList: any\n  service?: IService\n}\n\nexport const ServiceForm: React.FC<ServiceFormProps> = ({ realodList, service }) => {\n  const businessContext = useContext(UserContext);\n\n  const onSubmit = async (values: IService) => {\n    let response : IServiceResponse;\n    if (service?.id) {\n      response = await new BusinessService().updateService(values, service.id, businessContext.id);\n    } else {\n      response = await new BusinessService().createService(values, businessContext.id);\n    }\n    \n    console.log('respuesta', response);\n    if (response.success) {\n      if (realodList) {\n        realodList();\n      }\n    }\n  }\n\n  const initialValues = !service ? {\n    name: '',\n    description: '',\n    price: '',\n    time: '',\n  } : service;\n\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <VStack spacing={4}>\n              <InputField name='name' label='Nombre' />\n              <TextareaField name='description' label='Descripción (opcional)' />\n              <HStack>\n                <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                <FormControl isInvalid={!!errors.time}>\n                  <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                  <Select name='time' size='lg' placeholder=\"Seleccioné una duración\" value={values.time} onChange={handleChange}>\n                    <option value=\"15\">15 min.</option>\n                    <option value=\"30\">30 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"60\">1:00 hr.</option>\n                    <option value=\"75\">1:15 hr.</option>\n                    <option value=\"90\">1:30 hr.</option>\n                    <option value=\"105\">1:45 hr.</option>\n                    <option value=\"120\">2:00 hr.</option>\n                  </Select>\n                  { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                </FormControl>\n              </HStack>\n              <Button type='submit' isLoading={isSubmitting} variant='primary' alignSelf='end'>Guardar</Button>\n            </VStack>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Login.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsGallery.tsx",["368","369","370","371","372","373","374","375","376","377","378","379"],"import React, { HtmlHTMLAttributes, useEffect, useState } from 'react'\nimport { Text, Heading, Box, Flex, Image, Divider, Button, VStack, FormLabel, useToast } from '@chakra-ui/react';\n\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { UploadCover } from '../components/gallery/UploadCover';\nimport { UploadGallery } from '../components/gallery/UploadGallery';\n\ninterface SettingsGalleryProps {}\n\nexport const SettingsGallery: React.FC<SettingsGalleryProps> = () => {\n  \n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Fotos</Heading>\n\n        <Flex w='90%' justify='space-between' mt={4}>\n          <UploadCover />\n        </Flex>\n\n        <Divider my={6} />\n\n        <Flex w='100%' justify='space-between' direction='column'>\n          <UploadGallery />\n        </Flex>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/loginValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Header.tsx",["380"],"import { Flex, MenuButton, Spacer, Text, Menu, MenuList, MenuItem, Link } from '@chakra-ui/react';\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { APP_NAME } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { User } from '../../types/User';\n\nimport logo from '../../assets/logo-reserly-2.png';\n\ninterface HeaderProps {\n  user: User | null\n  business: IBusiness\n  logout: any\n}\n\nexport const Header: React.FC<HeaderProps> = ({ user, business, logout }) => {\n\n  if (!user) {\n    return (\n      <Flex bg='surface' align='center' justify='center' shadow='md' borderBottomColor='#DDD' borderWidth={1} py={4}>\n        <Text>{APP_NAME}</Text>\n        <Spacer />\n        <Text>Iniciar sesion</Text>\n      </Flex>\n    )\n  }\n  \n  return (\n    <Flex h='66px' bg='surface' align='center' justify='center' borderBottomColor='borders' borderBottomWidth={1} py={4} px={8}>\n      <Flex align='center' w='190px'>\n        <Link href=\"/\">\n          <img src={logo} alt=\"uorder\" width=\"120\" height=\"40\" />\n        </Link>\n      </Flex>\n      <Text fontWeight='semibold' color='subtext'>{business.name}</Text>\n      <Text fontWeight='bold' fontSize='xs' ml={4} color={business.isPublic ? 'primary' : 'yellow.300'}>\n        { business.isPublic ? 'Publicado' : 'No publicado' }\n        \n      </Text>\n      <Spacer />\n      <Menu>\n        {/* <Link href='/' size=\"sm\" variant=\"primary\" mx={3}>Modo cliente</Link> */}\n        <MenuButton as={Link} mx={3} variant='primary'>\n          Mi Cuenta\n        </MenuButton>\n        <MenuList zIndex={3} borderColor=\"#DDD\">\n          <MenuItem onClick={logout}>Cerrar sesión</MenuItem>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/LoadingView.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceItem.tsx",["381","382","383","384"],"import { Box, Button, Divider, Flex, HStack, IconButton, Menu, MenuButton, MenuItem, MenuList, Text } from '@chakra-ui/react';\nimport React from 'react'\nimport { CgChevronDoubleDown } from 'react-icons/cg';\nimport { CgMoreVerticalAlt } from 'react-icons/cg';\nimport { IService } from '../../types/IService';\n\ninterface ServiceItemProps {\n  service: IService\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceItem: React.FC<ServiceItemProps> = ({ service, handleEditService, handleDeleteService }) => {\n  return (\n    <Flex shadow='md' bg='surface' px={4} py={4} borderBottomWidth={1} borderBottomColor='borders' align='center'>\n      <Box w='50%'>\n        <Text size='xs' fontWeight='bold'>{service.name}</Text>\n        <Text fontSize='sm'>{service.description}</Text>\n      </Box>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>{service.time} min.</Text>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>${service.price}</Text>\n      <Box>\n        <Menu>\n          <MenuButton as={IconButton} icon={<CgMoreVerticalAlt />}/>\n          <MenuList>\n            {/* <MenuItem>Pausar</MenuItem> */}\n            <MenuItem onClick={() => handleEditService(service)} >Editar</MenuItem>\n            <MenuItem onClick={() => handleDeleteService(service)}>Eliminar</MenuItem>\n          </MenuList>\n        </Menu>\n      </Box>\n    </Flex>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/CalendarItem.tsx",["385"],"import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { User } from '../../types/User';\n\ninterface CalendarItemProps {\n  event: any\n}\n\nexport const CalendarItem: React.FC<CalendarItemProps> = ({ event }) => {\n  const { customer } = event;\n  return (\n    <Box>\n      <Text fontWeight='semibold' isTruncated>{customer.firstName} {customer.lastName}</Text>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingInformation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/bookingService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Sidebar.tsx",["386","387","388"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/hoursFilters.tsx",["389","390"],"import { IHour } from \"../types/IHour\";\n\nexport const getMin = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openFrom && b.openFrom) {\n      return a.openFrom.localeCompare(b.openFrom);\n    }\n  });\n\n  console.log('Orden get min', hours);\n  \n  return hours[0].openFrom;\n}\n\nexport const getMax = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openTill && b.openTill) {\n      return b.openTill.localeCompare(a.openTill);\n    }\n  });\n\n  console.log('Orden get max', hours);\n\n  return hours[0].openTill;\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingHours.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingServices.tsx",["391"],"import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, Text, VStack } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, Formik } from 'formik';\nimport { InputField } from '../general/InputField';\nimport { BusinessService } from '../../services/businessService';\nimport { IService } from '../../types/IService';\nimport { IBusiness } from '../../types/Business';\nimport { NewServiceSchema } from '../../validations/newServiceValidation';\n\ninterface BoardingServicesProps {}\n\nexport const BoardingServices: React.FC<BoardingServicesProps> = ({}) => {\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n\n  const history = useHistory()\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  const onSubmit = async (values: IService) => {\n    if (business) {\n      const { success } = await new BusinessService().createService(values, business.id)\n      if (success) {\n        history.push('/new-business/4');\n      }\n    }\n  }\n\n  const initialValue = {\n    name: '',\n    description: '',\n    time: '',\n    price: '',\n  }\n\n  return (\n    <Box textAlign='center'>\n    <Heading as='h2'>¿Qué servicios realizas?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Añade un servicio para empezar a utilizar Boombook</Text>\n      \n      <Formik initialValues={initialValue} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <Flex align='center' w='100%' justify='center' mt={10}>\n              <VStack w='70%' spacing={3}>\n                <InputField inputSize='lg' name='name' label='Nombre del servicio' />\n                <InputField inputSize='lg' name='description' label='Descripción' />\n                <HStack w='100%' direction='row' justify='space-between'>\n                  <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                  {/* <InputNumberField inputSize='lg' name='Precio' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  {/* <InputField inputSize='lg' name='time' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  <FormControl isInvalid={!!errors.time}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                    <Select name='time' size='lg' placeholder=\"Seleccione la duración\" value={values.time} onChange={handleChange}>\n                      <option value=\"15\">15 min.</option>\n                      <option value=\"30\">30 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"60\">1:00 hr.</option>\n                      <option value=\"75\">1:15 hr.</option>\n                      <option value=\"90\">1:30 hr.</option>\n                      <option value=\"105\">1:45 hr.</option>\n                      <option value=\"120\">2:00 hr.</option>\n                      <option value=\"135\">2:15 hr.</option>\n                      <option value=\"140\">2:30 hr.</option>\n                    </Select>\n                    <FormErrorMessage>{errors.time}</FormErrorMessage>\n                  </FormControl>\n                </HStack>\n                <Button size='lg' alignSelf='flex-end' variant='primary' type='submit' isLoading={isSubmitting}>Siguiente</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsLocation.tsx",["392","393","394"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingCalendar.tsx",["395","396","397","398","399","400"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatHoursDate.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/AlertError.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Bookings.tsx",["401","402","403","404","405","406","407"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/calendarText.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/App.tsx",["408"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsHour.tsx",["409","410","411"],"import React, { useState, useEffect, useContext } from 'react'\nimport { Heading, HStack, Text, Tooltip, FormControl, Select, IconButton, Box, Flex, VStack, Button, useToast } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { FaDoorOpen, FaDoorClosed } from 'react-icons/fa';\n\n// Types\nimport { IBusiness } from '../types/Business';\n\n// services\nimport { BusinessService } from '../services/businessService';\nimport { formatHoursDate } from '../utils/formatHoursDate';\n\n// components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { IHour } from '../types/IHour';\n\n\ninterface SettingsHourProps {\n\n}\n\nexport const SettingsHour: React.FC<SettingsHourProps> = () => {\n  // context\n  const businessContext = useContext(UserContext);\n\n  // Hooks\n  const history = useHistory()\n  const toast = useToast();\n\n  // states\n  const [hours, setHours] = useState<string[]>([]);\n  const [myHours, setMyHours] = useState<IHour[]>([]);\n  \n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const newHours = formatHoursDate(response.hours);\n        setMyHours(newHours);\n      }\n    }\n\n    fetchHours();\n    getHours();\n  }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<2; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 30*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const onSubmit = async (values: any) => {\n    if (businessContext?.id) {\n      const response = await new BusinessService().createHours(values, businessContext.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const formDay = (values: any, handleChange: any, setFieldValue: any, label: string, dayOfWeek: number) => {\n    const isOpen : boolean = values.days[dayOfWeek].isOpen;\n    const { openFrom, openTill } = values.days[dayOfWeek];\n    return (\n      <HStack w='100%' direction='row' justify='center' align='center'>\n        <Text w='250px' textAlign='left' fontWeight='semibold'>{label}</Text>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openFrom`} size='lg' value={openFrom} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openTill`} size='lg' value={openTill} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <Tooltip label={isOpen ? 'Cerrar este día' : 'Abrir este día'} fontSize=\"md\">\n          <IconButton\n            colorScheme=\"teal\"\n            aria-label=\"Call Segun\"\n            size=\"lg\"\n            icon={isOpen ? <FaDoorOpen /> : <FaDoorClosed />}\n            onClick={() => setFieldValue(`days[${dayOfWeek}].isOpen`, !isOpen )}\n          />\n        </Tooltip>\n      </HStack>\n    )\n  }\n\n  if (!businessContext || myHours.length === 0) {\n    return <LoadingView />\n  }\n\n  console.log('my hours');\n  \n  const initialValue = {\n    days: [\n      { businessId: businessContext.id, openFrom: myHours[0] ? myHours[0].openFrom :  '9:00', openTill: myHours[0] ? myHours[0].openTill : '20:00', isOpen: myHours[0] ? myHours[0].isOpen : true, dayOfWeek: 0 },\n      { businessId: businessContext.id, openFrom: myHours[1] ? myHours[1].openFrom :  '9:10', openTill: myHours[1] ? myHours[1].openTill : '20:00', isOpen: myHours[1] ? myHours[1].isOpen : true, dayOfWeek: 1 },\n      { businessId: businessContext.id, openFrom: myHours[2] ? myHours[2].openFrom :  '9:00', openTill: myHours[2] ? myHours[2].openTill : '20:00', isOpen: myHours[2] ? myHours[2].isOpen : true, dayOfWeek: 2 },\n      { businessId: businessContext.id, openFrom: myHours[3] ? myHours[3].openFrom :  '9:00', openTill: myHours[3] ? myHours[3].openTill : '20:00', isOpen: myHours[3] ? myHours[3].isOpen : true, dayOfWeek: 3 },\n      { businessId: businessContext.id, openFrom: myHours[4] ? myHours[4].openFrom :  '9:00', openTill: myHours[4] ? myHours[4].openTill : '20:00', isOpen: myHours[4] ? myHours[4].isOpen : true, dayOfWeek: 4 },\n      { businessId: businessContext.id, openFrom: myHours[5] ? myHours[5].openFrom :  '9:50', openTill: myHours[5] ? myHours[5].openTill : '20:00', isOpen: myHours[5] ? myHours[5].isOpen : true, dayOfWeek: 5 },\n      { businessId: businessContext.id, openFrom: myHours[6] ? myHours[6].openFrom :  '9:00', openTill: myHours[6] ? myHours[6].openTill : '20:00', isOpen: myHours[6] ? myHours[6].isOpen : true, dayOfWeek: 6 },\n    ]\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box>\n          <Heading as='h2' size='md' mb={2}>Horario</Heading>\n        </Box>\n        <Box>\n        <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex w='100%' mt={10}>\n              <VStack w='80%' spacing={3}>\n                { formDay(values, handleChange, setFieldValue, 'Domingo', 0) }\n                { formDay(values, handleChange, setFieldValue, 'Lunes', 1) }\n                { formDay(values, handleChange, setFieldValue, 'Martes', 2) }\n                { formDay(values, handleChange, setFieldValue, 'Miercoles', 3) }\n                { formDay(values, handleChange, setFieldValue, 'Jueves', 4) }\n                { formDay(values, handleChange, setFieldValue, 'Viernes', 5) }\n                { formDay(values, handleChange, setFieldValue, 'Sabado', 6) }\n                <Button size='lg' alignSelf='flex-start' variant='primary' type='submit' isLoading={isSubmitting}>Guardar</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceList.tsx",["412"],"import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { IService } from '../../types/IService';\nimport { ServiceItem } from './ServiceItem';\n\ninterface ServiceListProps {\n  services: IService[]\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceList: React.FC<ServiceListProps> = ({ services, handleEditService, handleDeleteService }) => {\n  return (\n    <Box shadow='sm'>\n      { services.map((item) => (\n        <ServiceItem\n          service={item}\n          handleEditService={handleEditService}\n          handleDeleteService={handleDeleteService}\n          key={item.id}\n        />\n      )) }\n    </Box>\n  );\n}",["413","414"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/constants.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/reportWebVitals.ts",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/generateName.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/welcomeValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/categoryService.tsx",["415"],"import HttpClient from './HttpClient';\n\nimport { API_DOMAIN, URL_API } from \"../config/constants\";\n\nexport class CategoryService extends HttpClient {\n\n  public constructor() {\n    super(`${API_DOMAIN}/api/v1`);\n  }\n\n  public getAll = () => this.instance.get('/categories');\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingCover.tsx",["416"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Footer.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Services.tsx",["417","418","419","420","421"],{"ruleId":"422","replacedBy":"423"},{"ruleId":"424","replacedBy":"425"},{"ruleId":"426","severity":1,"message":"427","line":15,"column":47,"nodeType":"428","messageId":"429","endLine":15,"endColumn":49},{"ruleId":"422","replacedBy":"430"},{"ruleId":"424","replacedBy":"431"},{"ruleId":"432","severity":1,"message":"433","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":21},{"ruleId":"426","severity":1,"message":"427","line":17,"column":67,"nodeType":"428","messageId":"429","endLine":17,"endColumn":70},{"ruleId":"436","severity":1,"message":"437","line":38,"column":6,"nodeType":"438","endLine":38,"endColumn":8,"suggestions":"439"},{"ruleId":"422","replacedBy":"440"},{"ruleId":"424","replacedBy":"441"},{"ruleId":"432","severity":1,"message":"442","line":2,"column":23,"nodeType":"434","messageId":"435","endLine":2,"endColumn":32},{"ruleId":"432","severity":1,"message":"443","line":2,"column":57,"nodeType":"434","messageId":"435","endLine":2,"endColumn":67},{"ruleId":"432","severity":1,"message":"444","line":2,"column":90,"nodeType":"434","messageId":"435","endLine":2,"endColumn":97},{"ruleId":"432","severity":1,"message":"445","line":4,"column":10,"nodeType":"434","messageId":"435","endLine":4,"endColumn":30},{"ruleId":"432","severity":1,"message":"446","line":4,"column":32,"nodeType":"434","messageId":"435","endLine":4,"endColumn":52},{"ruleId":"426","severity":1,"message":"427","line":33,"column":49,"nodeType":"428","messageId":"429","endLine":33,"endColumn":51},{"ruleId":"436","severity":1,"message":"447","line":53,"column":6,"nodeType":"438","endLine":53,"endColumn":8,"suggestions":"448"},{"ruleId":"432","severity":1,"message":"449","line":1,"column":15,"nodeType":"434","messageId":"435","endLine":1,"endColumn":19},{"ruleId":"432","severity":1,"message":"450","line":1,"column":30,"nodeType":"434","messageId":"435","endLine":1,"endColumn":34},{"ruleId":"422","replacedBy":"451"},{"ruleId":"424","replacedBy":"452"},{"ruleId":"422","replacedBy":"453"},{"ruleId":"424","replacedBy":"454"},{"ruleId":"432","severity":1,"message":"455","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":18},{"ruleId":"432","severity":1,"message":"456","line":5,"column":10,"nodeType":"434","messageId":"435","endLine":5,"endColumn":27},{"ruleId":"432","severity":1,"message":"457","line":2,"column":63,"nodeType":"434","messageId":"435","endLine":2,"endColumn":69},{"ruleId":"432","severity":1,"message":"458","line":2,"column":71,"nodeType":"434","messageId":"435","endLine":2,"endColumn":81},{"ruleId":"432","severity":1,"message":"459","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":18},{"ruleId":"426","severity":1,"message":"427","line":14,"column":61,"nodeType":"428","messageId":"429","endLine":14,"endColumn":63},{"ruleId":"432","severity":1,"message":"460","line":2,"column":57,"nodeType":"434","messageId":"435","endLine":2,"endColumn":60},{"ruleId":"432","severity":1,"message":"450","line":2,"column":62,"nodeType":"434","messageId":"435","endLine":2,"endColumn":66},{"ruleId":"432","severity":1,"message":"449","line":2,"column":68,"nodeType":"434","messageId":"435","endLine":2,"endColumn":72},{"ruleId":"432","severity":1,"message":"443","line":2,"column":74,"nodeType":"434","messageId":"435","endLine":2,"endColumn":84},{"ruleId":"432","severity":1,"message":"444","line":2,"column":86,"nodeType":"434","messageId":"435","endLine":2,"endColumn":93},{"ruleId":"432","severity":1,"message":"445","line":10,"column":10,"nodeType":"434","messageId":"435","endLine":10,"endColumn":30},{"ruleId":"432","severity":1,"message":"446","line":10,"column":32,"nodeType":"434","messageId":"435","endLine":10,"endColumn":52},{"ruleId":"426","severity":1,"message":"427","line":14,"column":73,"nodeType":"428","messageId":"429","endLine":14,"endColumn":75},{"ruleId":"432","severity":1,"message":"461","line":2,"column":87,"nodeType":"434","messageId":"435","endLine":2,"endColumn":98},{"ruleId":"432","severity":1,"message":"462","line":2,"column":100,"nodeType":"434","messageId":"435","endLine":2,"endColumn":106},{"ruleId":"432","severity":1,"message":"450","line":2,"column":108,"nodeType":"434","messageId":"435","endLine":2,"endColumn":112},{"ruleId":"432","severity":1,"message":"463","line":2,"column":114,"nodeType":"434","messageId":"435","endLine":2,"endColumn":127},{"ruleId":"432","severity":1,"message":"464","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":19},{"ruleId":"432","severity":1,"message":"465","line":1,"column":21,"nodeType":"434","messageId":"435","endLine":1,"endColumn":28},{"ruleId":"432","severity":1,"message":"466","line":3,"column":22,"nodeType":"434","messageId":"435","endLine":3,"endColumn":29},{"ruleId":"432","severity":1,"message":"467","line":9,"column":21,"nodeType":"434","messageId":"435","endLine":9,"endColumn":30},{"ruleId":"422","replacedBy":"468"},{"ruleId":"424","replacedBy":"469"},{"ruleId":"426","severity":1,"message":"427","line":13,"column":65,"nodeType":"428","messageId":"429","endLine":13,"endColumn":68},{"ruleId":"436","severity":1,"message":"470","line":64,"column":6,"nodeType":"438","endLine":64,"endColumn":8,"suggestions":"471"},{"ruleId":"426","severity":1,"message":"427","line":11,"column":43,"nodeType":"428","messageId":"429","endLine":11,"endColumn":45},{"ruleId":"432","severity":1,"message":"472","line":12,"column":10,"nodeType":"434","messageId":"435","endLine":12,"endColumn":17},{"ruleId":"432","severity":1,"message":"472","line":11,"column":10,"nodeType":"434","messageId":"435","endLine":11,"endColumn":17},{"ruleId":"436","severity":1,"message":"473","line":31,"column":6,"nodeType":"438","endLine":31,"endColumn":8,"suggestions":"474"},{"ruleId":"432","severity":1,"message":"475","line":3,"column":38,"nodeType":"434","messageId":"435","endLine":3,"endColumn":44},{"ruleId":"432","severity":1,"message":"460","line":2,"column":57,"nodeType":"434","messageId":"435","endLine":2,"endColumn":60},{"ruleId":"432","severity":1,"message":"450","line":2,"column":62,"nodeType":"434","messageId":"435","endLine":2,"endColumn":66},{"ruleId":"432","severity":1,"message":"449","line":2,"column":68,"nodeType":"434","messageId":"435","endLine":2,"endColumn":72},{"ruleId":"432","severity":1,"message":"443","line":2,"column":74,"nodeType":"434","messageId":"435","endLine":2,"endColumn":84},{"ruleId":"432","severity":1,"message":"444","line":2,"column":86,"nodeType":"434","messageId":"435","endLine":2,"endColumn":93},{"ruleId":"432","severity":1,"message":"445","line":10,"column":10,"nodeType":"434","messageId":"435","endLine":10,"endColumn":30},{"ruleId":"432","severity":1,"message":"446","line":10,"column":32,"nodeType":"434","messageId":"435","endLine":10,"endColumn":52},{"ruleId":"426","severity":1,"message":"427","line":15,"column":67,"nodeType":"428","messageId":"429","endLine":15,"endColumn":69},{"ruleId":"432","severity":1,"message":"460","line":2,"column":57,"nodeType":"434","messageId":"435","endLine":2,"endColumn":60},{"ruleId":"432","severity":1,"message":"450","line":2,"column":62,"nodeType":"434","messageId":"435","endLine":2,"endColumn":66},{"ruleId":"426","severity":1,"message":"427","line":18,"column":59,"nodeType":"428","messageId":"429","endLine":18,"endColumn":61},{"ruleId":"432","severity":1,"message":"476","line":2,"column":65,"nodeType":"434","messageId":"435","endLine":2,"endColumn":72},{"ruleId":"432","severity":1,"message":"477","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":35},{"ruleId":"432","severity":1,"message":"464","line":1,"column":37,"nodeType":"434","messageId":"435","endLine":1,"endColumn":46},{"ruleId":"432","severity":1,"message":"478","line":1,"column":48,"nodeType":"434","messageId":"435","endLine":1,"endColumn":56},{"ruleId":"432","severity":1,"message":"450","line":2,"column":10,"nodeType":"434","messageId":"435","endLine":2,"endColumn":14},{"ruleId":"432","severity":1,"message":"460","line":2,"column":25,"nodeType":"434","messageId":"435","endLine":2,"endColumn":28},{"ruleId":"432","severity":1,"message":"479","line":2,"column":36,"nodeType":"434","messageId":"435","endLine":2,"endColumn":41},{"ruleId":"432","severity":1,"message":"462","line":2,"column":52,"nodeType":"434","messageId":"435","endLine":2,"endColumn":58},{"ruleId":"432","severity":1,"message":"457","line":2,"column":60,"nodeType":"434","messageId":"435","endLine":2,"endColumn":66},{"ruleId":"432","severity":1,"message":"480","line":2,"column":68,"nodeType":"434","messageId":"435","endLine":2,"endColumn":77},{"ruleId":"432","severity":1,"message":"481","line":2,"column":79,"nodeType":"434","messageId":"435","endLine":2,"endColumn":87},{"ruleId":"432","severity":1,"message":"482","line":7,"column":10,"nodeType":"434","messageId":"435","endLine":7,"endColumn":25},{"ruleId":"432","severity":1,"message":"483","line":8,"column":10,"nodeType":"434","messageId":"435","endLine":8,"endColumn":21},{"ruleId":"432","severity":1,"message":"484","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":20},{"ruleId":"432","severity":1,"message":"462","line":1,"column":15,"nodeType":"434","messageId":"435","endLine":1,"endColumn":21},{"ruleId":"432","severity":1,"message":"485","line":1,"column":23,"nodeType":"434","messageId":"435","endLine":1,"endColumn":30},{"ruleId":"432","severity":1,"message":"486","line":1,"column":38,"nodeType":"434","messageId":"435","endLine":1,"endColumn":44},{"ruleId":"432","severity":1,"message":"487","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":29},{"ruleId":"432","severity":1,"message":"488","line":3,"column":10,"nodeType":"434","messageId":"435","endLine":3,"endColumn":14},{"ruleId":"432","severity":1,"message":"479","line":2,"column":21,"nodeType":"434","messageId":"435","endLine":2,"endColumn":26},{"ruleId":"432","severity":1,"message":"489","line":6,"column":3,"nodeType":"434","messageId":"435","endLine":6,"endColumn":13},{"ruleId":"432","severity":1,"message":"490","line":11,"column":8,"nodeType":"434","messageId":"435","endLine":11,"endColumn":19},{"ruleId":"491","severity":1,"message":"492","line":4,"column":26,"nodeType":"493","messageId":"494","endLine":4,"endColumn":28},{"ruleId":"491","severity":1,"message":"492","line":16,"column":26,"nodeType":"493","messageId":"494","endLine":16,"endColumn":28},{"ruleId":"426","severity":1,"message":"427","line":14,"column":67,"nodeType":"428","messageId":"429","endLine":14,"endColumn":69},{"ruleId":"432","severity":1,"message":"483","line":13,"column":10,"nodeType":"434","messageId":"435","endLine":13,"endColumn":21},{"ruleId":"432","severity":1,"message":"495","line":34,"column":10,"nodeType":"434","messageId":"435","endLine":34,"endColumn":19},{"ruleId":"436","severity":1,"message":"470","line":69,"column":6,"nodeType":"438","endLine":69,"endColumn":8,"suggestions":"496"},{"ruleId":"432","severity":1,"message":"497","line":1,"column":17,"nodeType":"434","messageId":"435","endLine":1,"endColumn":31},{"ruleId":"432","severity":1,"message":"498","line":3,"column":27,"nodeType":"434","messageId":"435","endLine":3,"endColumn":42},{"ruleId":"432","severity":1,"message":"499","line":10,"column":10,"nodeType":"434","messageId":"435","endLine":10,"endColumn":18},{"ruleId":"426","severity":1,"message":"427","line":26,"column":65,"nodeType":"428","messageId":"429","endLine":26,"endColumn":67},{"ruleId":"432","severity":1,"message":"500","line":51,"column":15,"nodeType":"434","messageId":"435","endLine":51,"endColumn":23},{"ruleId":"436","severity":1,"message":"473","line":57,"column":6,"nodeType":"438","endLine":57,"endColumn":8,"suggestions":"501"},{"ruleId":"432","severity":1,"message":"449","line":1,"column":23,"nodeType":"434","messageId":"435","endLine":1,"endColumn":27},{"ruleId":"432","severity":1,"message":"502","line":1,"column":37,"nodeType":"434","messageId":"435","endLine":1,"endColumn":41},{"ruleId":"432","severity":1,"message":"464","line":2,"column":17,"nodeType":"434","messageId":"435","endLine":2,"endColumn":26},{"ruleId":"432","severity":1,"message":"483","line":7,"column":10,"nodeType":"434","messageId":"435","endLine":7,"endColumn":21},{"ruleId":"432","severity":1,"message":"503","line":8,"column":10,"nodeType":"434","messageId":"435","endLine":8,"endColumn":24},{"ruleId":"432","severity":1,"message":"499","line":9,"column":10,"nodeType":"434","messageId":"435","endLine":9,"endColumn":18},{"ruleId":"426","severity":1,"message":"427","line":19,"column":51,"nodeType":"428","messageId":"429","endLine":19,"endColumn":53},{"ruleId":"432","severity":1,"message":"504","line":16,"column":10,"nodeType":"434","messageId":"435","endLine":16,"endColumn":26},{"ruleId":"432","severity":1,"message":"505","line":7,"column":10,"nodeType":"434","messageId":"435","endLine":7,"endColumn":19},{"ruleId":"432","severity":1,"message":"506","line":31,"column":9,"nodeType":"434","messageId":"435","endLine":31,"endColumn":16},{"ruleId":"436","severity":1,"message":"473","line":50,"column":6,"nodeType":"438","endLine":50,"endColumn":8,"suggestions":"507"},{"ruleId":"432","severity":1,"message":"450","line":2,"column":15,"nodeType":"434","messageId":"435","endLine":2,"endColumn":19},{"ruleId":"422","replacedBy":"508"},{"ruleId":"424","replacedBy":"509"},{"ruleId":"432","severity":1,"message":"466","line":3,"column":22,"nodeType":"434","messageId":"435","endLine":3,"endColumn":29},{"ruleId":"426","severity":1,"message":"427","line":10,"column":61,"nodeType":"428","messageId":"429","endLine":10,"endColumn":63},{"ruleId":"432","severity":1,"message":"433","line":1,"column":10,"nodeType":"434","messageId":"435","endLine":1,"endColumn":21},{"ruleId":"432","severity":1,"message":"476","line":1,"column":42,"nodeType":"434","messageId":"435","endLine":1,"endColumn":49},{"ruleId":"432","severity":1,"message":"510","line":6,"column":10,"nodeType":"434","messageId":"435","endLine":6,"endColumn":25},{"ruleId":"426","severity":1,"message":"427","line":17,"column":51,"nodeType":"428","messageId":"429","endLine":17,"endColumn":54},{"ruleId":"436","severity":1,"message":"437","line":38,"column":6,"nodeType":"438","endLine":38,"endColumn":8,"suggestions":"511"},"no-native-reassign",["512"],"no-negated-in-lhs",["513"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["512"],["513"],"@typescript-eslint/no-unused-vars","'AlertDialog' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchServices'. Either include it or remove the dependency array.","ArrayExpression",["514"],["512"],["513"],"'Container' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'AiOutlineCheckCircle' is defined but never used.","'AiOutlineCloseCircle' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchBooking'. Either include it or remove the dependency array.",["515"],"'Flex' is defined but never used.","'Text' is defined but never used.",["512"],["513"],["512"],["513"],"'position' is defined but never used.","'formatBookingDate' is defined but never used.","'VStack' is defined but never used.","'SimpleGrid' is defined but never used.","'IoIosAdd' is defined but never used.","'Box' is defined but never used.","'ModalFooter' is defined but never used.","'Button' is defined but never used.","'useDisclosure' is defined but never used.","'useEffect' is defined but never used.","'useMemo' is defined but never used.","'URL_API' is defined but never used.","'setOnline' is assigned a value but never used.",["512"],["513"],"React Hook useEffect has a missing dependency: 'fetchAddress'. Either include it or remove the dependency array.",["516"],"'Loading' is defined but never used.","React Hook useEffect has a missing dependency: 'businessContext.id'. Either include it or remove the dependency array.",["517"],"'useRef' is defined but never used.","'Heading' is defined but never used.","'HtmlHTMLAttributes' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'FormLabel' is defined but never used.","'useToast' is defined but never used.","'BusinessService' is defined but never used.","'LoadingView' is defined but never used.","'useHistory' is defined but never used.","'Divider' is defined but never used.","'HStack' is defined but never used.","'CgChevronDoubleDown' is defined but never used.","'User' is defined but never used.","'CgUserList' is defined but never used.","'ReserlyLogo' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isLoading' is assigned a value but never used.",["518"],"'HTMLAttributes' is defined but never used.","'EventPropGetter' is defined but never used.","'IBooking' is defined but never used.","'newHours' is assigned a value but never used.",["519"],"'Link' is defined but never used.","'BookingService' is defined but never used.","'SettingsServices' is defined but never used.","'IBusiness' is defined but never used.","'history' is assigned a value but never used.",["520"],["512"],["513"],"'WrapperSettings' is defined but never used.",["521"],"no-global-assign","no-unsafe-negation",{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"526","fix":"530"},{"desc":"528","fix":"531"},{"desc":"528","fix":"532"},{"desc":"522","fix":"533"},"Update the dependencies array to be: [fetchServices]",{"range":"534","text":"535"},"Update the dependencies array to be: [fetchBooking]",{"range":"536","text":"537"},"Update the dependencies array to be: [fetchAddress]",{"range":"538","text":"539"},"Update the dependencies array to be: [businessContext.id]",{"range":"540","text":"541"},{"range":"542","text":"539"},{"range":"543","text":"541"},{"range":"544","text":"541"},{"range":"545","text":"535"},[1516,1518],"[fetchServices]",[1376,1378],"[fetchBooking]",[2260,2262],"[fetchAddress]",[1253,1255],"[businessContext.id]",[2666,2668],[1875,1877],[1554,1556],[1492,1494]]