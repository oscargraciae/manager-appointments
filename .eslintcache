[{"/Users/oscargracia/Documents/proyectos/boombook/manager/src/index.tsx":"1","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/theme.tsx":"2","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Home.tsx":"3","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Login.tsx":"4","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Signup.tsx":"5","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/BookingCalendar.tsx":"6","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/NewBusiness.tsx":"7","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAddress.tsx":"8","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsLocation.tsx":"9","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Settings.tsx":"10","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsHour.tsx":"11","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Wrapper.tsx":"12","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/AlertError.tsx":"13","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/LoadingView.tsx":"14","/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/constants.tsx":"15","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/signupValidation.tsx":"16","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessService.tsx":"17","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/calendar/Calendar.tsx":"18","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/Welcome.tsx":"19","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Loading.tsx":"20","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Header.tsx":"21","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/businessValidation.tsx":"22","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingHours.tsx":"23","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceForm.tsx":"24","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/newServiceValidation.tsx":"25","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsServices.tsx":"26","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/InputField.tsx":"27","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/userService.tsx":"28","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ModalNewService.tsx":"29","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Sidebar.tsx":"30","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingServices.tsx":"31","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Layout.tsx":"32","/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/loginValidation.tsx":"33","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingSuccess.tsx":"34","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingInformation.tsx":"35","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/HttpClient.tsx":"36","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/ContainerPage.tsx":"37","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingCalendar.tsx":"38","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/DeleteServiceDialog.tsx":"39","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/business/AddressForm.tsx":"40","/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/bookingService.tsx":"41","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatHoursDate.tsx":"42","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/CalendarItem.tsx":"43","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/hoursFilters.tsx":"44","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingsList.tsx":"45","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Bookings.tsx":"46","/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatDate.tsx":"47","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/WrapperSettings.tsx":"48","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingListNext.tsx":"49","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingHistoryList.tsx":"50"},{"size":655,"mtime":1608599718469,"results":"51","hashOfConfig":"52"},{"size":2236,"mtime":1611081577603,"results":"53","hashOfConfig":"52"},{"size":417,"mtime":1611032444180,"results":"54","hashOfConfig":"52"},{"size":2568,"mtime":1609356265362,"results":"55","hashOfConfig":"52"},{"size":2712,"mtime":1609349427575,"results":"56","hashOfConfig":"52"},{"size":427,"mtime":1608769442409,"results":"57","hashOfConfig":"52"},{"size":3106,"mtime":1609358325713,"results":"58","hashOfConfig":"52"},{"size":3458,"mtime":1609376453185,"results":"59","hashOfConfig":"52"},{"size":6288,"mtime":1609382014998,"results":"60","hashOfConfig":"52"},{"size":4269,"mtime":1610665309149,"results":"61","hashOfConfig":"52"},{"size":6387,"mtime":1610737509984,"results":"62","hashOfConfig":"52"},{"size":428,"mtime":1608598132872,"results":"63","hashOfConfig":"52"},{"size":470,"mtime":1608703263232,"results":"64","hashOfConfig":"52"},{"size":339,"mtime":1609375491142,"results":"65","hashOfConfig":"52"},{"size":195,"mtime":1609289390192,"results":"66","hashOfConfig":"52"},{"size":619,"mtime":1609557698721,"results":"67","hashOfConfig":"52"},{"size":1483,"mtime":1609791309903,"results":"68","hashOfConfig":"52"},{"size":4048,"mtime":1608923811281,"results":"69","hashOfConfig":"52"},{"size":2849,"mtime":1609360257865,"results":"70","hashOfConfig":"52"},{"size":465,"mtime":1608931363552,"results":"71","hashOfConfig":"52"},{"size":1509,"mtime":1611086263628,"results":"72","hashOfConfig":"52"},{"size":345,"mtime":1609362204983,"results":"73","hashOfConfig":"52"},{"size":4890,"mtime":1609559796814,"results":"74","hashOfConfig":"52"},{"size":3371,"mtime":1609728292711,"results":"75","hashOfConfig":"52"},{"size":358,"mtime":1609558404865,"results":"76","hashOfConfig":"52"},{"size":3098,"mtime":1609729943959,"results":"77","hashOfConfig":"52"},{"size":2572,"mtime":1609556792115,"results":"78","hashOfConfig":"52"},{"size":555,"mtime":1609348998265,"results":"79","hashOfConfig":"52"},{"size":855,"mtime":1609643196313,"results":"80","hashOfConfig":"52"},{"size":1552,"mtime":1611088268340,"results":"81","hashOfConfig":"52"},{"size":3704,"mtime":1609559851450,"results":"82","hashOfConfig":"52"},{"size":2252,"mtime":1610663097975,"results":"83","hashOfConfig":"52"},{"size":465,"mtime":1608745602962,"results":"84","hashOfConfig":"52"},{"size":893,"mtime":1609275485344,"results":"85","hashOfConfig":"52"},{"size":1329,"mtime":1609276176399,"results":"86","hashOfConfig":"52"},{"size":753,"mtime":1608697602026,"results":"87","hashOfConfig":"52"},{"size":458,"mtime":1611032462405,"results":"88","hashOfConfig":"52"},{"size":4207,"mtime":1611110324449,"results":"89","hashOfConfig":"52"},{"size":2075,"mtime":1609729996424,"results":"90","hashOfConfig":"52"},{"size":6080,"mtime":1609382863792,"results":"91","hashOfConfig":"52"},{"size":455,"mtime":1611102427970,"results":"92","hashOfConfig":"52"},{"size":922,"mtime":1611102843776,"results":"93","hashOfConfig":"52"},{"size":364,"mtime":1611086039170,"results":"94","hashOfConfig":"52"},{"size":531,"mtime":1611085105614,"results":"95","hashOfConfig":"52"},{"size":4276,"mtime":1611103804264,"results":"96","hashOfConfig":"52"},{"size":1632,"mtime":1611100825138,"results":"97","hashOfConfig":"52"},{"size":125,"mtime":1611090270914,"results":"98","hashOfConfig":"52"},{"size":1121,"mtime":1611093309700,"results":"99","hashOfConfig":"52"},{"size":1863,"mtime":1611102752965,"results":"100","hashOfConfig":"52"},{"size":1981,"mtime":1611104084791,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"1n66cqf",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"104"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"114"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"104"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/oscargracia/Documents/proyectos/boombook/manager/src/index.tsx",[],["215","216"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/theme.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Home.tsx",["217"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Login.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Signup.tsx",["218"],"import React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\nimport { AlertError } from '../components/general/AlertError';\nimport { signupValidation } from '../validations/signupValidation';\n\ninterface SignupProps {}\n\nexport const Signup: React.FC<SignupProps> = ({}) => {\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.signup(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n      return;\n    }\n\n    history.push('/');\n\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Bienvenido</Heading>\n        <Text mt={2} fontWeight='bold'>Registrate y obten 3 meses gratis.</Text>\n        <Box mt={4}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={signupValidation}>\n            {({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={4}>\n                  <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' />\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Registrate</Button>\n\n                  { error && <AlertError description={error} /> }\n\n                  <Text as=\"em\" fontSize='sm'>Al registrarte, confirmas que aceptas los <Link href='#' color=\"teal.500\">Términos y condiciones</Link> y la <Link href='#' color=\"teal.500\">Política de privacidad</Link>.</Text>\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿Ya tienes tu cuenta?{\" \"}\n                    <Link as={Lnk} to='/login' color='primary' fontWeight='bold'>\n                      Iniciar sesion\n                    </Link>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}",["219","220"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/BookingCalendar.tsx",["221"],"import React from 'react'\nimport { Box } from '@chakra-ui/react';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { Calendar } from '../components/calendar/Calendar';\n\ninterface BookingCalendarProps {}\n\nexport const BookingCalendar: React.FC<BookingCalendarProps> = ({}) => {\n  return (\n    <ContainerPage title='Calendario'>\n      <Box>\n        <Calendar />\n      </Box>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/NewBusiness.tsx",["222"],"import { Box, Heading, Progress } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Loading } from '../components/general/Loading';\nimport { BoardingHours } from '../components/onboarding/BoardingHours';\nimport { BoardingInformation } from '../components/onboarding/BoardingInformation';\nimport { BoardingServices } from '../components/onboarding/BoardingServices';\nimport { BoardingSuccess } from '../components/onboarding/BoardingSuccess';\nimport { Welcome } from '../components/onboarding/Welcome';\nimport { BusinessService } from '../services/businessService';\n\nimport { UserService } from '../services/userService';\nimport { IBusiness } from '../types/Business';\nimport { User } from '../types/User';\n\ninterface NewBusinessParams {\n  step?: string | undefined\n}\n\nexport const NewBusiness: React.FC = () => {\n  const history = useHistory();\n  const params = useParams<NewBusinessParams>();\n  const option = params.step !== undefined ? Number(params.step) : 1;\n\n  const [step, setStep] = useState<number>(option || 1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  \n\n  useEffect(() => {\n    const option = params.step !== undefined ? Number(params.step) : 1;\n    setStep(option)\n  }, [option, params.step]);\n\n  useEffect(() => {\n    const getMe = async () => {\n      const { success, user } = await new UserService().getMe();\n      if (!user || !success) {\n        return;\n      }\n      setUser(user);\n    };\n  \n    const getBusiness = async () => {\n      const { success, business }  = await new BusinessService().get();\n      if (success) {\n        setBusiness(business);\n      }\n    }\n    getMe();\n    getBusiness();\n    setIsLoading(false);\n    \n  }, []);\n\n  const handleSteps = (step: number) => {\n    // if (step === 4) {\n    //   history.push('/');\n    //   return;\n    // }\n    setStep(step)\n  }\n\n  if (!user || isLoading) {\n    return <Loading />\n  }\n\n  const buildOnboarding = () => {\n    switch (step) {\n      case 1:\n        return <Welcome business={business} user={user} />\n      case 2:\n        return <BoardingInformation setStep={handleSteps} />\n      case 3:\n        return <BoardingServices />\n      case 4:\n        return <BoardingHours />\n      case 5:\n        return <BoardingSuccess />\n      default:\n        return <Heading>No se pudo cargar la pagina</Heading>\n    }\n  }\n\n  return (\n    <Box bg='#FFFFFF' height='100vh'>\n      <Box mx='auto' w='800px' py={10}>\n        <Box>\n          <Progress value={20 * step} colorScheme='green' />\n        </Box>\n        <Box mt={10}>\n          { (user && !isLoading) && buildOnboarding() }\n        </Box>\n        {/* <Flex direction='row' mt={6}>\n          <Button variant='link' onClick={goBack}>\n            Atras\n          </Button>\n          <Spacer />\n          <Button size='lg' variant='primary'>\n            Siguiente\n          </Button>\n        </Flex> */}\n        \n      </Box>\n    </Box>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsAddress.tsx",["223","224"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Box, Button, Heading, HStack, useToast, VStack , Text} from '@chakra-ui/react';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddress } from '../types/BusinessAddress';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { InputField } from '../components/general/InputField';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\ninterface SettingsAddressProps {}\n\nexport const SettingsAddress: React.FC<SettingsAddressProps> = () => {\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n  \n  useEffect(() => {\n    const fetchAddress = async () => {\n      const { address } = await new BusinessAddressService().get(businessContext.id);\n      if (address) {\n        setAddress(address);\n      }\n      console.log('Direccion', address);\n    }\n\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async (values: any) => {\n    if (businessContext && businessContext.id && address?.id) {\n      console.log('Id de negocio', businessContext.id, values);\n      const { success } = await new BusinessAddressService().update(values, businessContext.id, address.id);\n      if (success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  if (!address) {\n    return <LoadingView />\n  }\n\n  const initialValues = {\n    street: address.street ? address.street : '',\n    area: address.area ? address.area : '',\n    city: address.city ? address.city : '',\n    state: address.state ? address.state : '',\n    zipcode: address.zipcode ? address.zipcode : '',\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Dirección</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Esta información es utilizada  si la ubicación por coordenadas no es precisa, así que es recomendable ingresarla.</Text>\n        <Box w='80%'>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            { (({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='street' label='Calle y número' />\n                  <InputField inputSize='lg' name='area' label='Colonia' />\n                </HStack>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='city' label='Municipio' />\n                  <InputField inputSize='lg' name='state' label='Estado' />\n                </HStack>\n                <HStack spacing={4} w='49%'>\n                  <InputField inputSize='lg' name='zipcode' label='Codigo postal' />\n                </HStack>\n                <Button variant='primary' type='submit' size='lg' isLoading={isSubmitting}>Guardar</Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsLocation.tsx",["225"],"import React, { useContext, useRef, useState, useEffect } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button, useToast, Heading } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { BusinessAddress, BusinessAddressResponse } from '../types/BusinessAddress';\nimport { TOKEN_MAPBOX } from '../config/constants';\n\ninterface SettingsLocationProps {\n\n}\n\nexport const SettingsLocation: React.FC<SettingsLocationProps> = () => {\n  // Contexto\n  const businessContext = useContext(UserContext);\n  \n  // Hooks\n  const toast = useToast();\n  const mapContainer = useRef<any>(null);\n\n  // States\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [latLng, setLatLng] = useState({ lng: -74.5, lat: 40 });\n  const [map, setMap] = useState<mapboxgl.Map | null>(null);\n  const [mrk, setMrk] = useState<mapboxgl.Marker | null>(null);\n  \n  const fetchAddress = async (map: Map) => {\n    const { success, address } = await new BusinessAddressService().get(businessContext.id);\n    if (success && address) {\n      setAddress(address);\n      setGeoAddress(address.addressMap);\n      setLatLng({ lat: address.lat, lng: address.lng });\n\n      if (map) {\n        map.jumpTo({ center: [address.lng, address.lat], zoom: 16 });\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([address.lng, address.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        // const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([latLng.lng, latLng.lat]).addTo(map);\n        setMrk(marker);\n      }\n    }\n  }\n\n  useEffect(() => {\n    mapboxgl.accessToken = TOKEN_MAPBOX;\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n      center: [-100.3161126, 25.6866142], // starting position [lng, lat]\n      zoom: 16 // starting zoom\n    });\n    setMap(map);\n\n    \n    map.on('load', function() {\n      fetchAddress(map);\n    });\n\n  }, [])\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (businessContext.id && address?.id) {\n      response = await new BusinessAddressService().update({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress }, businessContext.id, address.id);\n      if (response.success) {\n        // setAddress(response.address);\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    const latLng = await getLatLng(results[0]);\n    setLatLng(latLng);\n    if (map) {\n      \n      // map.jumpTo({ 'center': [latLng.lng, latLng.lat], 'zoom': 14 });\n      map.jumpTo({ center: [latLng.lng, latLng.lat], zoom: 16 });\n      if (mrk) {\n        mrk.setLngLat([latLng.lng, latLng.lat]);\n      }\n      // console.log('viejo marcado');\n      \n      // marker.on('dragend', () => onDragEnd(marker));\n    }\n  }\n\n  const onDragEnd = (marker: Marker) => {\n    var lngLat = marker.getLngLat();\n    setLatLng(lngLat);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Ubicación</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Ingresa correctamente esta\u0010 información, es la que visualizaran las personas para poder llegar a tu negocio</Text>\n\n        <Box>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n          { (({ isSubmitting }) => (\n            <Form>\n              <Flex aling='center' justify='center' mb={2}>\n                <VStack w='100%' align='flex-start'>\n                  <PlacesAutocomplete\n                    value={geoAddress}\n                    onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                    onSelect={handleSelect}\n                    searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                  >\n                    { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <Box w='100%'>\n                          <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                          <Box shadow='md' background='#FFFFFF'>\n                            { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                            {suggestions.map(suggestion => {\n                              return (\n                                <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                  <Text fontWeight='bold'>{suggestion.description}</Text>\n                                </Box>\n                              );\n                            })}\n                          </Box>\n                        </Box>\n                    )) }\n                  </PlacesAutocomplete>\n                </VStack>\n              </Flex>\n              <Box>\n                <Box w='100%' h='300px' ref={el => (mapContainer.current = el)}></Box>\n                <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n                \n              </Box>\n\n              <Flex mt={4} align='flex-start' justifyContent='flex-start'>\n                <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Guardar</Button>\n              </Flex>\n            </Form>\n          )) }\n        </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Settings.tsx",["226"],"// libraries\nimport React, { useEffect, useState } from 'react'\nimport { Box, VStack, Select, Button, FormControl, FormLabel, Heading, FormErrorMessage, useToast } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { InputField, TextareaField } from '../components/general/InputField';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { IBusiness } from '../types/Business';\nimport { businessValidation } from '../validations/businessValidation';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\n// local components\n\ninterface SettingsProps {}\n\nexport const Settings: React.FC<SettingsProps> = () => {\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const toast = useToast();\n\n  useEffect(() => {\n    const fetchBusiness = async () => {\n      const { business } = await new BusinessService().get();\n      console.log('Business', business);\n      \n      setBusiness(business);\n    }\n    fetchBusiness();\n  }, []);\n\n  const onSubmit = async (values: IBusiness) => {\n    if (business && business.id) {\n      const response =await new BusinessService().update(values, business.id)\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      console.log('respuesta', response);\n    }\n  }\n\n  if(!business) {\n    return <LoadingView />\n  }\n\n  const initialValues : IBusiness = {\n    name: business.name ? business.name : '',\n    description: business.description ? business.description : '',\n    businessCategoryId: business.businessCategoryId ? business.businessCategoryId : 0,\n    phone: business.phone ? business.phone : ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box w='70%'>\n          <Heading as='h2' size='md' mb={8}>Datos básicos</Heading>\n          <Formik initialValues={initialValues} onSubmit={onSubmit} validate={businessValidation}>\n            { (({ isSubmitting, values, handleChange, errors }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                  <InputField inputSize='lg' name='name' label='Nombre del negocio' />\n                  <TextareaField inputSize='lg' name='description' label='Descripción del negocio (opcional)' />\n                  <FormControl isInvalid={!!errors.businessCategoryId}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Categoría</FormLabel>\n                    <Select name='businessCategoryId' size='lg' value={values.businessCategoryId} onChange={handleChange}>\n                      <option value='0' >Selecciona una categoría</option>\n                      <option value='1' >Salon</option>\n                      <option value='2' >Spa</option>\n                      <option value='3' >Barberia</option>\n                      <option value='4' >Tatuajes</option>\n                      <option value='5' >Maquillaje</option>\n                      <option value='6' >Podologia</option>\n                      <option value='7' >Servicios para el hogar</option>\n                      <option value='8' >Servicios para el mascotas</option>\n                    </Select>\n                    { errors.businessCategoryId && <FormErrorMessage>{errors.businessCategoryId}</FormErrorMessage> }\n                  </FormControl>\n                  <InputField inputSize='lg' name='phone' label='Teléfono de contacto (opcional)' />\n                  {/* <HStack spacing={3} w='100%'>\n                    <InputField inputSize='lg' name='category' label='Horario de apertura' />\n                    <InputField inputSize='lg' name='category' label='Horario de clausura' />\n                  </HStack> */}\n                  <Button variant='primary' size='lg' type='submit' isLoading={isSubmitting}>\n                    Guardar\n                  </Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsHour.tsx",["227","228","229"],"import React, { useState, useEffect, useContext } from 'react'\nimport { Heading, HStack, Text, Tooltip, FormControl, Select, IconButton, Box, Flex, VStack, Button, useToast } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { FaDoorOpen, FaDoorClosed } from 'react-icons/fa';\n\n// Types\nimport { IBusiness } from '../types/Business';\n\n// services\nimport { BusinessService } from '../services/businessService';\nimport { formatHoursDate } from '../utils/formatHoursDate';\n\n// components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { IHour } from '../types/IHour';\n\n\ninterface SettingsHourProps {\n\n}\n\nexport const SettingsHour: React.FC<SettingsHourProps> = () => {\n  // context\n  const businessContext = useContext(UserContext);\n\n  // Hooks\n  const history = useHistory()\n  const toast = useToast();\n\n  // states\n  const [hours, setHours] = useState<string[]>([]);\n  const [myHours, setMyHours] = useState<IHour[]>([]);\n  \n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const newHours = formatHoursDate(response.hours);\n        setMyHours(newHours);\n      }\n    }\n\n    fetchHours();\n    getHours();\n  }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<2; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 30*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const onSubmit = async (values: any) => {\n    if (businessContext?.id) {\n      const response = await new BusinessService().createHours(values, businessContext.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const formDay = (values: any, handleChange: any, setFieldValue: any, label: string, dayOfWeek: number) => {\n    const isOpen : boolean = values.days[dayOfWeek].isOpen;\n    const { openFrom, openTill } = values.days[dayOfWeek];\n    return (\n      <HStack w='100%' direction='row' justify='center' align='center'>\n        <Text w='250px' textAlign='left' fontWeight='semibold'>{label}</Text>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openFrom`} size='lg' value={openFrom} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openTill`} size='lg' value={openTill} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <Tooltip label={isOpen ? 'Cerrar este día' : 'Abrir este día'} fontSize=\"md\">\n          <IconButton\n            colorScheme=\"teal\"\n            aria-label=\"Call Segun\"\n            size=\"lg\"\n            icon={isOpen ? <FaDoorOpen /> : <FaDoorClosed />}\n            onClick={() => setFieldValue(`days[${dayOfWeek}].isOpen`, !isOpen )}\n          />\n        </Tooltip>\n      </HStack>\n    )\n  }\n\n  if (!businessContext || myHours.length === 0) {\n    return <LoadingView />\n  }\n\n  console.log('my hours');\n  \n  const initialValue = {\n    days: [\n      { businessId: businessContext.id, openFrom: myHours[0] ? myHours[0].openFrom :  '9:00', openTill: myHours[0] ? myHours[0].openTill : '20:00', isOpen: myHours[0] ? myHours[0].isOpen : true, dayOfWeek: 0 },\n      { businessId: businessContext.id, openFrom: myHours[1] ? myHours[1].openFrom :  '9:10', openTill: myHours[1] ? myHours[1].openTill : '20:00', isOpen: myHours[1] ? myHours[1].isOpen : true, dayOfWeek: 1 },\n      { businessId: businessContext.id, openFrom: myHours[2] ? myHours[2].openFrom :  '9:00', openTill: myHours[2] ? myHours[2].openTill : '20:00', isOpen: myHours[2] ? myHours[2].isOpen : true, dayOfWeek: 2 },\n      { businessId: businessContext.id, openFrom: myHours[3] ? myHours[3].openFrom :  '9:00', openTill: myHours[3] ? myHours[3].openTill : '20:00', isOpen: myHours[3] ? myHours[3].isOpen : true, dayOfWeek: 3 },\n      { businessId: businessContext.id, openFrom: myHours[4] ? myHours[4].openFrom :  '9:00', openTill: myHours[4] ? myHours[4].openTill : '20:00', isOpen: myHours[4] ? myHours[4].isOpen : true, dayOfWeek: 4 },\n      { businessId: businessContext.id, openFrom: myHours[5] ? myHours[5].openFrom :  '9:50', openTill: myHours[5] ? myHours[5].openTill : '20:00', isOpen: myHours[5] ? myHours[5].isOpen : true, dayOfWeek: 5 },\n      { businessId: businessContext.id, openFrom: myHours[6] ? myHours[6].openFrom :  '9:00', openTill: myHours[6] ? myHours[6].openTill : '20:00', isOpen: myHours[6] ? myHours[6].isOpen : true, dayOfWeek: 6 },\n    ]\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box>\n          <Heading as='h2' size='md' mb={2}>Horario</Heading>\n        </Box>\n        <Box>\n        <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex w='100%' mt={10}>\n              <VStack w='80%' spacing={3}>\n                { formDay(values, handleChange, setFieldValue, 'Domingo', 0) }\n                { formDay(values, handleChange, setFieldValue, 'Lunes', 1) }\n                { formDay(values, handleChange, setFieldValue, 'Martes', 2) }\n                { formDay(values, handleChange, setFieldValue, 'Miercoles', 3) }\n                { formDay(values, handleChange, setFieldValue, 'Jueves', 4) }\n                { formDay(values, handleChange, setFieldValue, 'Viernes', 5) }\n                { formDay(values, handleChange, setFieldValue, 'Sabado', 6) }\n                <Button size='lg' alignSelf='flex-start' variant='primary' type='submit' isLoading={isSubmitting}>Guardar</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Wrapper.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/AlertError.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/LoadingView.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/config/constants.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/signupValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/businessService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/calendar/Calendar.tsx",["230","231","232","233"],"import React, { useEffect, useLayoutEffect, useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport { Box, Flex, Text } from '@chakra-ui/react';\nimport moment from 'moment';\n\ninterface CalendarProps {}\n\nconst cita = {\n  date: '12/25/2020',\n  time: '10:00',\n}\n\nconst citas = [\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '10:00',\n  },\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '11:00',\n  },\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '12:00',\n  },\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '13:00',\n  },\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '14:00',\n  },\n  {\n    name: 'Juan',\n    date: '12/25/2020',\n    time: '19:00',\n  } \n]\n\ntype days = {\n  dayName: string\n  dayNumber: string\n}\n\nexport const Calendar: React.FC<CalendarProps> = ({}) => {\n  const [days, setDays] = useState<days[]>([]);\n  const [hours, setHours] = useState<string[]>([]);\n  const [isRender, setIsRender] = useState(false);\n\n  useEffect(() => {\n    console.log('use effect')\n    const daysTmp : days[] = [];\n    // const currentDay = new Date();\n    let day = 0;\n    while (day < 7) {\n      // const answer = new Date().setDate(new Date().getDate() + 5);\n      let date = moment(new Date()).add({ days: day })\n      daysTmp.push({\n        dayName: date.format('ddd'),\n        dayNumber: date.format('DD')\n      });\n      day++;\n    }\n    \n    setDays(daysTmp);\n    getHours();\n    setIsRender(true);\n\n  }, []);\n\n  useEffect(() => {\n    if(isRender) {\n      citas.forEach((item, index) => {\n        // ReactDOM.render(book(item), document.getElementById('24-0:00'));\n      }); \n    }\n  })\n\n  useLayoutEffect(() => {\n    console.log('use layout')\n    // citas.forEach((item, index) => {\n    //   ReactDOM.render(book(item), document.getElementById('24-0:00'));\n    // });\n  })\n\n  // useEffect(() => {\n  //   // Consulta el API\n  //   citas.forEach((item, index) => {\n  //     ReactDOM.render(book(item), document.getElementById('24-0:00'));\n  //   });\n  // }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<4; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 15*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const book = (item: any, day?: string, time?: string) => {\n    // let date = moment(new Date(Date.parse(item.date)))\n    // if (date.format('ddd DD') === day && item.time === time) {\n    //   return <Text>Cita aqui</Text>\n    // }\n\n    return <Text>{item.name}</Text>\n  }\n\n  const headerDay = (item: days, index: number) => (\n    <Flex key={index} align='center' justify='center' bg='surface' width='14%' height='40px'>\n      <Text fontWeight='bold'>{item.dayName}</Text>\n    </Flex>\n  )\n\n  return (\n    <Box>\n      <Flex pos='sticky' top='0' borderTopWidth={1} borderBottomWidth={1} borderColor='borders'>\n        <Flex align='center' justify='center' bg='surface' width='5%' height='40px'>\n          <Text fontWeight='bold'>Horas</Text>\n        </Flex>\n        { days.map((item, i) => headerDay(item, i)) }\n      </Flex>\n      \n      <Flex direction='row'>\n        <Flex direction='column' w='5%'>\n          {\n            Array.from(Array(24), (e, i) => (\n              <Flex key={i} bg='surface' w='100%' height='120px' justify='center' align='center' borderWidth={1} borderColor='borders'>\n                <Text>{i}:00</Text>\n              </Flex>\n            ))\n          }\n        </Flex>\n        <Flex direction='row' w='95%'>\n          { days.map((day) => {\n            return (\n              <Flex key={day.dayNumber} direction='column' w='15%'>\n                {\n                  hours.map((time, key) => (\n                    <Box key={key}  id={`${day.dayNumber}-${time}`} bg='surface' height='30px' borderWidth={1} borderColor='borders' borderTopWidth='0px' borderLeftWidth='0px'>\n                      {/* { book(cita, day, time) } */}\n                    </Box>\n                  ))\n                }            \n              </Flex>\n            )\n          }) }\n        </Flex>\n      </Flex>\n      \n    </Box>\n  );\n}",["234","235"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/Welcome.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Loading.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Header.tsx",["236"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/businessValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingHours.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ServiceForm.tsx",["237"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/newServiceValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/SettingsServices.tsx",["238","239","240"],"import { AlertDialog, Box, Button, Flex, Heading, Spacer, Text, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { DeleteServiceDialog } from '../components/services/DeleteServiceDialog';\nimport { ModalNewService } from '../components/services/ModalNewService';\nimport { ServiceList } from '../components/services/ServiceList';\nimport { BusinessService } from '../services/businessService';\nimport { IService } from '../types/IService';\n\ninterface SettingsServicesProps {\n  \n}\n\nexport const SettingsServices: React.FC<SettingsServicesProps> = ({ }) => {\n  // Hooks\n  const { onOpen, isOpen, onClose } = useDisclosure()\n  const businessContext = useContext(UserContext);\n\n  // States\n  const [services, setServices] = useState<IService[]>([])\n  const [service, setService] = useState<IService>()\n  const [isLoading, setIsLoading] = useState(true);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const fetchServices = async  () => {\n    const { success, services } = await new BusinessService().getServices(businessContext.id);\n    if (success && services) {\n      setServices(services);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetchServices();\n  }, []);\n\n  const realodList = () => {\n    fetchServices();\n    onClose();\n  }\n\n  const handleCreateService = () => {\n    setService(undefined)\n    onOpen();\n  }\n\n  const handleEditService = (service: IService) => {\n    setService(service);\n    onOpen()\n    \n  }\n\n  const handleDeleteService = (service: IService) => {\n    setService(service);\n    setIsDeleteModal(true);\n  }\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ModalNewService isOpen={isOpen} onClose={onClose} realodList={realodList} service={service} />\n      { service &&  <DeleteServiceDialog isOpen={isDeleteModal} realodList={realodList} service={service} onClose={() => setIsDeleteModal(!isDeleteModal)} /> }\n      <ContainerPage title='Configuración'>\n        <WrapperSettings>\n          <Flex direction='row' align='center'>\n            <Box>\n              <Heading as='h2' size='md' mb={2}>Servicios</Heading>\n              <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Añade tantos servicios necesites para que tus clientes sepan todo lo que ofreces.</Text>\n            </Box>\n            <Spacer />\n            <Box>\n              <Button variant='primary' onClick={handleCreateService}>Nuevo servicio</Button>\n            </Box>\n          </Flex>\n          <Box>\n            <ServiceList\n              services={services}\n              handleEditService={handleEditService}\n              handleDeleteService={handleDeleteService}\n              />\n          </Box>\n        </WrapperSettings>\n      </ContainerPage>\n    </>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/InputField.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/userService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/ModalNewService.tsx",["241","242","243","244"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Sidebar.tsx",["245","246","247"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingServices.tsx",["248"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/Layout.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/validations/loginValidation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingSuccess.tsx",["249"],"import React from 'react'\nimport { Button, Flex, Heading, Text } from '@chakra-ui/react'\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport { APP_NAME } from '../../config/constants';\nimport { useHistory } from 'react-router-dom';\n\ninterface BoardingSuccessProps {}\n\nexport const BoardingSuccess: React.FC<BoardingSuccessProps> = ({}) => {\n  const history = useHistory();\n  return (\n    <Flex align='center' direction='column' textAlign='center'>\n      <AiFillCheckCircle size={90} color='#25CB67' />\n      <Heading my={6} as='h2'>Completado</Heading>\n      <Text fontSize='xl' fontWeight='500'>Gracias por registrate en {APP_NAME}, toda la información registrada anteriormente puede ser modificada desde la pagina de configuración.</Text>\n\n      <Button variant='primary' size='lg' mt={6} px={16} onClick={() => history.push('/')}>\n        Aceptar\n      </Button>\n    </Flex>\n  );\n}","/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/onboarding/BoardingInformation.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/HttpClient.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/ContainerPage.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingCalendar.tsx",["250","251","252","253","254","255","256"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/services/DeleteServiceDialog.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/business/AddressForm.tsx",["257"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/services/bookingService.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatHoursDate.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/CalendarItem.tsx",["258"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/hoursFilters.tsx",["259","260"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingsList.tsx",["261","262","263"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/pages/Bookings.tsx",["264","265","266","267","268","269","270"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/utils/formatDate.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/general/WrapperSettings.tsx",[],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingListNext.tsx",["271","272","273","274","275","276","277","278"],"/Users/oscargracia/Documents/proyectos/boombook/manager/src/components/booking/BookingHistoryList.tsx",["279","280","281","282","283","284","285","286"],{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":11,"column":43,"nodeType":"293","messageId":"294","endLine":11,"endColumn":45},{"ruleId":"291","severity":1,"message":"292","line":15,"column":47,"nodeType":"293","messageId":"294","endLine":15,"endColumn":49},{"ruleId":"287","replacedBy":"295"},{"ruleId":"289","replacedBy":"296"},{"ruleId":"291","severity":1,"message":"292","line":8,"column":65,"nodeType":"293","messageId":"294","endLine":8,"endColumn":67},{"ruleId":"297","severity":1,"message":"298","line":21,"column":9,"nodeType":"299","messageId":"300","endLine":21,"endColumn":16},{"ruleId":"297","severity":1,"message":"301","line":11,"column":10,"nodeType":"299","messageId":"300","endLine":11,"endColumn":17},{"ruleId":"302","severity":1,"message":"303","line":31,"column":6,"nodeType":"304","endLine":31,"endColumn":8,"suggestions":"305"},{"ruleId":"302","severity":1,"message":"306","line":65,"column":6,"nodeType":"304","endLine":65,"endColumn":8,"suggestions":"307"},{"ruleId":"297","severity":1,"message":"301","line":12,"column":10,"nodeType":"299","messageId":"300","endLine":12,"endColumn":17},{"ruleId":"297","severity":1,"message":"308","line":7,"column":10,"nodeType":"299","messageId":"300","endLine":7,"endColumn":19},{"ruleId":"297","severity":1,"message":"298","line":31,"column":9,"nodeType":"299","messageId":"300","endLine":31,"endColumn":16},{"ruleId":"302","severity":1,"message":"303","line":50,"column":6,"nodeType":"304","endLine":50,"endColumn":8,"suggestions":"309"},{"ruleId":"297","severity":1,"message":"310","line":2,"column":8,"nodeType":"299","messageId":"300","endLine":2,"endColumn":16},{"ruleId":"297","severity":1,"message":"311","line":8,"column":7,"nodeType":"299","messageId":"300","endLine":8,"endColumn":11},{"ruleId":"291","severity":1,"message":"292","line":51,"column":51,"nodeType":"293","messageId":"294","endLine":51,"endColumn":53},{"ruleId":"297","severity":1,"message":"312","line":109,"column":9,"nodeType":"299","messageId":"300","endLine":109,"endColumn":13},{"ruleId":"287","replacedBy":"313"},{"ruleId":"289","replacedBy":"314"},{"ruleId":"297","severity":1,"message":"315","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":20},{"ruleId":"297","severity":1,"message":"316","line":2,"column":65,"nodeType":"299","messageId":"300","endLine":2,"endColumn":72},{"ruleId":"297","severity":1,"message":"317","line":1,"column":10,"nodeType":"299","messageId":"300","endLine":1,"endColumn":21},{"ruleId":"291","severity":1,"message":"292","line":17,"column":67,"nodeType":"293","messageId":"294","endLine":17,"endColumn":70},{"ruleId":"302","severity":1,"message":"318","line":38,"column":6,"nodeType":"304","endLine":38,"endColumn":8,"suggestions":"319"},{"ruleId":"297","severity":1,"message":"320","line":2,"column":87,"nodeType":"299","messageId":"300","endLine":2,"endColumn":98},{"ruleId":"297","severity":1,"message":"321","line":2,"column":100,"nodeType":"299","messageId":"300","endLine":2,"endColumn":106},{"ruleId":"297","severity":1,"message":"322","line":2,"column":108,"nodeType":"299","messageId":"300","endLine":2,"endColumn":112},{"ruleId":"297","severity":1,"message":"323","line":2,"column":114,"nodeType":"299","messageId":"300","endLine":2,"endColumn":127},{"ruleId":"297","severity":1,"message":"324","line":2,"column":21,"nodeType":"299","messageId":"300","endLine":2,"endColumn":26},{"ruleId":"297","severity":1,"message":"325","line":6,"column":3,"nodeType":"299","messageId":"300","endLine":6,"endColumn":13},{"ruleId":"297","severity":1,"message":"326","line":11,"column":8,"nodeType":"299","messageId":"300","endLine":11,"endColumn":19},{"ruleId":"291","severity":1,"message":"292","line":13,"column":67,"nodeType":"293","messageId":"294","endLine":13,"endColumn":69},{"ruleId":"291","severity":1,"message":"292","line":9,"column":65,"nodeType":"293","messageId":"294","endLine":9,"endColumn":67},{"ruleId":"297","severity":1,"message":"327","line":1,"column":17,"nodeType":"299","messageId":"300","endLine":1,"endColumn":31},{"ruleId":"297","severity":1,"message":"322","line":2,"column":15,"nodeType":"299","messageId":"300","endLine":2,"endColumn":19},{"ruleId":"297","severity":1,"message":"328","line":3,"column":27,"nodeType":"299","messageId":"300","endLine":3,"endColumn":42},{"ruleId":"297","severity":1,"message":"329","line":10,"column":10,"nodeType":"299","messageId":"300","endLine":10,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":25,"column":65,"nodeType":"293","messageId":"294","endLine":25,"endColumn":67},{"ruleId":"297","severity":1,"message":"330","line":49,"column":15,"nodeType":"299","messageId":"300","endLine":49,"endColumn":23},{"ruleId":"302","severity":1,"message":"303","line":55,"column":6,"nodeType":"304","endLine":55,"endColumn":8,"suggestions":"331"},{"ruleId":"302","severity":1,"message":"306","line":62,"column":6,"nodeType":"304","endLine":62,"endColumn":8,"suggestions":"332"},{"ruleId":"297","severity":1,"message":"333","line":3,"column":10,"nodeType":"299","messageId":"300","endLine":3,"endColumn":14},{"ruleId":"334","severity":1,"message":"335","line":4,"column":26,"nodeType":"336","messageId":"337","endLine":4,"endColumn":28},{"ruleId":"334","severity":1,"message":"335","line":16,"column":26,"nodeType":"336","messageId":"337","endLine":16,"endColumn":28},{"ruleId":"297","severity":1,"message":"338","line":2,"column":57,"nodeType":"299","messageId":"300","endLine":2,"endColumn":60},{"ruleId":"297","severity":1,"message":"322","line":2,"column":62,"nodeType":"299","messageId":"300","endLine":2,"endColumn":66},{"ruleId":"291","severity":1,"message":"292","line":17,"column":59,"nodeType":"293","messageId":"294","endLine":17,"endColumn":61},{"ruleId":"297","severity":1,"message":"339","line":1,"column":23,"nodeType":"299","messageId":"300","endLine":1,"endColumn":27},{"ruleId":"297","severity":1,"message":"340","line":1,"column":37,"nodeType":"299","messageId":"300","endLine":1,"endColumn":41},{"ruleId":"297","severity":1,"message":"341","line":2,"column":17,"nodeType":"299","messageId":"300","endLine":2,"endColumn":26},{"ruleId":"297","severity":1,"message":"342","line":6,"column":10,"nodeType":"299","messageId":"300","endLine":6,"endColumn":21},{"ruleId":"297","severity":1,"message":"343","line":7,"column":10,"nodeType":"299","messageId":"300","endLine":7,"endColumn":24},{"ruleId":"297","severity":1,"message":"329","line":8,"column":10,"nodeType":"299","messageId":"300","endLine":8,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":18,"column":51,"nodeType":"293","messageId":"294","endLine":18,"endColumn":53},{"ruleId":"297","severity":1,"message":"338","line":2,"column":57,"nodeType":"299","messageId":"300","endLine":2,"endColumn":60},{"ruleId":"297","severity":1,"message":"322","line":2,"column":62,"nodeType":"299","messageId":"300","endLine":2,"endColumn":66},{"ruleId":"297","severity":1,"message":"339","line":2,"column":68,"nodeType":"299","messageId":"300","endLine":2,"endColumn":72},{"ruleId":"297","severity":1,"message":"344","line":2,"column":74,"nodeType":"299","messageId":"300","endLine":2,"endColumn":84},{"ruleId":"297","severity":1,"message":"345","line":2,"column":86,"nodeType":"299","messageId":"300","endLine":2,"endColumn":93},{"ruleId":"297","severity":1,"message":"346","line":9,"column":10,"nodeType":"299","messageId":"300","endLine":9,"endColumn":30},{"ruleId":"297","severity":1,"message":"347","line":9,"column":32,"nodeType":"299","messageId":"300","endLine":9,"endColumn":52},{"ruleId":"291","severity":1,"message":"292","line":13,"column":67,"nodeType":"293","messageId":"294","endLine":13,"endColumn":69},{"ruleId":"297","severity":1,"message":"338","line":2,"column":57,"nodeType":"299","messageId":"300","endLine":2,"endColumn":60},{"ruleId":"297","severity":1,"message":"322","line":2,"column":62,"nodeType":"299","messageId":"300","endLine":2,"endColumn":66},{"ruleId":"297","severity":1,"message":"339","line":2,"column":68,"nodeType":"299","messageId":"300","endLine":2,"endColumn":72},{"ruleId":"297","severity":1,"message":"344","line":2,"column":74,"nodeType":"299","messageId":"300","endLine":2,"endColumn":84},{"ruleId":"297","severity":1,"message":"345","line":2,"column":86,"nodeType":"299","messageId":"300","endLine":2,"endColumn":93},{"ruleId":"297","severity":1,"message":"346","line":9,"column":10,"nodeType":"299","messageId":"300","endLine":9,"endColumn":30},{"ruleId":"297","severity":1,"message":"347","line":9,"column":32,"nodeType":"299","messageId":"300","endLine":9,"endColumn":52},{"ruleId":"291","severity":1,"message":"292","line":13,"column":73,"nodeType":"293","messageId":"294","endLine":13,"endColumn":75},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["348"],["349"],"@typescript-eslint/no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'Loading' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'businessContext.id'. Either include it or remove the dependency array.","ArrayExpression",["350"],"React Hook useEffect has a missing dependency: 'fetchAddress'. Either include it or remove the dependency array.",["351"],"'IBusiness' is defined but never used.",["352"],"'ReactDOM' is defined but never used.","'cita' is assigned a value but never used.","'book' is assigned a value but never used.",["348"],["349"],"'useHistory' is defined but never used.","'Heading' is defined but never used.","'AlertDialog' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchServices'. Either include it or remove the dependency array.",["353"],"'ModalFooter' is defined but never used.","'Button' is defined but never used.","'Text' is defined but never used.","'useDisclosure' is defined but never used.","'Image' is defined but never used.","'CgUserList' is defined but never used.","'ReserlyLogo' is defined but never used.","'HTMLAttributes' is defined but never used.","'EventPropGetter' is defined but never used.","'IBooking' is defined but never used.","'newHours' is assigned a value but never used.",["354"],["355"],"'User' is defined but never used.","array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Box' is defined but never used.","'Flex' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'LoadingView' is defined but never used.","'BookingService' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'AiOutlineCheckCircle' is defined but never used.","'AiOutlineCloseCircle' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"356","fix":"360"},{"desc":"361","fix":"362"},{"desc":"356","fix":"363"},{"desc":"358","fix":"364"},"Update the dependencies array to be: [businessContext.id]",{"range":"365","text":"366"},"Update the dependencies array to be: [fetchAddress]",{"range":"367","text":"368"},{"range":"369","text":"366"},"Update the dependencies array to be: [fetchServices]",{"range":"370","text":"371"},{"range":"372","text":"366"},{"range":"373","text":"368"},[1253,1255],"[businessContext.id]",[2517,2519],"[fetchAddress]",[1554,1556],[1516,1518],"[fetchServices]",[1774,1776],[2178,2180]]