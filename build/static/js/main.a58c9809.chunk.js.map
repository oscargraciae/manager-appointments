{"version":3,"sources":["services/HttpClient.tsx","config/constants.tsx","services/userService.tsx","assets/logo-reserly-2.png","components/general/Header.tsx","components/general/Sidebar.tsx","components/general/DrawerSidebar.tsx","components/general/Loading.tsx","utils/formatDate.tsx","context/socketContext.tsx","hooks/useSocket.tsx","utils/generateName.tsx","assets/reserly-logo.png","components/general/Footer.tsx","components/general/Layout.tsx","validations/loginValidation.tsx","components/general/Wrapper.tsx","components/general/InputField.tsx","components/general/AlertError.tsx","pages/Login.tsx","components/general/ContainerPage.tsx","services/bookingService.tsx","utils/propsToParams.tsx","utils/formatHoursDate.tsx","config/calendarText.tsx","components/booking/CalendarItem.tsx","services/businessService.tsx","utils/hoursFilters.tsx","components/booking/BookingCalendar.tsx","pages/Home.tsx","validations/signupValidation.tsx","pages/Signup.tsx","components/general/WrapperSettings.tsx","validations/businessValidation.tsx","components/general/LoadingView.tsx","pages/Settings.tsx","components/gallery/UploadCover.tsx","components/onboarding/BoardingCover.tsx","components/onboarding/BoardingHours.tsx","services/businessAddressService.tsx","hooks/useMap.tsx","components/business/AddressForm.tsx","components/onboarding/BoardingInformation.tsx","validations/newServiceValidation.tsx","components/onboarding/BoardingServices.tsx","components/onboarding/BoardingSuccess.tsx","validations/welcomeValidation.tsx","services/categoryService.tsx","components/onboarding/Welcome.tsx","pages/NewBusiness.tsx","pages/SettingsAddress.tsx","pages/SettingsLocation.tsx","pages/SettingsAdvanced.tsx","pages/SettingsHour.tsx","utils/minutesToHours.tsx","components/booking/BookingHistoryList.tsx","components/booking/BookingListNext.tsx","components/booking/BookingsList.tsx","pages/Bookings.tsx","pages/Booking.tsx","components/gallery/UploadGallery.tsx","pages/SettingsGallery.tsx","components/services/DeleteServiceDialog.tsx","components/services/ServiceForm.tsx","components/services/ModalNewService.tsx","components/services/ServiceItem.tsx","components/services/ServiceList.tsx","pages/Services.tsx","services/customerService.tsx","components/customers/CustomerList.tsx","pages/Customers.tsx","App.tsx","reportWebVitals.ts","config/theme.tsx","index.tsx"],"names":["HttpClient","baseURL","instance","_initializeResponseInterceptor","interceptors","response","use","_handleResponse","_handleError","data","error","Promise","reject","this","axios","create","withCredentials","API_DOMAIN","process","URL_API","APP_NAME","UserService","login","post","signup","logout","get","getMe","Header","user","business","onOpen","h","bg","align","justify","borderBottomColor","borderBottomWidth","py","px","display","base","md","w","href","src","logo","alt","width","height","fontWeight","color","name","fontSize","ml","isPublic","as","Link","mx","variant","zIndex","borderColor","onClick","aria-label","icon","justifyContent","pr","shadow","borderWidth","MenuLink","title","direction","Lnk","to","_hover","p","Sidebar","borderRightWidth","borderRightColor","pos","top","left","mt","CgCalendarDates","CgCalendar","CgList","CgUserList","CgToolbox","DrawerSidebar","isOpen","onClose","btnRef","React","useRef","placement","finalFocusRef","Loading","flex","size","moment","locale","formatDate","date","format","tz","formatDateLG","SocketContext","createContext","SocketProvider","children","toast","useToast","socket","io","transports","useState","online","useSocket","on","console","log","description","bookingDate","status","position","Provider","value","generateName","replace","toLocaleLowerCase","Footer","spacing","target","my","UserContext","Layout","useDisclosure","setUser","setBusiness","isLoading","setIsLoading","history","useHistory","useEffect","window","location","pathname","ReactGA","initialize","pageview","search","fetchMe","a","success","alert","businessUser","isCompleted","push","alignItems","mr","origin","id","leftIcon","e","url","copy","duration","canvas","document","getElementById","pngUrl","toDataURL","downloadLink","createElement","download","body","appendChild","click","removeChild","style","loginValidation","values","errors","email","test","password","Wrapper","maxW","InputField","label","inputSize","props","useField","field","touched","isInvalid","htmlFor","TextareaField","PasswordInputField","showPassword","setShowPassword","type","AiFillEyeInvisible","AiFillEye","AlertError","textAlign","Login","setError","onSubmit","userService","message","initialValues","firstName","lastName","validate","isSubmitting","isFullWidth","alignSelf","orientation","mb","ContainerPage","BookingService","getAll","params","queryString","stringify","skipNull","skipEmptyString","strict","propsToParams","update","put","accepted","canceled","formatHoursDate","hours","map","openFrom","ISO_8601","openTill","messages","allDay","previous","next","today","month","week","day","agenda","time","event","noEventsInRange","showMore","total","CalendarItem","customer","isTruncated","BusinessService","businessId","createHours","getHours","uplaodCover","headers","uplaodGallery","deletePhoto","delete","getPhotos","createService","updateService","serviceId","deleteService","getServices","getMax","sort","b","localeCompare","localizer","momentLocalizer","BookingCalendar","businessContext","useContext","bookings","setBookings","min","max","rangeTime","setRangeTime","hours1","hours2","fetchHours","statuses","bookingEvents","start","toDate","end","add","totalTime","fetch","pb","events","startAccessor","endAccessor","timeslots","step","eventPropGetter","_start","_end","_isSelected","backgroundColor","bookingStatusId","borderRadius","opacity","borderLeftWidth","borderLeftColor","flexDirection","slotPropGetter","slotGroupPropGetter","minHeight","dayPropGetter","components","defaultView","views","onSelectEvent","Home","signupValidation","phone","Signup","WrapperSettings","overflow","businessValidation","Number","businessCategoryId","LoadingView","Settings","fetchBusiness","isClosable","handleChange","rows","onChange","UploadCover","onUpload","cover","setCover","isUploading","setIsUplaoding","FormData","append","files","m","accept","multiple","objectFit","loading","BoardingCover","BoardingHours","setHours","getBusiness","i","j","arr","formDay","setFieldValue","dayOfWeek","days","isDisabled","key","colorScheme","initialValue","BusinessAddressService","useGoogleMaps","coords","setCoords","refContainer","refMap","refMarker","uluru","lat","lng","google","maps","Map","current","center","zoom","scrollwheel","streetViewControl","fullscreenControl","mapTypeControl","zoomControl","disableDoubleClickZoom","zoomControlOptions","ControlPosition","TOP_LEFT","addListener","getCenter","addMarker","mark","Marker","draggable","latLng","changeLocation","setCenter","AddressForm","handleSaveAddress","address","setAddresss","geoAddress","setGeoAddress","state","setState","city","setCity","fetchAddress","addressMap","handleSelect","geocodeByAddress","results","fillInAddress","getLatLng","place","addressComponent","address_components","length","types","locality","long_name","administrativeArea","street","area","aling","geoaddress","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","placeholder","background","isIndeterminate","suggestion","ref","disabled","BoardingInformation","setStep","NewServiceSchema","Yup","shape","required","price","BoardingServices","validationSchema","BoardingSuccess","publishBusiness","welcomeValidationSchema","CategoryService","Welcome","categories","setCategories","fetchCategories","item","NewBusiness","useParams","option","undefined","handleSteps","buildOnboarding","SettingsAddress","setAddress","zipcode","SettingsLocation","SettingsAdvanced","hasBookingConfimation","setHasBookingConfimation","hasParallelBookings","setHasParallelBookings","setIsPublic","setIsSubmitting","divider","isChecked","SettingsHour","myHours","setMyHours","newHours","minutesToHour","minutes","hour","Math","trunc","BookingsListHistory","fetchBookings","statusColor","totalPrice","bookingStatus","BookingsListNext","dateEnd","Date","toISOString","textDecor","cursor","BookingsList","bookingId","setBookingId","handleToAcept","index","slice","handleToCancel","isActive","Bookings","tab","setTab","Booking","booking","setBooking","fetchBooking","statusId","colorStatus","createdAt","bookingService","nameService","priceService","timeService","UploadGallery","photos","setPhotos","image","file","onChangeGallery","newFiles","Array","from","URL","createObjectURL","newPhotos","dataFiles","handleDeletePhoto","splice","photo","role","_groupHover","SettingsGallery","DeleteServiceDialog","service","realodList","cancelRef","leastDestructiveRef","ServiceForm","ModalNewService","motionPreset","ServiceItem","handleEditService","handleDeleteService","IconButton","ServiceList","services","Services","setServices","setService","isDeleteModal","setIsDeleteModal","fetchServices","CustomerService","CustomerList","customers","bookingCreatedAt","Customers","setCustomers","App","PrivateRoutes","Cookies","exact","path","component","render","PrivateRoute","Component","rest","isAuth","PublicRoute","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fonts","chakraTheme","mono","theme","extendTheme","styles","global","colors","black","primary","_primary","secondary","_secondary","surface","borders","subtext","primaryLight","variants","textDecoration","Button","Input","baseStyle","_focus","outline","boxShadow","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a58c9809.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\n\ndeclare module 'axios' {\n  interface AxiosResponse<T = any> extends Promise<T> {}\n}\n\nexport default abstract class HttpClient {\n  protected readonly instance: AxiosInstance;\n\n  public constructor(baseURL: string) {\n    // /axios.defaults.withCredentials = true;\n    this.instance = axios.create({\n      baseURL,\n      withCredentials: true,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  private _handleResponse = ({ data }: AxiosResponse) => data;\n\n  protected _handleError = (error: any) => Promise.reject(error);\n}","// export const API_DOMAIN = 'http://localhost:8001';\nexport const API_DOMAIN = process.env.REACT_APP_API_URL || 'https://api.reserly.mx';\nexport const URL_API = `${API_DOMAIN}/api/manager_v1`;\nexport const APP_NAME = 'Reserly';\nexport const TOKEN_MAPBOX = process.env.REACT_APP_TOKEN_MAPBOX || '';\n","import HttpClient from './HttpClient';\nimport { User, UserResponse } from \"../types/User\";\nimport { URL_API } from \"../config/constants\";\n\nexport class UserService extends HttpClient {\n\n  public constructor() {\n    super(URL_API);\n  }\n\n  public login = (data: User) => this.instance.post<UserResponse>('/users/auth', data);\n  public signup = (data: User) => this.instance.post<UserResponse>('/users', data);\n\n  public logout = () => this.instance.get<UserResponse>('/users/auth/logout');\n  public getMe = () => this.instance.get<UserResponse>('/users');\n}","export default __webpack_public_path__ + \"static/media/logo-reserly-2.fdfaa62e.png\";","import { Flex, MenuButton, Spacer, Text, Menu, MenuList, MenuItem, Link, Button, IconButton } from '@chakra-ui/react';\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { ImMenu } from 'react-icons/im';\n\nimport { APP_NAME } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { User } from '../../types/User';\n\nimport logo from '../../assets/logo-reserly-2.png';\n\ninterface HeaderProps {\n  user: User | null\n  business: IBusiness\n  logout: any\n  onOpen?: any\n}\n\n\nexport const Header: React.FC<HeaderProps> = ({ user, business, logout, onOpen }) => {\n\n  if (!user) {\n    return (\n      <Flex bg='surface' align='center' justify='center' shadow='md' borderBottomColor='#DDD' borderWidth={1} py={4}>\n        <Text>{APP_NAME}</Text>\n        <Spacer />\n        <Text>Iniciar sesion</Text>\n      </Flex>\n    )\n  }\n  \n  return (\n    <>\n      <Flex h='66px' bg='surface' align='center' justify='center' borderBottomColor='borders' borderBottomWidth={1} py={4} px={8} display={{ base: 'none', md: 'flex' }}>\n        <Flex align='center' w='190px'>\n          <Link href=\"/\">\n            <img src={logo} alt=\"uorder\" width=\"120\" height=\"40\" />\n          </Link>\n        </Flex>\n        <Text fontWeight='semibold' color='subtext'>{business.name}</Text>\n        <Text fontWeight='bold' fontSize='xs' ml={4} color={business.isPublic ? 'primary' : 'yellow.300'}>\n          { business.isPublic ? 'Publicado' : 'No publicado' }\n          \n        </Text>\n        <Spacer />\n        <Menu>\n          <MenuButton as={Link} mx={3} variant='primary'>\n            Mi Cuenta\n          </MenuButton>\n          <MenuList zIndex={3} borderColor=\"#DDD\">\n            <MenuItem onClick={logout}>Cerrar sesión</MenuItem>\n          </MenuList>\n        </Menu>\n      </Flex>\n\n      <Flex h='66px' bg='surface' align='center' justify='center' borderBottomColor='borders' borderBottomWidth={1} py={4} px={{ base: 4, md: 8 }} display={{ base: 'flex', md: 'none' }}>\n        <IconButton onClick={onOpen} aria-label='Menu' icon={<ImMenu />} />\n        {/* <Spacer /> */}\n        <Flex align='center' w='90%' justifyContent='center' pr='20px'>\n          <Link href=\"/\">\n            <img src={logo} alt=\"uorder\" width=\"120\" height=\"40\" />\n          </Link>\n        </Flex>\n      </Flex>\n    </>\n  );\n}","import React from 'react'\nimport { Box, Flex, Image, Link, Text } from '@chakra-ui/react';\nimport {\n  CgCalendar,\n  CgHome,\n  CgUserList,\n  CgToolbox,\n  CgList,\n  CgCalendarDates,\n} from 'react-icons/cg';\nimport { Link as Lnk } from 'react-router-dom';\n\nimport ReserlyLogo from './../../assets/Reserly.png';\nimport { IBusiness } from '../../types/Business';\n\ninterface SidebarProps {\n  logout: any\n  business: IBusiness\n}\n\nconst MenuLink: React.FC<{ title: string, icon: any, href: string }> = ({title, icon, href}) => (\n  <Flex direction='row'>  \n    <Link as={Lnk} to={href} w='100%' _hover={{ bg: 'primary', color: '#FFFFFF' }} fontWeight='bold'>\n      <Flex direction='row' align='center' p={3} >\n        {icon()} <Text fontSize='sm' ml={5}>{title}</Text>\n      </Flex>\n    </Link>\n  </Flex>\n)\n\nexport const Sidebar: React.FC<SidebarProps> = ({ logout }) => {\n  return (\n    <Box w='210px' h='100vh' bg='surface' shadow='sm' borderRightWidth={1} borderRightColor='borders' pos='sticky' top='0' left='0' display={{ base: 'none', md: 'block' }} >\n      <Box mt={3}>\n        <MenuLink title='Calendario' icon={CgCalendarDates} href='/' />\n        {/* <MenuLink title='Calendario' icon={CgCalendar} href='/calendar' /> */}\n        <MenuLink title='Reservaciones' icon={CgCalendar} href='/bookings' />\n        <MenuLink title='Servicios' icon={CgList} href='/services' />\n        <MenuLink title='Clientes' icon={CgUserList} href='/customers' />\n        {/* <MenuLink title='Clientes' icon={CgUserList} href='/customers' /> */}\n        <MenuLink title='Configuración' icon={CgToolbox} href='/settings' />\n      </Box>\n    </Box>\n  );\n}","import React from 'react'\nimport { Box, Button, Drawer, DrawerBody, DrawerCloseButton, DrawerContent, DrawerHeader, DrawerOverlay, Flex, Image, Link, Text, useDisclosure } from '@chakra-ui/react';\nimport {\n  CgCalendar,\n  CgHome,\n  CgUserList,\n  CgToolbox,\n  CgList,\n  CgCalendarDates,\n} from 'react-icons/cg';\nimport { Link as Lnk } from 'react-router-dom';\n\nimport ReserlyLogo from './../../assets/Reserly.png';\nimport { IBusiness } from '../../types/Business';\n\ninterface SidebarProps {\n  isOpen: boolean\n  onClose: any\n  logout: any\n  // logout: any\n  // business: IBusiness\n}\n\nconst MenuLink: React.FC<{ title: string, icon: any, href: string }> = ({title, icon, href}) => (\n  <Flex direction='row' py={2}>  \n    <Link as={Lnk} to={href} w='100%' _hover={{ bg: 'primary', color: '#FFFFFF' }} fontWeight='bold'>\n      <Flex direction='row' align='center' p={3} >\n        {icon()} <Text fontSize='sm' ml={5}>{title}</Text>\n      </Flex>\n    </Link>\n  </Flex>\n)\n\nexport const DrawerSidebar: React.FC<SidebarProps> = ({ isOpen, onClose, logout }) => {\n  const btnRef = React.useRef<any>()\n  return (\n    <Drawer\n        isOpen={isOpen}\n        placement=\"left\"\n        onClose={onClose}\n        finalFocusRef={btnRef}\n      >\n        <DrawerOverlay>\n          <DrawerContent>\n            <DrawerCloseButton />\n            {/* <DrawerHeader>Create your account</DrawerHeader> */}\n\n            <DrawerBody>\n              <Box mt={3}>\n                <MenuLink title='Calendario' icon={CgCalendarDates} href='/' />\n                {/* <MenuLink title='Calendario' icon={CgCalendar} href='/calendar' /> */}\n                <MenuLink title='Reservaciones' icon={CgCalendar} href='/bookings' />\n                <MenuLink title='Servicios' icon={CgList} href='/services' />\n                {/* <MenuLink title='Clientes' icon={CgUserList} href='/customers' /> */}\n                {/* <MenuLink title='Clientes' icon={CgUserList} href='/customers' /> */}\n                <MenuLink title='Configuración' icon={CgToolbox} href='/settings' />\n                <Flex direction='row' py={2}>  \n                  <Button onClick={logout} w='100%' _hover={{ bg: 'primary', color: '#FFFFFF' }} fontWeight='bold'>\n                    <Flex direction='row' align='center' p={3} >\n                      <Text fontSize='sm' ml={5}>Cerrar sesión</Text>\n                    </Flex>\n                  </Button>\n                </Flex>\n              </Box>\n            </DrawerBody>\n          </DrawerContent>\n        </DrawerOverlay>\n      </Drawer>\n  );\n}","import React from 'react';\nimport { Flex, Spinner, Text } from '@chakra-ui/react';\n\nimport { APP_NAME } from '../../config/constants';\n\ninterface LoadingProps {}\n\nexport const Loading: React.FC<LoadingProps> = () => {\n  return (\n    <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n      <Spinner size='xl' color='primary' />\n      <Text mt={4} fontWeight='bold' fontSize='2xl'>Cargando {APP_NAME}</Text>\n    </Flex>\n  );\n}","import moment from 'moment';\nmoment.locale('es-mx');\n\nexport const formatDate = (date :Date, format? :string) => {\n  if (!format) {\n    return moment(date).tz('America/Monterrey').format('DD/MM/YYYY HH:mm');\n  }\n\n  return moment(date).format(format);\n}\n\nexport const formatDateLG = (date :Date) => {\n  return moment(date).tz('America/Monterrey').format('dddd DD [de] MMMM [de] YYYY HH:mm');\n}","import { position, useToast } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSocket } from '../hooks/useSocket';\nimport { formatDate } from '../utils/formatDate';\nimport { formatBookingDate } from '../utils/formatHoursDate';\n\nexport const SocketContext = React.createContext<any>(null);\n\nexport const SocketProvider: React.FC = ({ children }) => {\n  // hooks\n  const toast = useToast();\n  const { socket, online } = useSocket();\n  \n  socket.on('new-booking', (data :any) => {\n    console.log('Socket data', data);\n    \n    toast({\n      title: 'Nueva reservación',\n      description: `${formatDate(data.bookingDate)}`,\n      status: 'success',\n      position: 'top',\n    })\n  });\n  \n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      { children }\n    </SocketContext.Provider>\n  );\n}","import { useEffect, useMemo, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { API_DOMAIN, URL_API } from '../config/constants';\n\n\nexport const useSocket = () => {\n    \n    const socket : Socket = io(API_DOMAIN, { transports: ['websocket'] });\n    const [ online, setOnline ] = useState(false);\n    \n    // socket.on('saludo', (data :any) => {\n    //   console.log('Datos de saludo', data);\n    // })\n\n    // useEffect(() => {\n    //     setOnline( socket.connected );\n    // }, [socket])\n\n    // useEffect(() => {\n    //     socket.on('connect', () => {\n    //       console.log('Socket conectado');\n          \n    //     });\n    // }, [ socket ])\n\n    // useEffect(() => {\n    //     socket.on('disconnect', () => setOnline( false ));\n    // }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}","export const generateName = (name: string) => {\n  return name.replace(/ /g, '-').toLocaleLowerCase();\n}","export default __webpack_public_path__ + \"static/media/reserly-logo.d5cba136.png\";","import { Box, Divider, Flex, HStack, Link, Text } from '@chakra-ui/react';\nimport React from 'react'\n\nimport logo from '../../assets/reserly-logo.png';\n\nexport const Footer: React.FC = () => {\n  return (\n    <Flex bg='secondary' py={10} px={4} mt={24}>\n      <Flex direction='column' w='1180px' mx='auto'>\n        <Box>\n          <Link href=\"/\">\n            <img src={logo} alt=\"uorder\" width=\"120\" height=\"90\" />\n          </Link>\n          <HStack spacing={5} py={4}>\n            <Link target='_blank' fontWeight='500' color='#FFFFFF' fontSize='sm' href={`${process.env.REACT_APP_WEB_URL}/terminos-y-condiciones`}>\n              Terminos y condiciones\n            </Link>\n            <Link target='_blank' fontWeight='500' color='#FFFFFF' fontSize='sm' href={`${process.env.REACT_APP_WEB_URL}/aviso-de-privacidad`}>\n              Politica de privacidad\n            </Link>\n            <Text fontWeight='500' color='#FFFFFF' fontSize='sm'>\n              Contacto: hola@reserly.mx\n            </Text>\n          </HStack>\n        </Box>\n        <Box>\n          <Link target='_blank' fontWeight='500' color='#FFFFFF' fontSize='sm' href='https://www.facebook.com/reserlymx'>\n            {/* <FaFacebook size={28} /> */}\n            Facebook de Reserly\n          </Link>\n        </Box>\n        <Divider my={6} borderColor='#FFFFFF' />\n        <Text fontWeight='500' color='#FFFFFF' fontSize='sm'>\n          © Reserly. Todos los derechos reservados\n        </Text>\n      </Flex>\n    </Flex>\n  );\n}","/* eslint-disable react-hooks/exhaustive-deps */\n// Libraries\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Box, Button, Flex, Text, useDisclosure, useToast } from '@chakra-ui/react';\nimport ReactGA from 'react-ga';\nimport { useHistory } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\nimport { ImQrcode, ImCopy } from 'react-icons/im'\nimport QRCode from 'qrcode.react';\n\nimport { UserService } from '../../services/userService';\nimport { User } from '../../types/User';\nimport { Header } from './Header';\nimport { Sidebar } from './Sidebar';\nimport { DrawerSidebar } from './DrawerSidebar';\nimport { Loading } from './Loading';\nimport { IBusiness } from '../../types/Business';\nimport { SocketProvider } from '../../context/socketContext';\nimport { generateName } from '../../utils/generateName';\nimport { Footer } from './Footer';\n\ninterface LayoutProps {}\n\nexport const UserContext = React.createContext<any>(null);\n\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\n  // hooks\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure(); // Drawer Sidebar Menu\n  // state\n  const [user, setUser] = useState<User | null>(null);\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n  useEffect(() => {\n    console.log('Cambiando pagina', window.location.pathname);\n    \n    ReactGA.initialize('G-29KJTGHLGJ');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, [history.location]);\n\n  const fetchMe = async () => {\n    const { success, user } = await new UserService().getMe();\n    if (!success || !user) {\n      alert('Usuario no encotrado');\n      return ;\n      // Aqui se debe de enviar al login, cerrar sesion o mostrar alguna pantalla de error\n    };\n\n    if (!user.businessUser || !user.businessUser.business?.isCompleted) {\n      // alert('Este usuario no tiene tienda, favor de registrar una.')\n      history.push('/new-business');\n      return;\n    }\n\n    if (user.businessUser.business) {\n      setBusiness(user.businessUser.business)\n    }\n\n    setUser(user);\n    setIsLoading(false);\n  }\n\n  const copyUrl = (e :any) => {\n    if (business && business.name) {\n      const url : string = `${window.location.origin}/b/${generateName(business.name)}/${business.id}`;\n      copy(url);\n      toast({\n        title: 'URL copiada',\n        duration: 1000,\n        position: 'top',\n        status: 'success',\n      })\n    }\n  }\n\n  const downloadQR = () => {\n    const canvas :any = document.getElementById(\"businessqr\");\n    if (canvas && business && business.name) {\n      const pngUrl = canvas\n        .toDataURL(\"image/png\")\n        .replace(\"image/png\", \"image/octet-stream\");\n      let downloadLink = document.createElement(\"a\");\n      downloadLink.href = pngUrl;\n      downloadLink.download = `${generateName(business.name)}-qr`;\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    }\n  }\n\n  const logout = async () => {\n    await new UserService().logout();\n    history.push('/login');\n  }\n\n  useEffect(() => {\n    fetchMe();\n  }, []);\n\n  if(isLoading || !business || !business.name) {\n    return <Loading />\n  }\n\n  // if (!user) {\n  //   <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n  //     <Text mt={4} fontWeight='bold' fontSize='2xl'>Usuario no disponible</Text>\n  //   </Flex>\n  // }\n\n  return (\n    <UserContext.Provider value={business}>\n      <SocketProvider>\n        <Box height='100vh' bg='background'>\n          <Header user={user} business={business} logout={logout} onOpen={onOpen} />\n          <Flex direction='row'>\n            <Sidebar logout={logout} business={business} />\n            <DrawerSidebar isOpen={isOpen} onClose={onClose} logout={logout} />\n            <Box w='100%'>\n              <Flex w='100%' bg='surface' px={6} py={2} alignItems='center'>\n                <Text fontSize='sm' fontWeight='bold' mr={2}>Compartir</Text>\n                <Text display={{ base: 'none', md: 'block' }} fontSize='sm' >{`${window.location.origin}/b/${generateName(business.name)}/${business.id}`}</Text>\n                <Button size='xs' ml={3} leftIcon={<ImCopy />} onClick={copyUrl}>\n                  Copiar URL\n                </Button>\n                <Button leftIcon={<ImQrcode />} size='xs' ml={3} onClick={downloadQR}>\n                  Descargar QR\n                </Button>\n              </Flex>\n              <Box>\n                <QRCode value={`${window.location.origin}/b/${generateName(business.name)}/${business.id}`} id='businessqr' style={{ display: 'none' }} />\n                {children}\n              </Box>\n            </Box>\n          </Flex>\n          <Footer />\n        </Box>\n      </SocketProvider>\n    </UserContext.Provider>\n  );\n}","import { User } from \"../types/User\";\n\nexport const loginValidation = (values: User) => {\n  const errors : any = {};\n  if (!values.email) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n  ) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  }\n\n  if (!values.password) {\n    errors.password = 'Ingresa una contraseña'\n  }\n\n  return errors;\n}","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nexport type WrapperVariant = \"small\" | \"regular\";\n\ninterface WrapperProps {\n  variant?: WrapperVariant;\n}\n\nexport const Wrapper: React.FC<WrapperProps> = ({\n  children,\n  variant = \"regular\",\n}) => {\n  return (\n    <Box\n      mt={8}\n      mx=\"auto\"\n      maxW={variant === \"regular\" ? \"800px\" : \"400px\"}\n      w=\"100%\"\n    >\n      {children}\n    </Box>\n  );\n};","import React, { useState, InputHTMLAttributes } from \"react\";\nimport { useField } from \"formik\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  InputProps,\n  FormErrorMessage,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n  Textarea,\n  TextareaProps,\n} from \"@chakra-ui/react\";\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\n\n// type InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n//   label: string;\n//   name: string;\n//   errors?: string\n// };\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & InputProps & TextareaProps & {\n  label: string;\n  name: string;\n  errors?: string\n  inputSize?: string\n};\n\n\n// '' => false\n// 'error message stuff' => true\n\nexport const InputField: React.FC<InputFieldProps> = ({ label, errors, inputSize = 'md', ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel fontWeight='bold' fontSize='sm' htmlFor={field.name}>{label}</FormLabel>\n      <Input size={inputSize} {...field} {...props} id={field.name} />\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport const TextareaField: React.FC<InputFieldProps> = ({ label, errors, inputSize = 'md', ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel fontWeight='bold' fontSize='sm' htmlFor={field.name}>{label}</FormLabel>\n      <Textarea size={inputSize} {...field} {...props} id={field.name} />\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport const PasswordInputField: React.FC<InputFieldProps> = ({ label, ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel htmlFor=\"description\" fontSize='sm' fontWeight='bold'>Contraseña</FormLabel>\n      <InputGroup>\n        <Input\n          type={showPassword ? \"text\" : \"password\"}\n          {...field}\n          {...props} id={field.name}\n        />\n        <InputRightElement>\n          <IconButton aria-label=\"Search database\" variant='ghost' icon={!showPassword ? AiFillEye({}) : AiFillEyeInvisible({})} onClick={() => setShowPassword(!showPassword)} />\n        </InputRightElement>\n      </InputGroup>\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n","import React from 'react'\nimport { Alert, AlertDescription, AlertTitle } from '@chakra-ui/react';\n\ninterface AlertErrorProps {\n  title?: string\n  description?: string\n}\n\nexport const AlertError: React.FC<AlertErrorProps> = ({ title, description }) => {\n  return (\n    <Alert status='error' >\n      { title && <AlertTitle>{title}</AlertTitle> }\n      { description && <AlertDescription fontSize='sm' textAlign='left'>{description}</AlertDescription> }\n    </Alert>\n  );\n}","// Libraries\nimport React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\n// Local libraries\nimport { loginValidation } from '../validations/loginValidation';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\n\n// Components\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { AlertError } from '../components/general/AlertError';\n\nexport const Login: React.FC = () => {\n  const [error, setError] = useState('');\n\n  const history = useHistory();\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.login(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n    } else {\n      history.push('/');\n    }\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Inicia sesión</Heading>\n        <Box mt={6}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={loginValidation}>\n            {({ isSubmitting, errors, touched }) => (\n              <Form>\n                <VStack spacing={4}>\n                  {/* <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' /> */}\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button mt={40} isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Iniciar sesión</Button>\n                  <Button alignSelf='flex-end' textAlign='right' size='sm' variant='link'>¿Olvidaste tu contraseña?</Button>\n                  { error && <AlertError description={error} /> }\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿No tienes cuenta?{\" \"}\n                    <Lnk to='/signup'>\n                      <Link color='primary' fontWeight='bold'>Registrate</Link>\n                    </Lnk>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}","import { Box, Flex, Heading, Text } from '@chakra-ui/react';\nimport React from 'react'\n\ninterface ContainerPageProps {\n  title?: string\n}\n\nexport const ContainerPage: React.FC<ContainerPageProps> = ({ title, children }) => {\n  return (\n    <Box p={6} py={4} w='100%' maxW='1920px'>\n      { title && <Heading as='h3' size='lg'>{title}</Heading> }\n      <Box mt={3}>\n        {children}\n      </Box>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { IBooking } from \"../types/IBooking\";\nimport { propsToParams } from \"../utils/propsToParams\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BookingService extends HttpClient {\n  constructor() {\n    super(URL_API);\n  }\n\n  getAll = (params? :any) => this.instance.get(`/bookings?${propsToParams(params)}`);\n  get = (id :number) => this.instance.get(`/bookings/${id}`);\n  update = (id :number, data :IBooking) => this.instance.put(`/bookings/${id}`, data);\n  accepted = (id :number) => this.instance.put(`/bookings/${id}/accepted`);\n  canceled = (id :number) => this.instance.put(`/bookings/${id}/canceled`);\n}","import queryString from 'query-string';\n\nexport const propsToParams = (params :any) => {\n  return queryString.stringify(params, { skipNull: true, skipEmptyString: true, strict: true });\n}","import moment from 'moment-timezone';\nimport { Event } from 'react-big-calendar';\nimport { IBooking } from '../types/IBooking';\n\nimport { IHour } from \"../types/IHour\";\n\n// let dateAndTime = moment(component.props.data.value, [moment.ISO_8601, 'HH:mm']);\nexport const formatHoursDate = (hours: IHour[]) : IHour[]=> {\n    return hours.map((e) => ({\n      ...e,\n      // openFrom: moment( '12:00' ).format('HH:MM'),\n      openFrom: moment(e.openFrom, [moment.ISO_8601, 'HH:mm']).format('H:mm'),\n      openTill: moment(e.openTill, [moment.ISO_8601, 'HH:mm']).format('H:mm'),\n    }));\n}\n\nexport const formatBookingDate = (hours: IBooking[]) : Event[]=> {\n  return hours.map((e) => ({\n    ...e,\n    title: e.customer ? e.customer.firstName : '',\n    // openFrom: moment( '12:00' ).format('HH:MM'),\n    start: moment(`${e.bookingDate}`).toDate(),\n    end: moment(`${e.bookingDate}`).add(e.totalTime, 'minute').toDate(),\n  }));\n}","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total :any) => `+ Ver más (${total})`\n};","import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { User } from '../../types/User';\n\ninterface CalendarItemProps {\n  event: any\n}\n\nexport const CalendarItem: React.FC<CalendarItemProps> = ({ event }) => {\n  const { customer } = event;\n  return (\n    <Box>\n      <Text fontWeight='semibold' isTruncated>{customer.firstName} {customer.lastName}</Text>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { IBusiness, IBusinessResponse } from \"../types/Business\";\nimport { IHoursResponse } from \"../types/IHour\";\nimport { IService, IServiceResponse, IServicesResponse } from \"../types/IService\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BusinessService extends HttpClient {\n  constructor() {\n    super(URL_API)\n  }\n\n  create = (data: IBusiness) => this.instance.post<IBusinessResponse>('/businesses', data);\n  update = (data: IBusiness, businessId: number) => this.instance.put<IBusinessResponse>(`/businesses/${businessId}`, data);\n  get = () => this.instance.get('/businesses');\n\n  createHours = (data: any, businessId: number) => this.instance.post(`/businesses/${businessId}/hours`, data);\n  getHours = (businessId: number) => this.instance.get<IHoursResponse>(`/businesses/${businessId}/hours`);\n\n  uplaodCover = (data :any) => this.instance.post('/businesses/upload/cover', data, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  });\n\n  uplaodGallery = (data :any) => this.instance.post('/businesses/upload/photos', data, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  });\n\n  deletePhoto = (id :number) => this.instance.delete(`/businesses/upload/photos/${id}`);\n  getPhotos = () => this.instance.get('/businesses/upload/photos');\n\n  // API DE SERVICIOS\n  createService = (data: IService, businessId: number) => this.instance.post<IServiceResponse>(`/businesses/${businessId}/services`, data);\n  updateService = (data: IService, serviceId: number, businessId: number) => this.instance.put<IServiceResponse>(`/businesses/${businessId}/services/${serviceId}`, data);\n  deleteService = (serviceId: number, businessId: number) => this.instance.delete<IServiceResponse>(`/businesses/${businessId}/services/${serviceId}`);\n  getServices = (businessId:number) => this.instance.get<IServicesResponse>(`/businesses/${businessId}/services`);\n}","import { IHour } from \"../types/IHour\";\n\nexport const getMin = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openFrom && b.openFrom) {\n      return a.openFrom.localeCompare(b.openFrom);\n    }\n  });\n\n  return hours[0].openFrom;\n}\n\nexport const getMax = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openTill && b.openTill) {\n      return b.openTill.localeCompare(a.openTill);\n    }\n  });\n\n  return hours[0].openTill;\n}","import React, { HTMLAttributes, useContext, useEffect, useState } from 'react'\nimport { Box, Flex, HStack, Text } from '@chakra-ui/react';\nimport { Calendar, Event, EventPropGetter, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\n\nimport { IBooking } from '../../types/IBooking';\nimport { BookingService } from '../../services/bookingService';\nimport { formatBookingDate, formatHoursDate } from '../../utils/formatHoursDate';\nimport { messages } from '../../config/calendarText';\nimport { CalendarItem } from './CalendarItem';\n\nimport './BookingCalendar.css';\nimport { BusinessService } from '../../services/businessService';\nimport { UserContext } from '../general/Layout';\nimport { getMin, getMax } from '../../utils/hoursFilters';\nimport { useHistory } from 'react-router-dom';\n\nconst localizer = momentLocalizer(moment)\n\ninterface BookingCalendarProps {}\n\nexport const BookingCalendar: React.FC<BookingCalendarProps> = ({}) => {\n  // hooks\n  const history = useHistory();\n\n  // context\n  const businessContext = useContext(UserContext);\n  \n  // state\n  const [bookings, setBookings] = useState<Event[]>([]);\n  const [rangeTime, setRangeTime] = useState({ min: '00:00', max: '23:30' });\n\n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const hours1 = response.hours;\n        const hours2 = [...response.hours];\n        const min = getMin(hours1);\n        const max = getMax(hours2);\n\n        if (min && max) {\n          setRangeTime({ min, max });\n        }\n        \n        const newHours = formatHoursDate(response.hours);\n        // console.log('Horas', newHours);\n      }\n    }\n\n    fetchHours();\n  }, []);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const response = await new BookingService().getAll({ statuses: [1, 2] });\n      if (response.success) {\n        const bookingEvents = formatBookingDate(response.bookings);\n        setBookings(bookingEvents);\n      }\n    }\n    fetch();\n  }, []);\n\n  const onSelectEvent = (event :any) => {\n    console.log('Click en el evento', event);\n    if (event.id) {\n      history.push(`/bookings/${event.id}`);\n    }\n  }\n\n  const eventPropGetter = (event: any, _start: any, _end: any, _isSelected: any) : React.HTMLAttributes<HTMLDivElement> => {\n    \n    const style : React.CSSProperties = {\n      backgroundColor: event.bookingStatusId === 2 ? '#BDEFD1' : '#FEFCBF',\n      borderRadius: 0,\n      opacity: 1,\n      borderWidth: 0,\n      fontSize: '12px',\n      color: event.bookingStatusId === 2 ? '#16793D' : '#D69E2E',\n      borderLeftWidth: 5,\n      borderLeftColor: event.bookingStatusId === 2 ? '#05AF3C' : '#ECC94B',\n      flexDirection: 'column',\n      fontWeight: 'bold',\n    }\n    return {\n      style\n    }\n  }\n\n  const slotPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {}\n    return {\n      style\n    }\n  }\n\n  const slotGroupPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {\n      minHeight: '80px',\n    }\n    return {\n      style\n    }\n  }\n\n  const dayPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {\n      backgroundColor: '#FFF',\n    }\n    return {\n      style\n    }\n  }\n  \n  return (\n    <Box h='80vh'>\n      <Flex pb={2}>\n        <Flex mb={1}>\n          <HStack mr={3}>\n            <Box bg='primary' w={4} h={4} />\n            <Text fontSize='sm'>Aceptado</Text>\n          </HStack>\n          <HStack>\n            <Box bg='yellow.300' w={4} h={4} />\n            <Text fontSize='sm'>Pendiente</Text>\n          </HStack>\n        </Flex>\n      </Flex>\n      <Calendar\n        localizer={localizer}\n        events={bookings}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        timeslots={2}\n        step={15}\n        messages={messages}\n        eventPropGetter={eventPropGetter}\n        slotPropGetter={slotPropGetter}\n        slotGroupPropGetter={slotGroupPropGetter}\n        dayPropGetter={dayPropGetter}\n        components={{\n          event: CalendarItem\n        }}\n        defaultView='day'\n        views={{ week: true, day: true, agenda: true }}\n        min={moment(rangeTime.min, [moment.ISO_8601, 'HH:mm']).toDate()}\n        max={moment(rangeTime.max, [moment.ISO_8601, 'HH:mm']).toDate()}\n        onSelectEvent={onSelectEvent}\n      />\n    </Box>\n  );\n}","import React from 'react'\nimport { Box } from '@chakra-ui/react';\n\n// local components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { BookingCalendar } from '../components/booking/BookingCalendar';\n\n\ninterface HomeProps {}\n\nexport const Home: React.FC<HomeProps> = ({}) => {\n  return (\n    <ContainerPage>\n      <Box>\n        <BookingCalendar />\n      </Box>\n    </ContainerPage>\n  );\n}","import { User } from \"../types/User\";\n\nexport const signupValidation = (values: User) => {\n  const errors : any = {};\n  if (!values.email) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n  ) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  }\n\n  if (!values.password) {\n    errors.password = 'Ingresa una contraseña'\n  }\n\n  if (!values.phone) {\n    errors.phone = 'Ingresa una teléfono.'\n  }\n\n  if (!values.firstName) {\n    errors.firstName = 'Ingresa un nombre'\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Ingresa un apellido'\n  }\n  \n\n  return errors;\n}","import React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\nimport { AlertError } from '../components/general/AlertError';\nimport { signupValidation } from '../validations/signupValidation';\n\ninterface SignupProps {}\n\nexport const Signup: React.FC<SignupProps> = ({}) => {\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.signup(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n      return;\n    }\n\n    history.push('/');\n\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    phone: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Bienvenido</Heading>\n        <Text mt={2} fontWeight='bold'>Registrate gratis.</Text>\n        <Box mt={4}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={signupValidation}>\n            {({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={4}>\n                  <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' />\n                  <InputField name='phone' label='Tu número de teléfono' />\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Registrate</Button>\n\n                  { error && <AlertError description={error} /> }\n\n                  <Text as=\"em\" fontSize='sm'>Al registrarte, confirmas que aceptas los <Link href='#' color=\"teal.500\">Términos y condiciones</Link> y la <Link href='#' color=\"teal.500\">Política de privacidad</Link>.</Text>\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿Ya tienes tu cuenta?{\" \"}\n                    <Link as={Lnk} to='/login' color='primary' fontWeight='bold'>\n                      Iniciar sesion\n                    </Link>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}","import React from 'react'\nimport { Box, Flex, HStack, Link, Text } from '@chakra-ui/react';\nimport { Link as Lnk } from 'react-router-dom';\n\ninterface WrapperSettingsProps {\n\n}\n\nconst MenuLink: React.FC<{ title: string, href: string }> = ({ title, href }) => (\n  <Link as={Lnk} to={href} fontWeight='bold' pr={4}>\n    <Flex direction='row'>\n      <Text fontSize='md'>{title}</Text>\n    </Flex>\n  </Link>\n)\n\nexport const WrapperSettings: React.FC<WrapperSettingsProps> = ({ children }) => {\n  return (\n    <Box>\n      <HStack mt={4} borderBottomWidth={1} borderColor='borders' py={3} overflow='auto'>\n        <MenuLink title='Datos básicos' href='/settings' />\n        <MenuLink title='Ubicación' href='/settings/location' />\n        <MenuLink title='Horario' href='/settings/hours' />\n        <MenuLink title='Fotos' href='/settings/photos' />\n        <MenuLink title='Generales' href='/settings/advanced' />\n      </HStack>\n\n      <Box my={4} bg='surface' borderColor='borders' borderWidth={1} p={6} borderRadius={3}>\n        {children}\n      </Box>\n\n    </Box>\n  );\n}\n\n\n    // (UTC-06:00) Central Time (US &amp; Canada)\n    // (UTC-06:00) Central America\n    // (UTC-05:00) Indiana (East)\n    // (UTC-05:00) Eastern Time (US &amp; Canada) \n    // (UTC-05:00) Chetumal \n    // (UTC-05:00) Bogota, Lima, Quito, Rio Branco \n    // (UTC-04:00) Caracas \n    // (UTC-04:00) Georgetown, La Paz, Manaus, San Juan \n    // (UTC-04:00) Cuiaba \n    // (UTC-04:00) Atlantic Time (Canada)\n\n    // <select id=\"timezone\" name=\"timezone\" class=\"_bwyiq2l\"><option disabled=\"\" value=\"\">Elige...</option><option value=\"International Date Line West\">(GMT-11:00) International Date Line West</option><option value=\"Midway Island\">(GMT-11:00) Midway Island</option><option value=\"Samoa\">(GMT-11:00) Samoa</option><option value=\"Hawaii\">(GMT-10:00) Hawaii</option><option value=\"Pacific/Honolulu\">(GMT-10:00) Pacific/Honolulu</option><option value=\"Alaska\">(GMT-09:00) Alaska</option><option value=\"America/Los_Angeles\">(GMT-08:00) America/Los_Angeles</option><option value=\"Pacific Time (US &amp; Canada)\">(GMT-08:00) Pacific Time (US &amp; Canada)</option><option value=\"Tijuana\">(GMT-08:00) Tijuana</option><option value=\"America/Phoenix\">(GMT-07:00) America/Phoenix</option><option value=\"Arizona\">(GMT-07:00) Arizona</option><option value=\"Chihuahua\">(GMT-07:00) Chihuahua</option><option value=\"Mazatlan\">(GMT-07:00) Mazatlan</option><option value=\"Mountain Time (US &amp; Canada)\">(GMT-07:00) Mountain Time (US &amp; Canada)</option><option value=\"America/Chicago\">(GMT-06:00) America/Chicago</option><option value=\"America/Guatemala\">(GMT-06:00) America/Guatemala</option><option value=\"America/Mexico_City\">(GMT-06:00) America/Mexico_City</option><option value=\"Central America\">(GMT-06:00) Central America</option><option value=\"Central Time (US &amp; Canada)\">(GMT-06:00) Central Time (US &amp; Canada)</option><option value=\"Guadalajara\">(GMT-06:00) Guadalajara</option><option value=\"Mexico City\">(GMT-06:00) Mexico City</option><option value=\"Monterrey\">(GMT-06:00) Monterrey</option><option value=\"Saskatchewan\">(GMT-06:00) Saskatchewan</option><option value=\"America/Cancun\">(GMT-05:00) America/Cancun</option><option value=\"America/New_York\">(GMT-05:00) America/New_York</option><option value=\"Bogota\">(GMT-05:00) Bogota</option><option value=\"Eastern Time (US &amp; Canada)\">(GMT-05:00) Eastern Time (US &amp; Canada)</option><option value=\"Indiana (East)\">(GMT-05:00) Indiana (East)</option><option value=\"Lima\">(GMT-05:00) Lima</option><option value=\"Quito\">(GMT-05:00) Quito</option><option value=\"America/Puerto_Rico\">(GMT-04:00) America/Puerto_Rico</option><option value=\"Atlantic Time (Canada)\">(GMT-04:00) Atlantic Time (Canada)</option><option value=\"Caracas\">(GMT-04:00) Caracas</option><option value=\"Georgetown\">(GMT-04:00) Georgetown</option><option value=\"La Paz\">(GMT-04:00) La Paz</option><option value=\"Santiago\">(GMT-04:00) Santiago</option><option value=\"Newfoundland\">(GMT-03:30) Newfoundland</option><option value=\"Brasilia\">(GMT-03:00) Brasilia</option><option value=\"Buenos Aires\">(GMT-03:00) Buenos Aires</option><option value=\"Greenland\">(GMT-03:00) Greenland</option><option value=\"Mid-Atlantic\">(GMT-02:00) Mid-Atlantic</option><option value=\"Azores\">(GMT-01:00) Azores</option><option value=\"Cape Verde Is.\">(GMT-01:00) Cape Verde Is.</option><option value=\"Atlantic/Canary\">(GMT+00:00) Atlantic/Canary</option><option value=\"Edinburgh\">(GMT+00:00) Edinburgh</option><option value=\"Europe/London\">(GMT+00:00) Europe/London</option><option value=\"Lisbon\">(GMT+00:00) Lisbon</option><option value=\"London\">(GMT+00:00) London</option><option value=\"Monrovia\">(GMT+00:00) Monrovia</option><option value=\"UTC\">(GMT+00:00) UTC</option><option value=\"Amsterdam\">(GMT+01:00) Amsterdam</option><option value=\"Belgrade\">(GMT+01:00) Belgrade</option><option value=\"Berlin\">(GMT+01:00) Berlin</option><option value=\"Bern\">(GMT+01:00) Bern</option><option value=\"Bratislava\">(GMT+01:00) Bratislava</option><option value=\"Brussels\">(GMT+01:00) Brussels</option><option value=\"Budapest\">(GMT+01:00) Budapest</option><option value=\"Casablanca\">(GMT+01:00) Casablanca</option><option value=\"Copenhagen\">(GMT+01:00) Copenhagen</option><option value=\"Dublin\">(GMT+01:00) Dublin</option><option value=\"Europe/Madrid\">(GMT+01:00) Europe/Madrid</option><option value=\"Europe/Paris\">(GMT+01:00) Europe/Paris</option><option value=\"Europe/Sarajevo\">(GMT+01:00) Europe/Sarajevo</option><option value=\"Ljubljana\">(GMT+01:00) Ljubljana</option><option value=\"Madrid\">(GMT+01:00) Madrid</option><option value=\"Paris\">(GMT+01:00) Paris</option><option value=\"Prague\">(GMT+01:00) Prague</option><option value=\"Rome\">(GMT+01:00) Rome</option><option value=\"Sarajevo\">(GMT+01:00) Sarajevo</option><option value=\"Skopje\">(GMT+01:00) Skopje</option><option value=\"Stockholm\">(GMT+01:00) Stockholm</option><option value=\"Vienna\">(GMT+01:00) Vienna</option><option value=\"Warsaw\">(GMT+01:00) Warsaw</option><option value=\"West Central Africa\">(GMT+01:00) West Central Africa</option><option value=\"Zagreb\">(GMT+01:00) Zagreb</option><option value=\"Athens\">(GMT+02:00) Athens</option><option value=\"Bucharest\">(GMT+02:00) Bucharest</option><option value=\"Cairo\">(GMT+02:00) Cairo</option><option value=\"Harare\">(GMT+02:00) Harare</option><option value=\"Helsinki\">(GMT+02:00) Helsinki</option><option value=\"Jerusalem\">(GMT+02:00) Jerusalem</option><option value=\"Kyiv\">(GMT+02:00) Kyiv</option><option value=\"Pretoria\">(GMT+02:00) Pretoria</option><option value=\"Riga\">(GMT+02:00) Riga</option><option value=\"Sofia\">(GMT+02:00) Sofia</option><option value=\"Tallinn\">(GMT+02:00) Tallinn</option><option value=\"Vilnius\">(GMT+02:00) Vilnius</option><option value=\"Baghdad\">(GMT+03:00) Baghdad</option><option value=\"Europe/Istanbul\">(GMT+03:00) Europe/Istanbul</option><option value=\"Istanbul\">(GMT+03:00) Istanbul</option><option value=\"Kuwait\">(GMT+03:00) Kuwait</option><option value=\"Minsk\">(GMT+03:00) Minsk</option><option value=\"Moscow\">(GMT+03:00) Moscow</option><option value=\"Nairobi\">(GMT+03:00) Nairobi</option><option value=\"Riyadh\">(GMT+03:00) Riyadh</option><option value=\"St. Petersburg\">(GMT+03:00) St. Petersburg</option><option value=\"Volgograd\">(GMT+03:00) Volgograd</option><option value=\"Tehran\">(GMT+03:30) Tehran</option><option value=\"Abu Dhabi\">(GMT+04:00) Abu Dhabi</option><option value=\"Baku\">(GMT+04:00) Baku</option><option value=\"Muscat\">(GMT+04:00) Muscat</option><option value=\"Tbilisi\">(GMT+04:00) Tbilisi</option><option value=\"Yerevan\">(GMT+04:00) Yerevan</option><option value=\"Kabul\">(GMT+04:30) Kabul</option><option value=\"Ekaterinburg\">(GMT+05:00) Ekaterinburg</option><option value=\"Islamabad\">(GMT+05:00) Islamabad</option><option value=\"Karachi\">(GMT+05:00) Karachi</option><option value=\"Tashkent\">(GMT+05:00) Tashkent</option><option value=\"Asia/Calcutta\">(GMT+05:30) Asia/Calcutta</option><option value=\"Chennai\">(GMT+05:30) Chennai</option><option value=\"Kolkata\">(GMT+05:30) Kolkata</option><option value=\"Mumbai\">(GMT+05:30) Mumbai</option><option value=\"New Delhi\">(GMT+05:30) New Delhi</option><option value=\"Sri Jayawardenepura\">(GMT+05:30) Sri Jayawardenepura</option><option value=\"Kathmandu\">(GMT+05:45) Kathmandu</option><option value=\"Almaty\">(GMT+06:00) Almaty</option><option value=\"Astana\">(GMT+06:00) Astana</option><option value=\"Dhaka\">(GMT+06:00) Dhaka</option><option value=\"Urumqi\">(GMT+06:00) Urumqi</option><option value=\"Rangoon\">(GMT+06:30) Rangoon</option><option value=\"Bangkok\">(GMT+07:00) Bangkok</option><option value=\"Hanoi\">(GMT+07:00) Hanoi</option><option value=\"Jakarta\">(GMT+07:00) Jakarta</option><option value=\"Krasnoyarsk\">(GMT+07:00) Krasnoyarsk</option><option value=\"Novosibirsk\">(GMT+07:00) Novosibirsk</option><option value=\"Asia/Kuala_Lumpur\">(GMT+08:00) Asia/Kuala_Lumpur</option><option value=\"Asia/Manila\">(GMT+08:00) Asia/Manila</option><option value=\"Asia/Shanghai\">(GMT+08:00) Asia/Shanghai</option><option value=\"Beijing\">(GMT+08:00) Beijing</option><option value=\"Chongqing\">(GMT+08:00) Chongqing</option><option value=\"Hong Kong\">(GMT+08:00) Hong Kong</option><option value=\"Irkutsk\">(GMT+08:00) Irkutsk</option><option value=\"Kuala Lumpur\">(GMT+08:00) Kuala Lumpur</option><option value=\"Perth\">(GMT+08:00) Perth</option><option value=\"Singapore\">(GMT+08:00) Singapore</option><option value=\"Taipei\">(GMT+08:00) Taipei</option><option value=\"Ulaan Bataar\">(GMT+08:00) Ulaan Bataar</option><option value=\"Osaka\">(GMT+09:00) Osaka</option><option value=\"Sapporo\">(GMT+09:00) Sapporo</option><option value=\"Seoul\">(GMT+09:00) Seoul</option><option value=\"Tokyo\">(GMT+09:00) Tokyo</option><option value=\"Yakutsk\">(GMT+09:00) Yakutsk</option><option value=\"Adelaide\">(GMT+09:30) Adelaide</option><option value=\"Darwin\">(GMT+09:30) Darwin</option><option value=\"Australia/Brisbane\">(GMT+10:00) Australia/Brisbane</option><option value=\"Brisbane\">(GMT+10:00) Brisbane</option><option value=\"Canberra\">(GMT+10:00) Canberra</option><option value=\"Guam\">(GMT+10:00) Guam</option><option value=\"Hobart\">(GMT+10:00) Hobart</option><option value=\"Melbourne\">(GMT+10:00) Melbourne</option><option value=\"Port Moresby\">(GMT+10:00) Port Moresby</option><option value=\"Sydney\">(GMT+10:00) Sydney</option><option value=\"Vladivostok\">(GMT+10:00) Vladivostok</option><option value=\"Magadan\">(GMT+11:00) Magadan</option><option value=\"New Caledonia\">(GMT+11:00) New Caledonia</option><option value=\"Solomon Is.\">(GMT+11:00) Solomon Is.</option><option value=\"Auckland\">(GMT+12:00) Auckland</option><option value=\"Fiji\">(GMT+12:00) Fiji</option><option value=\"Kamchatka\">(GMT+12:00) Kamchatka</option><option value=\"Marshall Is.\">(GMT+12:00) Marshall Is.</option><option value=\"Wellington\">(GMT+12:00) Wellington</option><option value=\"Nuku'alofa\">(GMT+13:00) Nuku'alofa</option></select>","import { IBusiness } from \"../types/Business\";\n\nexport const businessValidation = (values: IBusiness) => {\n  const errors : any = {};\n  \n  if (!values.name) {\n    errors.name = 'Ingresa el nombre de tu negocio'\n  }\n\n  if (Number(values.businessCategoryId) === 0) {\n    errors.businessCategoryId = 'Ingresa una categoría'\n  }\n\n  return errors;\n}","import { Flex, Spinner } from '@chakra-ui/react';\nimport React from 'react'\n\ninterface LoadingViewProps {}\n\nexport const LoadingView: React.FC<LoadingViewProps> = () => {\n  return (\n    <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n      <Spinner size='md' color='primary' />\n    </Flex>\n  );\n}","// libraries\nimport React, { useEffect, useState } from 'react'\nimport { Box, VStack, Select, Button, FormControl, FormLabel, Heading, FormErrorMessage, useToast } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { InputField, TextareaField } from '../components/general/InputField';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { IBusiness } from '../types/Business';\nimport { businessValidation } from '../validations/businessValidation';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\n// local components\n\ninterface SettingsProps {}\n\nexport const Settings: React.FC<SettingsProps> = () => {\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const toast = useToast();\n\n  useEffect(() => {\n    const fetchBusiness = async () => {\n      const { business } = await new BusinessService().get();\n      setBusiness(business);\n    }\n    fetchBusiness();\n  }, []);\n\n  const onSubmit = async (values: IBusiness) => {\n    if (business && business.id) {\n      const response =await new BusinessService().update(values, business.id)\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      console.log('respuesta', response);\n    }\n  }\n\n  if(!business) {\n    return <LoadingView />\n  }\n\n  const initialValues : IBusiness = {\n    name: business.name ? business.name : '',\n    description: business.description ? business.description : '',\n    businessCategoryId: business.businessCategoryId ? business.businessCategoryId : 0,\n    phone: business.phone ? business.phone : ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box w={{ base: '100%', md: '70%' }}>\n          <Heading as='h2' size='md' mb={8}>Datos básicos</Heading>\n          <Formik initialValues={initialValues} onSubmit={onSubmit} validate={businessValidation}>\n            { (({ isSubmitting, values, handleChange, errors }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                  <InputField inputSize='lg' name='name' label='Nombre del negocio' />\n                  <TextareaField inputSize='lg' name='description' label='Descripción del negocio (opcional)' rows={4} />\n                  <FormControl isInvalid={!!errors.businessCategoryId}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Categoría</FormLabel>\n                    <Select name='businessCategoryId' size='lg' value={values.businessCategoryId} onChange={handleChange}>\n                      <option value='0' >Selecciona una categoría</option>\n                    </Select>\n                    { errors.businessCategoryId && <FormErrorMessage>{errors.businessCategoryId}</FormErrorMessage> }\n                  </FormControl>\n                  <InputField inputSize='lg' name='phone' label='Teléfono de contacto' />\n                  <Button variant='primary' size='lg' type='submit' isLoading={isSubmitting}>\n                    Guardar\n                  </Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormLabel, Text, useToast, Image } from '@chakra-ui/react';\n\nimport { BusinessService } from '../../services/businessService';\n\ninterface UploadCoverProps {\n  onUpload?: any\n}\n\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg';\n\nexport const UploadCover: React.FC<UploadCoverProps> = ({ onUpload }) => {\n  // hooks\n  const toast = useToast();\n\n  // state\n  const [cover, setCover] = useState('');\n  const [isUploading, setIsUplaoding] = useState(false);\n\n  const fetch = async () => {\n    const response = await new BusinessService().get();\n    setCover(response.business.cover);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, [])\n\n  const onChange = async (e :any) => {\n    setIsUplaoding(true);\n\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    await new BusinessService().uplaodCover(data);\n\n    fetch();   \n\n    toast({\n      title: \"Datos actualizados.\",\n      status: \"success\",\n      isClosable: true,\n      position: 'top'\n    });\n\n    setIsUplaoding(false);\n\n    if (onUpload) {\n      onUpload();\n    }\n\n  }\n\n  return (\n    <>\n      <Box w={{ base: '100%', md: '60%' }} pr={10}>\n        <Text fontWeight='bold' mb={4}>Foto de portada</Text>\n        <Text fontSize='sm' color='subtext' mb={3}>Tu foto de portada es la primera impresión que tienen tus clientes de tu negocio.</Text>\n        <Text fontSize='sm' color='subtext'>\n          {/* Directrices importantes: Tamańo recomendado 930 x 620 píxeles; formato .jpg, .jpeg, o .png. */}\n          Directrices importantes: Tamaño recomendado 780 x 520 píxeles; formato .jpg, .jpeg, o .png.\n        </Text>\n        <Button variant='primary-outline' isLoading={isUploading} p={0} mt={4}>\n          <FormLabel w='100%' h='100%' htmlFor='file' m={0} p={2} px={4} >Cambiar foto</FormLabel>\n        </Button>\n\n        <input\n          type=\"file\"\n          id=\"file\" \n          name='file'\n          accept={acceptedFileTypes} \n          multiple={false} \n          onChange={onChange}\n          style={{ display: 'none' }}\n        />\n      </Box>\n      <Flex mt={3} w={{ base: '100%', md: '40%' }} justify='center' alignItems='center'>\n        <Image src={cover} w='300px' h='200px' objectFit=\"cover\" loading='eager' />\n      </Flex>\n    </>\n  );\n}","import { Box, Button, Flex, Heading, Text } from '@chakra-ui/react';\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { UploadCover } from '../gallery/UploadCover';\n\ninterface BoardingCoverProps {\n\n}\n\nexport const BoardingCover: React.FC<BoardingCoverProps> = ({}) => {\n  const history = useHistory();\n\n  const handleOnUpload = () => {\n    // history.push('/new-business/6');\n  }\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>Foto de portada</Heading>\n      <Text fontSize='xl' fontWeight='500'>Esta es la primera imagen que verán las personas, puede ser el logotipo de tu negocio, imagen de tu local o una imagen de un servicio.</Text>\n      <Flex flexDirection={{ base: 'column', md: 'row' }} w='100%' justify='space-between' mt={10}>\n        <UploadCover onUpload={handleOnUpload} />\n      </Flex>\n\n      <Box textAlign='right' mr={4}>\n        <Button size='lg' mt={10} variant='primary' onClick={() => history.push('/new-business/6')}>\n          Siguiente\n        </Button>\n      </Box>\n    </Box>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormControl, Heading, HStack, IconButton, Select, Text, Tooltip, VStack } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, Formik } from 'formik';\nimport { BusinessService } from '../../services/businessService';\nimport { FaDoorClosed, FaDoorOpen } from 'react-icons/fa';\nimport { IBusiness } from '../../types/Business';\nimport { Loading } from '../general/Loading';\n\ninterface BoardingHoursProps {}\n\nexport const BoardingHours: React.FC<BoardingHoursProps> = () => {\n  const history = useHistory()\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n\n  const [hours, setHours] = useState<string[]>([]);\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n    getHours();\n  }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<2; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 30*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const onSubmit = async (values: any) => {\n    if (business) {\n      const response = await new BusinessService().createHours(values, business.id);\n      if (response.success) {\n        history.push('/new-business/5');\n      }\n    }\n  }\n\n  const formDay = (values: any, handleChange: any, setFieldValue: any, label: string, dayOfWeek: number) => {\n    const isOpen : boolean = values.days[dayOfWeek].isOpen;\n    const { openFrom, openTill } = values.days[dayOfWeek];\n    return (\n      <HStack w='100%' direction='row' justify='center' align='center'>\n        <Text w='250px' textAlign='left' fontWeight='semibold'>{label}</Text>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openFrom`} size='lg' value={openFrom} onChange={handleChange} isDisabled={!isOpen}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        \n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openTill`} size='lg' value={openTill} onChange={handleChange} isDisabled={!isOpen}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <Tooltip label={isOpen ? 'Cerrar este día' : 'Abrir este día'} fontSize=\"md\">\n          <IconButton\n            colorScheme={isOpen ? 'blue' : 'red'}\n            aria-label=\"Call Segun\"\n            size=\"lg\"\n            icon={isOpen ? <FaDoorOpen /> : <FaDoorClosed />}\n            onClick={() => setFieldValue(`days[${dayOfWeek}].isOpen`, !isOpen )}\n          />\n        </Tooltip>\n      </HStack>\n    )\n  }\n\n  if (!business) {\n    return <Loading />\n  }\n\n  const initialValue = {\n    days: [\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 0 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 1 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 2 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 3 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 4 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 5 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 6 },\n    ]\n  }\n\n  return (\n    <Box textAlign='center'>\n    <Heading as='h2'>¿Cuál es el horario de tu negocio?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Ingresa el horario de tu negocio ya que será la hora disponible para hacer reservaciones.</Text>\n      \n      <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex align='center' w='100%' justify='center' mt={10}>\n              <VStack w={{ base: '100%', md: '80%' }} spacing={3}>\n                { formDay(values, handleChange, setFieldValue, 'Lunes', 0) }\n                { formDay(values, handleChange, setFieldValue, 'Martes', 1) }\n                { formDay(values, handleChange, setFieldValue, 'Miércoles', 2) }\n                { formDay(values, handleChange, setFieldValue, 'Jueves', 3) }\n                { formDay(values, handleChange, setFieldValue, 'Viernes', 4) }\n                { formDay(values, handleChange, setFieldValue, 'Sábado', 5) }\n                { formDay(values, handleChange, setFieldValue, 'Domingo', 6) }\n                <Button size='lg' alignSelf='flex-end' variant='primary' type='submit' isLoading={isSubmitting}>Siguiente</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { BusinessAddress, BusinessAddressResponse } from \"../types/BusinessAddress\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BusinessAddressService extends HttpClient {\n  constructor() {\n    super(URL_API)\n  }\n\n  get = (businessId: number) => this.instance.get<BusinessAddressResponse>(`/businesses/${businessId}/addresses`);\n  create = (data: BusinessAddress, businessId: number) => this.instance.post(`/businesses/${businessId}/addresses`, data);\n  update = (data: BusinessAddress, businessId: number, id: number) => this.instance.put<BusinessAddressResponse>(`/businesses/${businessId}/addresses/${id}`, data);\n}","import { useEffect, useRef } from \"react\";\n\nexport const useGoogleMaps = ({ coords, setCoords } : any) : any => {\n  const refContainer = useRef<any>();\n  const refMap = useRef<google.maps.Map>();\n  const refMarker = useRef<google.maps.Marker>();\n  \n  useEffect(() => {\n    const uluru = { lat: coords.lat, lng: coords.lng };\n    const map = new google.maps.Map(refContainer.current, {\n      center: uluru,\n      zoom: 17,\n      scrollwheel: false,\n      streetViewControl: false,\n      fullscreenControl: false,\n      mapTypeControl: false,\n      zoomControl: true,\n      disableDoubleClickZoom: true,\n      zoomControlOptions: { position: google.maps.ControlPosition.TOP_LEFT }\n    });\n\n      refMap.current = map;\n\n      map.addListener('dragend', () => {\n        const { lat, lng } = map.getCenter();\n        console.log('DRAGGEG', lat, lng);\n        \n        setCoords({ lat: lat(), lng: lng() });\n      });\n\n  }, []);\n\n  const addMarker = ({ lat, lng } : any) => {\n    if (refMap.current) {\n      const mark = new google.maps.Marker({ position: { lat, lng }, map: refMap.current, draggable: true })\n      refMarker.current = mark;\n      if (mark) {\n        mark.addListener('dragend', (e: any) => {\n          setCoords({ lat: e.latLng.lat(), lng: e.latLng.lng() })\n        });\n      }\n    } \n  }\n\n  const changeLocation = (coords :any) => {\n    if (refMap.current) {\n      refMap.current.setCenter(coords);\n    }\n  }\n\n  return {\n    refContainer,\n    addMarker,\n    changeLocation,\n  }\n}","import React, { useState, useEffect, useRef } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport { BusinessAddressService } from '../../services/businessAddressService';\nimport { TOKEN_MAPBOX } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { BusinessAddress, BusinessAddressResponse } from '../../types/BusinessAddress';\nimport { useGoogleMaps } from '../../hooks/useMap';\n\ninterface AddressFormProps {\n  handleSaveAddress: any\n  business: Required<IBusiness>\n}\n\nexport const AddressForm: React.FC<AddressFormProps> = ({ handleSaveAddress, business }) => {\n  \n  const [address, setAddresss] = useState<BusinessAddress | null>(null);\n  \n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [coords, setCoords] = useState({ lat: 25.6866142, lng: -100.3161126 });\n  \n  const [state, setState] = useState('');\n  const [city, setCity] = useState('');\n\n  const { refContainer, addMarker, changeLocation } = useGoogleMaps({ coords, setCoords });\n  \n  const fetchAddress = async () => {\n    const { success, address } = await new BusinessAddressService().get(business.id);\n    if (success && address) {\n      setAddresss(address);\n      setGeoAddress(address.addressMap);\n      setCoords({ lat: address.lat, lng: address.lng });\n      changeLocation({ lat: address.lat, lng: address.lng });\n      addMarker({ lat: address.lat, lng: address.lng });\n    }\n  }\n\n  useEffect(() => {\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (business.id) {\n      if (address?.id) {\n        response = await new BusinessAddressService().update({ lat: coords.lat, lng: coords.lng, addressMap: geoAddress, state, city }, business.id, address.id);\n      } else {\n        response = await new BusinessAddressService().create({ lat: coords.lat, lng: coords.lng, addressMap: geoAddress, state, city }, business.id);\n      }\n      if (response.success && response.address) {\n        setAddresss(response.address);\n      }\n      \n      if (handleSaveAddress) {\n        handleSaveAddress();\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    fillInAddress(results[0]);\n    \n    const latLng = await getLatLng(results[0]);\n    setCoords(latLng);\n    changeLocation(latLng);\n    addMarker(latLng);\n  }\n\n  const fillInAddress = (place: google.maps.GeocoderResult) => {\n    const addressComponent : google.maps.GeocoderAddressComponent[] = place.address_components;\n    for (var i = 0; i < addressComponent.length; i++) {\n      if (addressComponent[i].types[0] === 'locality') {\n        const locality : any = addressComponent[i];\n        console.log('locality', locality.long_name);\n        setCity(locality.long_name);\n      }\n      if (addressComponent[i].types[0] === 'administrative_area_level_1') {\n        const administrativeArea : any = addressComponent[i];\n        console.log('administrative_area_level_1', administrativeArea.long_name);\n        setState(administrativeArea.long_name);\n      }\n    }\n  }\n\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n  \n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        { (({ isSubmitting }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10}>\n              <VStack w='100%' align='flex-start'>\n                <Text fontWeight='bold'>Ingresa la dirección completa de tu negocio</Text>\n                <PlacesAutocomplete\n                  value={geoAddress}\n                  onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                  onSelect={handleSelect}\n                  searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                >\n                  { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                      <Box w='100%'>\n                        <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                        <Box shadow='md' background='#FFFFFF'>\n                          { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                          {suggestions.map(suggestion => {\n                            return (\n                              <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                <Text fontWeight='bold'>{suggestion.description}</Text>\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      </Box>\n                  )) }\n                </PlacesAutocomplete>\n              </VStack>\n            </Flex>\n            <Box>\n              <Box ref={refContainer} h='200px' w='100%' />\n              {/* <Text fontWeight='bold' fontSize='xs' mt={2}>Mueve el marcador si es necesario pero asegurate que este en el lugar correcto.</Text> */}\n              <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n              \n            </Box>\n\n            <Flex mt={4} align='flex-end' justifyContent='flex-end'>\n              <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Siguiente</Button>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n      \n      {/* <Box w='100%' h='200px' id='map'></Box> */}\n    </Box>\n  );\n}","import { Box, Heading, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\nimport { AddressForm } from '../business/AddressForm';\nimport { Loading } from '../general/Loading';\n\ninterface BoardingInformationProps {\n  setStep: any\n}\n\nexport const BoardingInformation: React.FC<BoardingInformationProps> = ({ setStep }) => {\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  const history = useHistory();\n  \n  const handleSaveAddress = () => {\n    history.push('/new-business/3');\n  }\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  if (!business) {\n    return <Loading />\n  }\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>¿Cuál es la dirección de tu negocio?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Ingresa la información lo más precisa posible para que tus clientes te puedan localizar.</Text>\n      { business && <AddressForm handleSaveAddress={handleSaveAddress} business={business} /> }\n    </Box>\n  );\n}","import * as Yup from 'yup';\n\n export const NewServiceSchema = Yup.object().shape({\n\n   name: Yup.string()\n    .min(5, 'Demasíado corto, minimo 5 letras.')\n    .max(200, 'Maximo 200 letras.')\n    .required('Ingresa un nombre'),\n\n  price:Yup.number()\n    .min(1)\n    .required('Ingresa el precio'),\n\n  time: Yup.string()\n  .required('Ingresa el tiempo'),\n });","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, Text, VStack } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, Formik } from 'formik';\nimport { InputField } from '../general/InputField';\nimport { BusinessService } from '../../services/businessService';\nimport { IService } from '../../types/IService';\nimport { IBusiness } from '../../types/Business';\nimport { NewServiceSchema } from '../../validations/newServiceValidation';\n\ninterface BoardingServicesProps {}\n\nexport const BoardingServices: React.FC<BoardingServicesProps> = ({}) => {\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n\n  const history = useHistory()\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  const onSubmit = async (values: IService) => {\n    if (business) {\n      const { success } = await new BusinessService().createService(values, business.id)\n      if (success) {\n        history.push('/new-business/4');\n      }\n    }\n  }\n\n  const initialValue = {\n    name: '',\n    description: '',\n    time: '',\n    price: '',\n  }\n\n  return (\n    <Box textAlign='center'>\n    <Heading as='h2'>¿Qué servicios realizas?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Añade un servicio para empezar a utilizar Boombook</Text>\n      \n      <Formik initialValues={initialValue} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <Flex align='center' w='100%' justify='center' mt={10}>\n              <VStack w={{ base: '100%', md: '70%' }} spacing={3}>\n                <InputField inputSize='lg' name='name' label='Nombre del servicio' />\n                <InputField inputSize='lg' name='description' label='Descripción' />\n                <HStack w='100%' direction='row' justify='space-between'>\n                  <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                  {/* <InputNumberField inputSize='lg' name='Precio' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  {/* <InputField inputSize='lg' name='time' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  <FormControl isInvalid={!!errors.time}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                    <Select name='time' size='lg' placeholder=\"Seleccione la duración\" value={values.time} onChange={handleChange}>\n                      <option value=\"15\">15 min.</option>\n                      <option value=\"30\">30 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"60\">1:00 hr.</option>\n                      <option value=\"75\">1:15 hr.</option>\n                      <option value=\"90\">1:30 hr.</option>\n                      <option value=\"105\">1:45 hr.</option>\n                      <option value=\"120\">2:00 hr.</option>\n                      <option value=\"135\">2:15 hr.</option>\n                      <option value=\"140\">2:30 hr.</option>\n                    </Select>\n                    <FormErrorMessage>{errors.time}</FormErrorMessage>\n                  </FormControl>\n                </HStack>\n                <Button size='lg' alignSelf='flex-end' variant='primary' type='submit' isLoading={isSubmitting}>Siguiente</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Button, Flex, Heading, Text } from '@chakra-ui/react'\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport { APP_NAME } from '../../config/constants';\nimport { useHistory } from 'react-router-dom';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\n\ninterface BoardingSuccessProps {\n  \n}\n\nexport const BoardingSuccess: React.FC<BoardingSuccessProps> = ({ }) => {\n  const history = useHistory();\n\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  \n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  const publishBusiness = async () => {\n    const data : IBusiness = { isCompleted: true, isPublic: true };\n    if (business) {\n      const response = await new BusinessService().update(data, business.id);\n      if (response.success) {\n        history.push('/');\n      }\n    }\n  }\n\n  return (\n    <Flex align='center' direction='column' textAlign='center'>\n      <AiFillCheckCircle size={90} color='#25CB67' />\n      <Heading my={6} as='h2'>Completado</Heading>\n      <Text fontSize='xl' fontWeight='500' mb={3}>\n        Gracias por registrate en {APP_NAME}, toda la información registrada anteriormente puede ser modificada desde la página de configuración.\n      </Text>\n      <Text fontSize='md' fontWeight='500'>\n        Te sugerimos ir al módulo de configuración para que añadas más servicios y publiques tu galería de fotos.\n      </Text>\n      \n\n      <Button variant='primary' size='lg' mt={6} px={16} onClick={publishBusiness}>\n        Aceptar y publicar\n      </Button>\n    </Flex>\n  );\n}","import * as Yup from 'yup';\n\n export const welcomeValidationSchema = Yup.object().shape({\n\n   name: Yup.string()\n    .min(5, 'Demasíado corto, minimo 5 letras.')\n    .max(200, 'Maximo 200 letras.')\n    .required('Ingresa un nombre'),\n\n    phone: Yup.string().required('Ingresa un teléfono.'),\n\n    businessCategoryId: Yup.number()\n    .min(1, 'Selecciona una categoría')\n    .required('Selecciona una categoría'),\n });","import HttpClient from './HttpClient';\n\nimport { API_DOMAIN, URL_API } from \"../config/constants\";\n\nexport class CategoryService extends HttpClient {\n\n  public constructor() {\n    super(`${API_DOMAIN}/api/v1`);\n  }\n\n  public getAll = () => this.instance.get('/categories');\n}","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\nimport { Box, Button, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Select, Text, VStack } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\nimport { User } from '../../types/User';\nimport { InputField, TextareaField } from '../general/InputField';\nimport { welcomeValidationSchema } from '../../validations/welcomeValidation';\nimport { CategoryService } from '../../services/categoryService';\n\ninterface WelcomeProps {\n  user: User\n  business?: IBusiness | null\n}\n\nexport const Welcome: React.FC<WelcomeProps> = ({ user, business }) => {\n  const history = useHistory();\n\n  // state\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const response = await new CategoryService().getAll();\n      if (response.success) {\n        setCategories(response.categories);\n      }\n    }\n    fetchCategories();\n  }, []);\n\n  const onSubmit = async (values: IBusiness) => {\n    if (business && business.id) {\n      await new BusinessService().update(values, business.id);\n    } else {\n      await new BusinessService().create(values);\n    }\n    history.push('/new-business/2');\n  }\n\n  const initialValues = { \n    name: business ? business.name : '', \n    businessCategoryId: business ? business.businessCategoryId : 0,\n    phone: (business && business.phone) ? business.phone : '',\n  };\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>Estamos contentos de que estés aquí {user.firstName}.</Heading>\n      <Text fontSize='xl' fontWeight='500'>Estás a un paso de comenzar a organizar tus clientes.</Text>\n\n      <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={welcomeValidationSchema}>\n        { ({ values, isSubmitting, handleChange, errors }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10} w='100%' direction='column' justifyContent='center' align='center'>\n              <Box w={{ base: '100%', md: '70%' }}>\n                <VStack spacing={5} align='flex-start'>\n                  <InputField inputSize='lg' name='name' label='¿Cual es el nombre de tu negocio?'/>\n                  <FormControl isInvalid={!!errors.businessCategoryId}>\n                      <FormLabel fontWeight='bold' fontSize='sm'>Categoría</FormLabel>\n                      <Select name='businessCategoryId' size='lg' value={values.businessCategoryId} onChange={handleChange}>\n                        <option value='0' >Selecciona una categoría</option>\n                        { categories.map((item: any) => (\n                          <option value={item.id} key={item.id}>{item.name}</option>\n                        )) }\n                      </Select>\n                      { errors.businessCategoryId && <FormErrorMessage>{errors.businessCategoryId}</FormErrorMessage> }\n                    </FormControl>\n                    <TextareaField inputSize='lg' name='description' label='Descripción del negocio (opcional)' rows={3} />\n                    <InputField inputSize='lg' name='phone' label='Teléfono del negocio' />\n                  <Box textAlign='right' alignSelf='flex-end'>\n                    <Button\n                      variant='primary'\n                      size='lg'\n                      type='submit'\n                      isLoading={isSubmitting}\n                    >\n                      Siguiente\n                    </Button>\n                  </Box>\n                </VStack>\n              </Box>\n            </Flex>\n          </Form>\n        ) }\n      </Formik>\n    </Box>\n  );\n}","import { Box, Heading, Progress } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { Header } from '../components/general/Header';\nimport { Loading } from '../components/general/Loading';\nimport { BoardingCover } from '../components/onboarding/BoardingCover';\nimport { BoardingHours } from '../components/onboarding/BoardingHours';\nimport { BoardingInformation } from '../components/onboarding/BoardingInformation';\nimport { BoardingServices } from '../components/onboarding/BoardingServices';\nimport { BoardingSuccess } from '../components/onboarding/BoardingSuccess';\nimport { Welcome } from '../components/onboarding/Welcome';\nimport { BusinessService } from '../services/businessService';\n\nimport { UserService } from '../services/userService';\nimport { IBusiness } from '../types/Business';\nimport { User } from '../types/User';\n\ninterface NewBusinessParams {\n  step?: string | undefined\n}\n\nexport const NewBusiness: React.FC = () => {\n  const params = useParams<NewBusinessParams>();\n  const option = params.step !== undefined ? Number(params.step) : 1;\n\n  const [step, setStep] = useState<number>(option || 1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  \n\n  useEffect(() => {\n    const option = params.step !== undefined ? Number(params.step) : 1;\n    setStep(option)\n  }, [option, params.step]);\n\n  useEffect(() => {\n    const getMe = async () => {\n      const { success, user } = await new UserService().getMe();\n      if (!user || !success) {\n        return;\n      }\n      setUser(user);\n    };\n  \n    const getBusiness = async () => {\n      const { success, business }  = await new BusinessService().get();\n      if (success) {\n        setBusiness(business);\n      }\n    }\n    getMe();\n    getBusiness();\n    setIsLoading(false);\n    \n  }, []);\n\n  const handleSteps = (step: number) => {\n    setStep(step)\n  }\n\n  const logout = async () => {\n    await new UserService().logout();\n    window.location.href = '/';\n  }\n\n  if (!user || isLoading) {\n    return <Loading />\n  }\n\n  const buildOnboarding = () => {\n    switch (step) {\n      case 1:\n        return <Welcome business={business} user={user} />\n      case 2:\n        return <BoardingInformation setStep={handleSteps} />\n      case 3:\n        return <BoardingServices />\n      case 4:\n        return <BoardingHours />\n      case 5:\n        return <BoardingCover />\n      case 6:\n        return <BoardingSuccess />\n      default:\n        return <Heading>No se pudo cargar la pagina</Heading>\n    }\n  }\n\n  return (\n    <Box bg='#FFFFFF' height='100vh'>\n      { business && <Header user={user} business={business} logout={logout} /> }\n      \n      <Box mx='auto' w={{ base: '100%', md: '800px' }} py={4}>\n        <Box>\n          <Progress value={16.66 * step} colorScheme='green' />\n        </Box>\n        <Box mt={6} px={{ base: 4, md: 0 }}>\n          { (user && !isLoading) && buildOnboarding() }\n        </Box>\n      </Box>\n    </Box>\n  );\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { Box, Button, Heading, HStack, useToast, VStack , Text} from '@chakra-ui/react';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddress } from '../types/BusinessAddress';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { InputField } from '../components/general/InputField';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\ninterface SettingsAddressProps {}\n\nexport const SettingsAddress: React.FC<SettingsAddressProps> = () => {\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n  \n  useEffect(() => {\n    const fetchAddress = async () => {\n      const { address } = await new BusinessAddressService().get(businessContext.id);\n      if (address) {\n        setAddress(address);\n      }\n      console.log('Direccion', address);\n    }\n\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async (values: any) => {\n    if (businessContext && businessContext.id && address?.id) {\n      console.log('Id de negocio', businessContext.id, values);\n      const { success } = await new BusinessAddressService().update(values, businessContext.id, address.id);\n      if (success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  if (!address) {\n    return <LoadingView />\n  }\n\n  const initialValues = {\n    street: address.street ? address.street : '',\n    area: address.area ? address.area : '',\n    city: address.city ? address.city : '',\n    state: address.state ? address.state : '',\n    zipcode: address.zipcode ? address.zipcode : '',\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Dirección</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Esta información es utilizada  si la ubicación por coordenadas no es precisa, así que es recomendable ingresarla.</Text>\n        <Box w='80%'>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            { (({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='street' label='Calle y número' />\n                  <InputField inputSize='lg' name='area' label='Colonia' />\n                </HStack>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='city' label='Municipio' />\n                  <InputField inputSize='lg' name='state' label='Estado' />\n                </HStack>\n                <HStack spacing={4} w='49%'>\n                  <InputField inputSize='lg' name='zipcode' label='Codigo postal' />\n                </HStack>\n                <Button variant='primary' type='submit' size='lg' isLoading={isSubmitting}>Guardar</Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useContext, useRef, useState, useEffect } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button, useToast, Heading } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { BusinessAddress, BusinessAddressResponse } from '../types/BusinessAddress';\nimport { TOKEN_MAPBOX } from '../config/constants';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { useGoogleMaps } from '../hooks/useMap';\n\ninterface SettingsLocationProps {\n\n}\n\nexport const SettingsLocation: React.FC<SettingsLocationProps> = () => {\n  // Contexto\n  const businessContext = useContext(UserContext);\n  \n  // Hooks\n  const toast = useToast();\n  \n\n  // States\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [coords, setCoords] = useState({ lat: 25.6866142, lng: -100.3161126 });\n\n  const [isLoading, setIsLoading] = useState(true);\n  \n  const { refContainer, addMarker, changeLocation } = useGoogleMaps({ coords, setCoords });\n  \n  const fetchAddress = async () => {\n    const { success, address } = await new BusinessAddressService().get(businessContext.id);\n    if (success && address) {\n      setAddress(address);\n      setGeoAddress(address.addressMap);\n      setCoords({ lat: address.lat, lng: address.lng });\n      changeLocation({ lat: address.lat, lng: address.lng });\n      addMarker({ lat: address.lat, lng: address.lng });\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetchAddress();\n  }, [])\n\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (businessContext.id && address?.id) {\n      response = await new BusinessAddressService().update({ lat: coords.lat, lng: coords.lng, addressMap: geoAddress }, businessContext.id, address.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    const latLng = await getLatLng(results[0]);\n    \n    setCoords(latLng);\n    changeLocation(latLng);\n    addMarker(latLng);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Ubicación</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={{ base: 2, md: 20 }}>Ingresa correctamente esta\u0010 información, es la que visualizarán las personas para poder llegar a tu negocio</Text>\n        <Box>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n          { (({ isSubmitting }) => (\n            <Form>\n              <Flex aling='center' justify='center' mb={2}>\n                <VStack w='100%' align='flex-start'>\n                  <PlacesAutocomplete\n                    value={geoAddress}\n                    onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                    onSelect={handleSelect}\n                    searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                  >\n                    { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <Box w='100%'>\n                          <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                          <Box shadow='md' background='#FFFFFF'>\n                            { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                            {suggestions.map(suggestion => {\n                              return (\n                                <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                  <Text fontWeight='bold'>{suggestion.description}</Text>\n                                </Box>\n                              );\n                            })}\n                          </Box>\n                        </Box>\n                    )) }\n                  </PlacesAutocomplete>\n                </VStack>\n              </Flex>\n              <Box>\n                <Box ref={refContainer} h='200px' w='100%' />\n                <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n                \n              </Box>\n\n              <Flex mt={4} align='flex-start' justifyContent='flex-start'>\n                <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Guardar</Button>\n              </Flex>\n            </Form>\n          )) }\n        </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Heading, HStack, Text, Tooltip, FormControl, Select, Switch, IconButton, Box, Flex, VStack, Button, useToast, Stack, Spacer, Divider } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { FaDoorOpen, FaDoorClosed } from 'react-icons/fa';\n\n// Types\nimport { IBusiness } from '../types/Business';\n\n// services\nimport { BusinessService } from '../services/businessService';\nimport { formatHoursDate } from '../utils/formatHoursDate';\n\n// components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { IHour } from '../types/IHour';\n\n\ninterface SettingsAdvancedProps {\n\n}\n\nexport const SettingsAdvanced: React.FC<SettingsAdvancedProps> = () => {\n  // context\n  const businessContext = useContext(UserContext);\n\n  // Hooks\n  const history = useHistory()\n  const toast = useToast();\n\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const [hasBookingConfimation, setHasBookingConfimation] = useState(false);\n  const [hasParallelBookings, setHasParallelBookings] = useState(false);\n  const [isPublic, setIsPublic] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  \n  useEffect(() => {\n    const fetchBusiness = async () => {\n      const { business } = await new BusinessService().get();\n      console.log('Datos de negocio', business);\n      if (business) {\n        setBusiness(business);\n        setHasBookingConfimation(business.hasBookingConfimation);\n        setHasParallelBookings(business.hasParallelBookings);\n        setIsPublic(business.isPublic);\n      }\n      \n    }\n    fetchBusiness();\n  }, []);\n\n  const onSubmit = async () => {\n    setIsSubmitting(true);\n    if (business && business.id) {\n      const response = await new BusinessService().update({ isPublic, hasBookingConfimation, hasParallelBookings }, business.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      console.log('Respuesta de ', response);\n    }\n    setIsSubmitting(false);\n  }\n  \n  const initialValue = {}\n\n  if (!business) {\n    return <LoadingView />\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box>\n          <Heading as='h2' size='md' mb={2}>Configuraciones avanzadas</Heading>\n        </Box>\n        <Flex w='100%' mt={10}>\n          <VStack align=\"flex-start\" direction=\"row\" divider={<Divider />} spacing={6}>\n            <Flex w={{ base: '100%', md: '450px' }}>\n              <Text fontWeight='500'>Permitir varias reservaciones a la misma hora</Text>\n              <Spacer />\n              <Switch size=\"md\" isChecked={hasParallelBookings} onChange={(e) => setHasParallelBookings(!hasParallelBookings)} />\n            </Flex>\n            {/* <Flex w={{ base: '100%', md: '450px' }}>\n              <Text fontWeight='500'>Confirmar reservaciones</Text>\n              <Spacer />\n              <Switch size=\"md\" isChecked={hasBookingConfimation} onChange={(e) => setHasBookingConfimation(!hasBookingConfimation)} />\n            </Flex> */}\n            <Flex w={{ base: '100%', md: '450px' }}>\n              <Text fontWeight='500'>Negocio público</Text>\n              <Spacer />\n              <Switch size=\"md\" isChecked={isPublic} onChange={(e) => setIsPublic(!isPublic)} />\n            </Flex>\n            <Button variant='primary' size='lg' onClick={onSubmit} isLoading={isSubmitting}>\n              Guardar\n            </Button>\n          </VStack>\n        </Flex>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Heading, HStack, Text, Tooltip, FormControl, Select, IconButton, Box, Flex, VStack, Button, useToast } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { FaDoorOpen, FaDoorClosed } from 'react-icons/fa';\n\n// Types\nimport { IBusiness } from '../types/Business';\n\n// services\nimport { BusinessService } from '../services/businessService';\nimport { formatHoursDate } from '../utils/formatHoursDate';\n\n// components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { IHour } from '../types/IHour';\n\n\ninterface SettingsHourProps {\n\n}\n\nexport const SettingsHour: React.FC<SettingsHourProps> = () => {\n  // context\n  const businessContext = useContext(UserContext);\n\n  // Hooks\n  const history = useHistory()\n  const toast = useToast();\n\n  // states\n  const [hours, setHours] = useState<string[]>([]);\n  const [myHours, setMyHours] = useState<IHour[]>([]);\n  \n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const newHours = formatHoursDate(response.hours);\n        setMyHours(newHours);\n      }\n    }\n\n    fetchHours();\n    getHours();\n  }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<2; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 30*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const onSubmit = async (values: any) => {\n    if (businessContext?.id) {\n      const response = await new BusinessService().createHours(values, businessContext.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const formDay = (values: any, handleChange: any, setFieldValue: any, label: string, dayOfWeek: number) => {\n    const isOpen : boolean = values.days[dayOfWeek].isOpen;\n    const { openFrom, openTill } = values.days[dayOfWeek];\n    return (\n      <HStack w='100%' direction='row' justify='center' align='center'>\n        <Text fontSize={{ base: 'sm', md: 'md' }} w='250px' textAlign='left' fontWeight='semibold'>{label}</Text>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openFrom`} size='lg' value={openFrom} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openTill`} size='lg' value={openTill} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <Tooltip label={isOpen ? 'Cerrar este día' : 'Abrir este día'} fontSize=\"md\">\n          <IconButton\n            colorScheme={isOpen ? 'blue' : 'red'}\n            aria-label=\"Call Segun\"\n            size=\"lg\"\n            icon={isOpen ? <FaDoorOpen /> : <FaDoorClosed />}\n            onClick={() => setFieldValue(`days[${dayOfWeek}].isOpen`, !isOpen )}\n          />\n        </Tooltip>\n      </HStack>\n    )\n  }\n\n  if (!businessContext || myHours.length === 0) {\n    return <LoadingView />\n  }\n\n  const initialValue = {\n    days: [\n      { businessId: businessContext.id, openFrom: myHours[0] ? myHours[0].openFrom :  '9:00', openTill: myHours[0] ? myHours[0].openTill : '20:00', isOpen: myHours[0] ? myHours[0].isOpen : true, dayOfWeek: 0 },\n      { businessId: businessContext.id, openFrom: myHours[1] ? myHours[1].openFrom :  '9:10', openTill: myHours[1] ? myHours[1].openTill : '20:00', isOpen: myHours[1] ? myHours[1].isOpen : true, dayOfWeek: 1 },\n      { businessId: businessContext.id, openFrom: myHours[2] ? myHours[2].openFrom :  '9:00', openTill: myHours[2] ? myHours[2].openTill : '20:00', isOpen: myHours[2] ? myHours[2].isOpen : true, dayOfWeek: 2 },\n      { businessId: businessContext.id, openFrom: myHours[3] ? myHours[3].openFrom :  '9:00', openTill: myHours[3] ? myHours[3].openTill : '20:00', isOpen: myHours[3] ? myHours[3].isOpen : true, dayOfWeek: 3 },\n      { businessId: businessContext.id, openFrom: myHours[4] ? myHours[4].openFrom :  '9:00', openTill: myHours[4] ? myHours[4].openTill : '20:00', isOpen: myHours[4] ? myHours[4].isOpen : true, dayOfWeek: 4 },\n      { businessId: businessContext.id, openFrom: myHours[5] ? myHours[5].openFrom :  '9:50', openTill: myHours[5] ? myHours[5].openTill : '20:00', isOpen: myHours[5] ? myHours[5].isOpen : true, dayOfWeek: 5 },\n      { businessId: businessContext.id, openFrom: myHours[6] ? myHours[6].openFrom :  '9:00', openTill: myHours[6] ? myHours[6].openTill : '20:00', isOpen: myHours[6] ? myHours[6].isOpen : true, dayOfWeek: 6 },\n    ]\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box>\n          <Heading as='h2' size='md' mb={2}>Horario</Heading>\n        </Box>\n        <Box>\n        <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex w='100%' mt={10}>\n              <VStack w={{ base: '100%', md: '80%' }} spacing={3}>\n                { formDay(values, handleChange, setFieldValue, 'Domingo', 0) }\n                { formDay(values, handleChange, setFieldValue, 'Lunes', 1) }\n                { formDay(values, handleChange, setFieldValue, 'Martes', 2) }\n                { formDay(values, handleChange, setFieldValue, 'Miercoles', 3) }\n                { formDay(values, handleChange, setFieldValue, 'Jueves', 4) }\n                { formDay(values, handleChange, setFieldValue, 'Viernes', 5) }\n                { formDay(values, handleChange, setFieldValue, 'Sabado', 6) }\n                <Button size='lg' alignSelf='flex-start' variant='primary' type='submit' isLoading={isSubmitting}>Guardar</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","export const minutesToHour = (minutes :number) => {\n  const hour = minutes / 60;\n  const min = (hour % 1) * 60;\n\n  if (min === 0) {\n    return `${Math.trunc(hour)} hrs`;\n  } else if(hour < 1) {\n    return `${min} mins`;\n  } else {\n    return `${Math.trunc(hour)}:${min} hrs`;\n  } \n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption } from \"@chakra-ui/react\"\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface BookingsListHistoryProps {}\n\nexport const BookingsListHistory: React.FC<BookingsListHistoryProps> = ({}) => {\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      // const params = { startDate: moment(new Date()).toISOString() };\n      const params = {};\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  const statusColor = (id: number) : string => {\n    switch (id) {\n      case 1:\n        return 'yellow.500'\n      case 2:\n        return 'primary'\n      case 3:\n        return 'red.500'\n      default:\n        return 'primary'\n    }\n}\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Cálculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th display={{ base: 'none', md: 'block' }}>#</Th>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th display={{ base: 'none', md: 'block' }}>Tiempo de servicio*</Th>\n            <Th display={{ base: 'none', md: 'block' }}>Total a cobrar*</Th>\n            <Th display={{ base: 'none', md: 'block' }}>Estatus</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td display={{ base: 'none', md: 'block' }}>{item.id}</Td>\n              <Td>{item.customer?.firstName} {item.customer?.lastName}</Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td display={{ base: 'none', md: 'block' }}>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td display={{ base: 'none', md: 'block' }}>${item.totalPrice}MXN</Td>\n              <Td display={{ base: 'none', md: 'block' }} color={statusColor(item.bookingStatus.id)}>{item.bookingStatus.name}</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip } from \"@chakra-ui/react\"\nimport moment from 'moment';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\ninterface BookingsListNextProps {}\n\nexport const BookingsListNext: React.FC<BookingsListNextProps> = ({}) => {\n  // hooks\n  const history = useHistory();\n  // state\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { status: 2, time: 10, dateEnd: moment(new Date()).toISOString() };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        {/* <TableCaption>*Cálculos basados en el tiempo y precio de cada servicio</TableCaption> */}\n        <Thead>\n          <Tr>\n            <Th display={{ base: 'none', md: 'block' }}>#</Th>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th display={{ base: 'none', md: 'block' }}>Tiempo de servicio*</Th>\n            <Th display={{ base: 'none', md: 'block' }}>Total a cobrar*</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td display={{ base: 'none', md: 'block' }}>{item.id}</Td>\n              <Td\n                textDecor='underline'\n                onClick={() => history.push(`/bookings/${item.id}`)}\n                fontWeight='600'\n                _hover={{ bg: 'primaryLight', cursor: 'pointer' }}\n              >\n                {item.customer?.firstName} {item.customer?.lastName}\n              </Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td display={{ base: 'none', md: 'block' }}>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td display={{ base: 'none', md: 'block' }}>${item.totalPrice}MXN</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip, useToast } from \"@chakra-ui/react\"\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface BookingsListProps {}\n\n// Añadir toolt tip al tiempo y precio indicando que es el calculo basado en lo que registro el negocio\n\n// Este monto se basa en el precio de los servicios que registraste\n\nexport const BookingsList: React.FC<BookingsListProps> = ({}) => {\n  // hooks\n  const toast = useToast();\n  const history = useHistory();\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [bookingId, setBookingId] = useState(0)\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { status: 1, time: 10 };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  const handleToAcept = async (index :number, id? :number) => {\n    console.log('Booking id', id);\n    if (id) {\n      setBookingId(id);\n      const response = await new BookingService().accepted(id);\n      if (response.success) {\n        setBookings([\n          ...bookings.slice(0, index),\n          ...bookings.slice(index + 1)\n        ]);\n\n        toast({\n          status: 'success',\n          title: 'Servicio aceptado',\n          position: 'top',\n        })\n      }\n      setBookingId(0);\n    }    \n  }\n\n  const handleToCancel = async (index :number, id? :number) => {\n    if (id) {\n      setBookingId(id);\n      const response = await new BookingService().canceled(id);\n      if (response.success) {\n        setBookings([\n          ...bookings.slice(0, index),\n          ...bookings.slice(index + 1)\n        ]);\n\n        toast({\n          status: 'error',\n          title: 'Servicio rechazado',\n          position: 'top',\n        })\n      }\n      setBookingId(0);\n    }    \n  }\n\n  return (\n    <Table variant=\"simple\" size='md'>\n        {/* <TableCaption>*Cálculos basados en el tiempo y precio de cada servicio</TableCaption> */}\n        <Thead>\n          <Tr>\n            <Th display={{ base: 'none', md: 'block' }}>#</Th>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th display={{ base: 'none', md: 'block' }} >Tiempo de servicio*</Th>\n            <Th display={{ base: 'none', md: 'block' }}>Total a cobrar*</Th>\n            <Th display={{ base: 'none', md: 'block' }} />\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking, index :number) => (\n            <Tr fontSize='14px'>\n              <Td display={{ base: 'none', md: 'block' }}>{item.id}</Td>\n              <Td\n                textDecor='underline'\n                onClick={() => history.push(`/bookings/${item.id}`)}\n                fontWeight='600'\n                _hover={{ bg: 'primaryLight', cursor: 'pointer' }}\n              >\n                {item.customer?.firstName} {item.customer?.lastName}\n              </Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td display={{ base: 'none', md: 'block' }}>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td display={{ base: 'none', md: 'block' }}>${item.totalPrice}MXN</Td>\n              <Td display={{ base: 'none', md: 'block' }}>\n                <Flex>\n                  <Tooltip label=\"Aceptar\" fontSize=\"md\">\n                    <IconButton\n                      aria-label=\"Aceptar\"\n                      variant=\"ghost\"\n                      size='lg'\n                      fontSize=\"36px\"\n                      icon={<AiOutlineCheckCircle />}\n                      mr={1}\n                      onClick={() => handleToAcept(index, item.id)}\n                      isLoading={bookingId === item.id}\n                    />\n                  </Tooltip>\n                  <Tooltip label=\"Rechazar\" fontSize=\"md\">\n                    <IconButton\n                      aria-label=\"Aceptar\"\n                      variant=\"ghost\"\n                      size='lg'\n                      fontSize=\"36px\"\n                      icon={<AiOutlineCloseCircle />}\n                      mr={1}\n                      onClick={() => handleToCancel(index, item.id)}\n                      isLoading={bookingId === item.id}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import { Box, Button, HStack, Text } from '@chakra-ui/react';\nimport React, { useState } from 'react'\nimport { BookingsListHistory } from '../components/booking/BookingHistoryList';\nimport { BookingsListNext } from '../components/booking/BookingListNext';\nimport { BookingsList } from '../components/booking/BookingsList';\nimport { ContainerPage } from '../components/general/ContainerPage';\n\ninterface BookingsProps {}\n\nconst MenuLink: React.FC<{ title: string, onClick: any, isActive: boolean }> = ({title, onClick, isActive}) => (\n  <Button bg={isActive ? 'primary' : ''} variant='ghost' fontWeight='bold' pr={6} onClick={onClick}>\n    <Text color={isActive ? '#FFF' : ''} fontSize='md'>{title}</Text>\n  </Button>\n)\n\nexport const Bookings: React.FC<BookingsProps> = ({}) => {\n  const [tab, setTab] = useState(1);\n\n  return (\n    <ContainerPage title='Reservaciones'>\n      <Box bg='surface' borderBottomWidth={1} borderColor='borders' py={3}>\n        <Box>\n          <HStack mt={4} borderBottomWidth={1} borderColor='borders' p={3}>\n            <MenuLink title='Pendientes' onClick={() => setTab(1)} isActive={tab === 1} />\n            <MenuLink title='Próximas' onClick={() => setTab(2)} isActive={tab === 2} />\n            <MenuLink title='Todas' onClick={() => setTab(3)} isActive={tab === 3} />\n          </HStack>\n          { tab === 1 && <BookingsList /> }\n          { tab === 2 && <BookingsListNext /> }\n          { tab === 3 && <BookingsListHistory /> }\n        </Box>\n      </Box>\n    </ContainerPage>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Container, Flex, Heading, HStack, IconButton, Spacer, Stack, Text, Tooltip, useToast, VStack } from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { IBooking } from '../types/IBooking';\nimport { BookingService } from '../services/bookingService';\nimport { formatDateLG } from '../utils/formatDate';\nimport { minutesToHour } from '../utils/minutesToHours';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { IBookingService } from '../types/IBookingService';\n\ninterface BookingProps {}\n\n// Datos de clioente\n/**\n Nombre\n Telefono,\n\n Fecha\n Hora\n Mensaje\n\n Servicios\n\n Acciones\n  Aceptar\n  Rechazar\n  Contactar\n*/\n\nexport const Booking: React.FC<BookingProps> = ({}) => {\n\n  // hooks\n  const { id } :any = useParams();\n  const toast = useToast();\n\n  // state\n  const [booking, setBooking] = useState<Required<IBooking>>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchBooking = async () => {\n    const { success, booking } = await new BookingService().get(id)\n    if (success) {\n      setBooking(booking);\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchBooking();\n  }, []);\n\n  const handleToAcept = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().accepted(id);\n      if (response.success) {\n        fetchBooking();\n      }\n      setIsLoading(false);\n      console.log('respues de reservacion', response);\n    }    \n  }\n\n  const handleToCancel = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().canceled(id);\n      if (response.success) {\n        fetchBooking();\n      }\n      console.log('Respuesta de servicio', response);\n      setIsLoading(false);\n      toast({\n        status: 'error',\n        title: 'Servicio rechazado',\n        position: 'top',\n      })\n      \n    }\n  }    \n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  if (!booking) {\n    return (\n      <Text>Servicio no encontrado</Text>\n    )\n  }\n\n  const colorStatus = (statusId :number) => {\n    switch (statusId) {\n      case 1:\n        return '#D69E2E'\n      case 2:\n        return 'primary'\n      case 3:\n        return 'error'\n      default:\n        break;\n    }\n  }\n  \n  return (\n    <>\n      <Box bg={colorStatus(booking.bookingStatusId)} color='#FFF' py={6} px={{ base: 6, md: 12 }} borderBottomWidth={1} borderColor='borders'>\n        <VStack align='left' justify='flex-start'>\n          <Heading as='h1'>{booking.customer.firstName} {booking.customer.lastName}</Heading>\n          <Text color='#FFF'>Teléfono: {booking.customer.phone}</Text>\n          <Text color='#FFF'>Fecha de solicitud: {formatDateLG(booking.createdAt)}</Text>\n        </VStack>\n      </Box>\n      \n      <ContainerPage>\n        <Flex flexDirection={{ base: 'column', md: 'row' }} justify='space-between'>\n          <Flex direction='column' w={{ base: '100%', md: '62%' }}>\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders' mb={6}>\n              <Heading as='h4' fontSize='2xl' mb={6}>Resumen del servicio</Heading>\n\n              { booking.message &&\n              <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                <Text fontSize='sm' fontWeight='600' color='subtext'>Comentario</Text>\n                <Text as='cite'>{booking.message}</Text>\n              </VStack>\n              }\n              <HStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Fecha de servicio</Text>\n                  <Text fontWeight='600'>{formatDateLG(booking.bookingDate)}</Text>\n                </VStack>\n              </HStack>\n              <HStack spacing={10}>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Tiempo de servicio</Text>\n                  <Text fontWeight='600'>{minutesToHour(booking.totalTime)}</Text>\n                </VStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Total a cobrar</Text>\n                  <Text fontWeight='600'>${booking.totalPrice}MXN</Text>\n                </VStack>\n              </HStack>\n            </Box>\n\n            <Box bg='surface' py={6} px={6} w='100%' borderWidth={1} borderColor='borders'>\n              <Heading as='h4' fontSize='2xl' mb={6}>Servicios</Heading>\n              <Stack mb={3} w='100%'>\n                { booking.bookingService.map((item: IBookingService) => (\n                  <Flex align='center' justify='space-evenly' flex='100%'>\n                    <Text fontSize='md' fontWeight='semibold' w='260px'>{item.nameService}</Text>\n                    <Spacer />\n                    <Flex alignSelf='center'>\n                      <Box w='15px' />\n                      <Flex direction='column'>\n                        <Text fontSize='xs' pr='10px'>${item.priceService}MXN</Text>\n                        <Text fontSize='xs' pr='10px'>{item.timeService}min</Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )) }\n              </Stack>\n            </Box>\n          </Flex>\n\n          <Box w={{ base: '100%', md: '35%' }}>\n            { booking.bookingStatusId === 1 &&\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders'>\n              <Flex justifyContent='center' direction='column' alignItems='center'>\n                <Heading as='h4' fontSize='2xl'>Solicitud</Heading>\n                <Text mt={10} textAlign='center'>Oscar Alberto esta interesado en hacer una reservación. ¿Lo aceptas?</Text>\n                <VStack my={6} w='100%'>\n                  <Button variant='primary' isFullWidth size='lg' onClick={handleToAcept}>\n                    Aceptar\n                  </Button>\n                  <Button variant='outline' colorScheme='red' isFullWidth size='lg' onClick={handleToCancel}>\n                    Rechazar\n                  </Button>\n                </VStack>\n              </Flex>\n            </Box>\n            }\n          </Box>\n\n        </Flex>\n      </ContainerPage>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormLabel, Text, useToast, Image, Wrap, IconButton } from '@chakra-ui/react';\nimport { RiDeleteBin6Line } from 'react-icons/ri'\n\nimport { BusinessService } from '../../services/businessService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface UploadGalleryProps {}\n\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg';\n\nexport const UploadGallery: React.FC<UploadGalleryProps> = ({}) => {\n  // hooks\n\n  // state\n  const [photos, setPhotos] = useState<object[]>([]);\n  const [isUploading, setIsUplaoding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetch = async () => {\n    const response = await new BusinessService().getPhotos();\n    if (response.success) {\n      const files = response.photos.map((item :any) => ({\n        image: item.file,\n        id: item.id,\n      }))\n\n      setPhotos(files);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, [])\n\n  \n\n  const onChangeGallery = async (e :any) => {\n    setIsUplaoding(true);\n    setIsLoading(true);\n    const files : FileList = e.target.files;\n    const newFiles = Array.from(files).map((item:any) => ({\n      image: URL.createObjectURL(item),\n      id: item.id,\n    }))\n    \n    const newPhotos = [...photos, ...newFiles]\n    setPhotos(newPhotos);\n\n    \n    for (let i = 0; i < files.length; i++) {\n      const dataFiles = new FormData();\n      dataFiles.append('file', files[i]);\n      const response = await new BusinessService().uplaodGallery(dataFiles);\n      console.log('Respuesta imagenes', response);\n    }\n    \n    \n\n    // if (response.success) {\n    //   toast({\n    //     title: \"Datos actualizados.\",\n    //     status: \"success\",\n    //     isClosable: true,\n    //     position: 'top'\n    //   });\n    // }\n    setIsUplaoding(false);\n    setIsLoading(false);\n  }\n\n  const handleDeletePhoto = async (id :number, index :number) => {\n    setIsLoading(true);\n    if (id) {\n      const response = await new BusinessService().deletePhoto(id);\n      if (response.success) {\n        setPhotos([\n          ...photos.splice(0, index),\n          ...photos.splice(index + 1),\n        ]);\n      }\n    }\n    setIsLoading(false);\n  }\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n  \n  return (\n    <>\n      <Box w='60%'>\n        <Text fontWeight='bold' mb={4}>Galeria</Text>\n        <Text fontSize='sm' color='subtext' mb={3}>Añade las fotos de tu negocio y local para que los usuarios conozcan tus servicios.</Text>\n        <Button variant='primary-outline' isLoading={isUploading} p={0} mt={4}>\n          <FormLabel w='100%' h='100%' htmlFor='files' m={0} p={2} px={4} >Añadir imagenes +</FormLabel>\n        </Button>\n        <input\n          type=\"file\"\n          id=\"files\" \n          name='files'\n          accept={acceptedFileTypes} \n          multiple\n          onChange={onChangeGallery}\n          style={{ display: 'none' }}\n        />\n      </Box>\n      <Box w='90%'>\n        <Wrap direction='row' flex={1} mt={4}>\n          { photos.map((photo :any, index :number) => (\n            <Box p={2} key={index} pos='relative' role='group'>\n              <Flex pos='absolute' w='200px' alignItems='flex-end' justifyContent='flex-end' p={2} display='none' _groupHover={{ display: 'flex' }}>\n                <IconButton size='sm' aria-label='Delete photo' icon={<RiDeleteBin6Line size={20} />} onClick={() => handleDeletePhoto(photo.id, index)} />\n              </Flex>\n              <Image w='200px' h='133px' objectFit=\"cover\" src={photo.image} />\n            </Box>\n          )) }\n        </Wrap>\n      </Box>\n    </>\n  );\n}","import React, { HtmlHTMLAttributes, useEffect, useState } from 'react'\nimport { Text, Heading, Box, Flex, Image, Divider, Button, VStack, FormLabel, useToast } from '@chakra-ui/react';\n\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { UploadCover } from '../components/gallery/UploadCover';\nimport { UploadGallery } from '../components/gallery/UploadGallery';\n\ninterface SettingsGalleryProps {}\n\nexport const SettingsGallery: React.FC<SettingsGalleryProps> = () => {\n  \n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Fotos</Heading>\n\n        <Flex flexDirection={{ base: 'column', md: 'row' }} w='90%' justify='space-between' mt={4}>\n          <UploadCover />\n        </Flex>\n\n        <Divider my={6} />\n\n        <Flex w='100%' justify='space-between' direction='column'>\n          <UploadGallery />\n        </Flex>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useContext } from 'react'\nimport { AlertDialog, AlertDialogBody, AlertDialogOverlay, AlertDialogContent, AlertDialogHeader, AlertDialogFooter, Button, Text, useToast } from '@chakra-ui/react';\n\nimport { IService } from '../../types/IService';\nimport { BusinessService } from '../../services/businessService';\nimport { UserContext } from '../general/Layout';\n\ninterface DeleteServiceDialogProps {\n  service: IService\n  isOpen: boolean\n  onClose: any\n  realodList: any\n}\n\nexport const DeleteServiceDialog: React.FC<DeleteServiceDialogProps> = ({ isOpen, onClose, service, realodList }) => {\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n\n  const deleteService = async () => {\n    if(service?.id) {\n      const { success } = await new BusinessService().deleteService(service.id, businessContext.id);\n      if (success) {\n        realodList()\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      onClose();\n    }\n    \n  }\n\n  const cancelRef = React.useRef<any>();\n  return (\n    <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Eliminar servicio\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n            <Text mb={2} fontWeight='bold' fontSize='sm'>¿Estás seguro que quieres eliminar este servicio?</Text>\n            <Text fontSize='sm'>No es posible deshacer la operación.</Text>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancelar\n              </Button>\n              <Button colorScheme=\"red\" onClick={deleteService} ml={3}>\n               Si, eliminar\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n  );\n}","import React, { useContext } from 'react'\nimport { Box, Button, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, VStack } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { InputField, TextareaField } from '../general/InputField'\nimport { NewServiceSchema } from '../../validations/newServiceValidation'\nimport { IService, IServiceResponse } from '../../types/IService'\nimport { BusinessService } from '../../services/businessService'\nimport { UserContext } from '../general/Layout'\n\ninterface ServiceFormProps {\n  realodList: any\n  service?: IService\n}\n\nexport const ServiceForm: React.FC<ServiceFormProps> = ({ realodList, service }) => {\n  const businessContext = useContext(UserContext);\n\n  const onSubmit = async (values: IService) => {\n    let response : IServiceResponse;\n    if (service?.id) {\n      response = await new BusinessService().updateService(values, service.id, businessContext.id);\n    } else {\n      response = await new BusinessService().createService(values, businessContext.id);\n    }\n    \n    console.log('respuesta', response);\n    if (response.success) {\n      if (realodList) {\n        realodList();\n      }\n    }\n  }\n\n  const initialValues = !service ? {\n    name: '',\n    description: '',\n    price: '',\n    time: '',\n  } : service;\n\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <VStack spacing={4}>\n              <InputField name='name' label='Nombre' />\n              <TextareaField name='description' label='Descripción (opcional)' />\n              <HStack>\n                <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                <FormControl isInvalid={!!errors.time}>\n                  <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                  <Select name='time' size='lg' placeholder=\"Seleccioné una duración\" value={values.time} onChange={handleChange}>\n                    <option value=\"15\">15 min.</option>\n                    <option value=\"30\">30 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"60\">1:00 hr.</option>\n                    <option value=\"75\">1:15 hr.</option>\n                    <option value=\"90\">1:30 hr.</option>\n                    <option value=\"105\">1:45 hr.</option>\n                    <option value=\"120\">2:00 hr.</option>\n                  </Select>\n                  { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                </FormControl>\n              </HStack>\n              <Button type='submit' isLoading={isSubmitting} variant='primary' alignSelf='end'>Guardar</Button>\n            </VStack>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import React from 'react'\nimport { Modal, ModalOverlay, ModalContent, ModalCloseButton, ModalHeader, ModalBody, ModalFooter, Button, Text, useDisclosure } from '@chakra-ui/react';\nimport { ServiceForm } from './ServiceForm';\nimport { IService } from '../../types/IService';\n\ninterface ModalNewServiceProps {\n  isOpen: boolean\n  onClose: any\n  realodList: any\n  service?: IService\n}\n\nexport const ModalNewService: React.FC<ModalNewServiceProps> = ({ isOpen, onClose, realodList, service }) => {  \n  return (\n    <Modal isOpen={isOpen} onClose={onClose} motionPreset='slideInBottom'>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Nuevo servicio</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <ServiceForm realodList={realodList} service={service} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}","import { Box, Button, Divider, Flex, HStack, IconButton, Menu, MenuButton, MenuItem, MenuList, Text } from '@chakra-ui/react';\nimport React from 'react'\nimport { CgChevronDoubleDown } from 'react-icons/cg';\nimport { CgMoreVerticalAlt } from 'react-icons/cg';\nimport { IService } from '../../types/IService';\n\ninterface ServiceItemProps {\n  service: IService\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceItem: React.FC<ServiceItemProps> = ({ service, handleEditService, handleDeleteService }) => {\n  return (\n    <Flex shadow='md' bg='surface' px={4} py={4} borderBottomWidth={1} borderBottomColor='borders' align='center'>\n      <Box w='50%'>\n        <Text size='xs' fontWeight='bold'>{service.name}</Text>\n        <Text fontSize='xs' display={{ base: 'none', md: 'block' }}>{service.description}</Text>\n      </Box>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>{service.time} min.</Text>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>${service.price}</Text>\n      <Box>\n        <Menu>\n          <MenuButton as={IconButton} icon={<CgMoreVerticalAlt />}/>\n          <MenuList>\n            {/* <MenuItem>Pausar</MenuItem> */}\n            <MenuItem onClick={() => handleEditService(service)} >Editar</MenuItem>\n            <MenuItem onClick={() => handleDeleteService(service)}>Eliminar</MenuItem>\n          </MenuList>\n        </Menu>\n      </Box>\n    </Flex>\n  );\n}","import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { IService } from '../../types/IService';\nimport { ServiceItem } from './ServiceItem';\n\ninterface ServiceListProps {\n  services: IService[]\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceList: React.FC<ServiceListProps> = ({ services, handleEditService, handleDeleteService }) => {\n  return (\n    <Box shadow='sm'>\n      { services.map((item) => (\n        <ServiceItem\n          service={item}\n          handleEditService={handleEditService}\n          handleDeleteService={handleDeleteService}\n          key={item.id}\n        />\n      )) }\n    </Box>\n  );\n}","import { Box, Button, Flex, Spacer, Text, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { DeleteServiceDialog } from '../components/services/DeleteServiceDialog';\nimport { ModalNewService } from '../components/services/ModalNewService';\nimport { ServiceList } from '../components/services/ServiceList';\nimport { BusinessService } from '../services/businessService';\nimport { IService } from '../types/IService';\n\ninterface ServicesProps {\n  \n}\n\nexport const Services: React.FC<ServicesProps> = ({ }) => {\n  // Hooks\n  const { onOpen, isOpen, onClose } = useDisclosure()\n  const businessContext = useContext(UserContext);\n\n  // States\n  const [services, setServices] = useState<IService[]>([])\n  const [service, setService] = useState<IService>()\n  const [isLoading, setIsLoading] = useState(true);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const fetchServices = async  () => {\n    const { success, services } = await new BusinessService().getServices(businessContext.id);\n    if (success && services) {\n      setServices(services);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetchServices();\n  }, []);\n\n  const realodList = () => {\n    fetchServices();\n    onClose();\n  }\n\n  const handleCreateService = () => {\n    setService(undefined)\n    onOpen();\n  }\n\n  const handleEditService = (service: IService) => {\n    setService(service);\n    onOpen()\n    \n  }\n\n  const handleDeleteService = (service: IService) => {\n    setService(service);\n    setIsDeleteModal(true);\n  }\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ModalNewService isOpen={isOpen} onClose={onClose} realodList={realodList} service={service} />\n      { service &&  <DeleteServiceDialog isOpen={isDeleteModal} realodList={realodList} service={service} onClose={() => setIsDeleteModal(!isDeleteModal)} /> }\n      <ContainerPage title='Servicios'>\n        <Flex direction={{ base: 'column', md: 'row' }} align='center'>\n          <Box>\n            <Text fontSize='md' fontWeight='500' mb={8} pr={{ base: 3, md: 20 }}>Añade tantos servicios necesites para que tus clientes conozcan todo lo que ofreces.</Text>\n          </Box>\n          <Spacer />\n          <Box alignSelf={{ base: 'end', md: 'center' }} mb={3}>\n            <Button variant='primary' onClick={handleCreateService}>Nuevo servicio</Button>\n          </Box>\n        </Flex>\n        <Box fontSize={{ base: 'xs', md: 'md' }}>\n          <ServiceList\n            services={services}\n            handleEditService={handleEditService}\n            handleDeleteService={handleDeleteService}\n            />\n        </Box>\n      </ContainerPage>\n    </>\n  );\n}","import HttpClient from './HttpClient';\n\nimport { URL_API } from \"../config/constants\";\nimport { ICustomersResponse } from '../types/ICustomer';\n\nexport class CustomerService extends HttpClient {\n\n  public constructor() {\n    super(URL_API);\n  }\n\n  \n  public getAll = () => this.instance.get<ICustomersResponse>('/customers');\n}","import React from 'react'\nimport { Table, TableCaption, Thead, Tbody, Tr, Th, Td } from '@chakra-ui/react';\n\nimport { ICustomer } from '../../types/ICustomer';\nimport { formatDate } from '../../utils/formatDate';\n\ninterface CustomerListProps {\n customers: ICustomer[]\n}\n\nexport const CustomerList: React.FC<CustomerListProps> = ({ customers }) => {\n  return (\n    <Table variant=\"simple\">\n      <TableCaption>Imperial to metric conversion factors</TableCaption>\n      <Thead>\n        <Tr>\n          <Th>Nombre</Th>\n          <Th>Telefono</Th>\n          <Th>Ultima solicitud</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { customers.map((customer: any, index: number) => (\n          <Tr key={index}>\n            <Td>{customer.firstName} {customer.lastName}</Td>\n            <Td>{customer.phone}</Td>\n            <Td>{formatDate(customer.bookingCreatedAt)}</Td>\n          </Tr>\n        )) }\n      </Tbody>\n    </Table>\n  );\n}","import { Box, Flex, Spacer, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { IService } from '../types/IService';\nimport { CustomerService } from '../services/customerService';\nimport { ICustomer } from '../types/ICustomer';\nimport { CustomerList } from '../components/customers/CustomerList';\n\ninterface CustomersProps {\n  \n}\n\nexport const Customers: React.FC<CustomersProps> = ({ }) => {\n  // Hooks\n\n  // States\n  const [customers, setCustomers] = useState<ICustomer[]>([])\n  const [isLoading, setIsLoading] = useState(true);\n  \n  const fetch = async  () => {\n    const { success, customers } = await new CustomerService().getAll();\n    console.log('Clientes', customers);\n    \n    if (success && customers) {\n      setCustomers(customers);\n    }\n\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetch();\n  }, []);\n\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ContainerPage title={`Clientes (${customers.length})`}>\n        <Flex direction='row' align='center'>\n          {/* <Box>\n            <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Añade tantos servicios necesites para que tus clientes sepan todo lo que ofreces.</Text>\n          </Box> */}\n          <Spacer />\n        </Flex>\n        <Box bg='surface' borderBottomWidth={1} borderColor='borders' py={3}>\n          <CustomerList customers={customers} />\n        </Box>\n      </ContainerPage>\n    </>\n  );\n}","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport * as Cookies from \"js-cookie\";\n\n// Components\nimport { Layout } from './components/general/Layout';\n\n// Pages\nimport { Login } from './pages/Login';\nimport { Home } from './pages/Home';\nimport { Signup } from './pages/Signup';\nimport { Settings } from './pages/Settings';\nimport { NewBusiness } from './pages/NewBusiness';\nimport { SettingsAddress } from './pages/SettingsAddress';\nimport { SettingsLocation } from './pages/SettingsLocation';\nimport { SettingsServices } from './pages/SettingsServices';\nimport { SettingsAdvanced } from './pages/SettingsAdvanced';\nimport { SettingsHour } from './pages/SettingsHour';\nimport { Bookings } from './pages/Bookings';\nimport { Booking } from './pages/Booking';\nimport { SettingsGallery } from './pages/SettingsGallery';\nimport { Services } from './pages/Services';\nimport { Customers } from './pages/Customers';\n\nconst App = () => {\n  const PrivateRoutes = () => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    if (isAuth) {\n      return (\n        <Route exact path='/:path?/:path2?'>\n          <Layout>\n            <Route path='/' exact component={Home} />\n            <Route path='/bookings' exact component={Bookings} />\n            <Route path='/bookings/:id' exact component={Booking} />\n            <Route path='/services' exact component={Services} />\n            <Route path='/settings' exact component={Settings} />\n            <Route path='/customers' exact component={Customers} />\n            {/* <Route path='/settings/services' exact component={SettingsServices} /> */}\n            <Route path='/settings/address' exact component={SettingsAddress} />\n            <Route path='/settings/location' exact component={SettingsLocation} />\n            <Route path='/settings/hours' exact component={SettingsHour} />\n            <Route path='/settings/photos' exact component={SettingsGallery} />\n            <Route path='/settings/advanced' exact component={SettingsAdvanced} />\n            {/* <Route component={NotFound}/> */}\n          </Layout>\n        </Route>\n      )\n    } else {\n      return <Route render={() => <Redirect to={{ pathname: '/signup' }} />} />\n    }\n  }\n\n  const PrivateRoute = ({ component: Component, ...rest }: any) => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    return (\n      <Route\n        {...rest}\n        render={(props) => ( isAuth\n          ? ( <Component {...props} /> ) \n          : ( <Redirect to={{ pathname: '/login' }} /> )) \n        } \n      />\n    )\n  }\n\n  const PublicRoute = ({ component: Component, ...rest }: any) => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    return (\n      <Route\n        {...rest}\n        render={(props) => ( !isAuth\n          ? ( <Component {...props} /> ) \n          : ( <Redirect to={{ pathname: '/' }} /> )) \n        } \n      />\n    )\n  }\n\n  return (\n    <BrowserRouter basename='/manager/'>\n      \n      <Switch>\n        <PublicRoute path='/login' exact component={Login} />\n        <PublicRoute path='/signup' exact component={Signup} />\n        \n        <PrivateRoute path='/new-business/:step?' exact component={NewBusiness} />\n        {/* <Route component={NotFound}/> */}\n\n        <PrivateRoutes />\n      </Switch>\n    </BrowserRouter>   \n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport { extendTheme, theme as chakraTheme } from '@chakra-ui/react'\n\nconst fonts = { ...chakraTheme.fonts, mono: `'Menlo', monospace` }\n\n// const breakpoints = ['40em', '52em', '64em']\n\nconst theme = extendTheme({\n  ...chakraTheme,\n  styles: {\n    global: {\n      body: {\n        bg: \"#F6F7F9\",\n        // color: \"#333333\",\n        color: '#020621',\n      },\n    },\n  },\n  colors: {\n    ...chakraTheme.colors,\n    black: '#16161D',\n    primary: '#25CB67',  // Primary\n    _primary: '#05AF3C', // Priamry variant \n    secondary: '#020621', // Secondanry\n    _secondary: '#161e2c', // Secondanry variant\n    error: '#B00020',\n    background: '#F6F7F9',\n    surface: '#FFFFFF',\n    borders: '#d9e3eb',\n    subtext: '#717171',\n    primaryLight: '#E9F9EF'\n  },\n  fonts,\n  // breakpoints,\n  components: {\n    Link: {\n      variants: {\n        \"primary\": {\n          fontWeight: 'semibold',\n          _hover: {\n            textDecoration: 'none',\n            color: 'primary'\n          },\n        },\n      },\n    },\n    Button: {\n      variants: {\n        \"primary\": {\n          bg: \"primary\",\n          borderColor: \"#05AF3C\",\n          color: '#FFF',\n          _hover: {\n            bg: \"_primary\",\n          },\n        },\n        \"primary-outline\": {\n          bg: \"transparent\",\n          borderColor: \"primary\",\n          borderWidth: 1,\n          color: 'primary',\n          _hover: {\n            bg: \"_primary\",\n            color: '#FFFFFF',\n          },\n        },\n        \"secondary\": {\n          bg: \"secondary\",\n          borderColor: \"#05AF3C\",\n          color: '#FFF',\n          _hover: {\n            bg: \"_secondary\",\n          },\n        },\n      },\n    },\n    Input: {\n      baseStyle: {\n        field: {\n          _focus: {\n            borderColor: '_primary',\n            borderWidth: 1,\n            outline: 0,\n            boxShadow: 'none',\n          },\n          boxShadow: 'none',\n        },\n      },\n      variants: {\n        outline: () => ({\n          field: {\n            _focus: {\n              borderColor: '_primary',\n              borderWidth: 1,\n              outline: 0,\n              boxShadow: 'none',\n            },\n            _hover: {\n              borderColor: '_primary',\n              borderWidth: 1,\n            }\n          },\n        }),\n        \"app\": {\n          field: {\n            _focus: {\n              borderColor: '_primary',\n              borderWidth: 1,\n              outline: 0,\n            },\n          },\n        },\n      },\n    },\n  }\n})\n\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/react';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './config/theme';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <CSSReset />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}