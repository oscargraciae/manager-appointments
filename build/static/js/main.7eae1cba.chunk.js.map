{"version":3,"sources":["services/HttpClient.tsx","config/constants.tsx","services/userService.tsx","assets/logo-reserly-2.png","components/general/Header.tsx","components/general/Sidebar.tsx","components/general/Loading.tsx","utils/formatDate.tsx","context/socketContext.tsx","hooks/useSocket.tsx","utils/generateName.tsx","assets/reserly-logo.png","components/general/Footer.tsx","components/general/Layout.tsx","validations/loginValidation.tsx","components/general/Wrapper.tsx","components/general/InputField.tsx","components/general/AlertError.tsx","pages/Login.tsx","components/general/ContainerPage.tsx","services/bookingService.tsx","utils/propsToParams.tsx","utils/formatHoursDate.tsx","config/calendarText.tsx","components/booking/CalendarItem.tsx","services/businessService.tsx","utils/hoursFilters.tsx","components/booking/BookingCalendar.tsx","pages/Home.tsx","validations/signupValidation.tsx","pages/Signup.tsx","components/general/WrapperSettings.tsx","validations/businessValidation.tsx","components/general/LoadingView.tsx","pages/Settings.tsx","components/gallery/UploadCover.tsx","components/onboarding/BoardingCover.tsx","components/onboarding/BoardingHours.tsx","services/businessAddressService.tsx","components/business/AddressForm.tsx","components/onboarding/BoardingInformation.tsx","validations/newServiceValidation.tsx","components/onboarding/BoardingServices.tsx","components/onboarding/BoardingSuccess.tsx","validations/welcomeValidation.tsx","services/categoryService.tsx","components/onboarding/Welcome.tsx","pages/NewBusiness.tsx","pages/SettingsAddress.tsx","pages/SettingsLocation.tsx","components/services/DeleteServiceDialog.tsx","components/services/ServiceForm.tsx","components/services/ModalNewService.tsx","components/services/ServiceItem.tsx","components/services/ServiceList.tsx","pages/SettingsServices.tsx","pages/SettingsHour.tsx","utils/minutesToHours.tsx","components/booking/BookingHistoryList.tsx","components/booking/BookingListNext.tsx","components/booking/BookingsList.tsx","pages/Bookings.tsx","pages/Booking.tsx","components/gallery/UploadGallery.tsx","pages/SettingsGallery.tsx","App.tsx","reportWebVitals.ts","config/theme.tsx","index.tsx"],"names":["HttpClient","baseURL","instance","_initializeResponseInterceptor","interceptors","response","use","_handleResponse","_handleError","data","error","Promise","reject","this","axios","create","withCredentials","API_DOMAIN","process","URL_API","APP_NAME","TOKEN_MAPBOX","UserService","login","post","signup","logout","get","getMe","Header","user","business","h","bg","align","justify","borderBottomColor","borderBottomWidth","py","px","w","href","src","logo","alt","width","height","fontWeight","color","name","fontSize","ml","isPublic","as","Link","mx","variant","zIndex","borderColor","onClick","shadow","borderWidth","MenuLink","title","icon","direction","Lnk","to","_hover","p","Sidebar","borderRightWidth","borderRightColor","pos","top","left","mt","CgHome","CgCalendar","CgToolbox","Loading","flex","size","moment","locale","formatDate","date","format","formatDateLG","SocketContext","React","createContext","SocketProvider","children","toast","useToast","socket","io","transports","useState","online","useSocket","on","console","log","description","bookingDate","status","position","Provider","value","generateName","replace","toLocaleLowerCase","Footer","spacing","target","my","UserContext","Layout","setUser","setBusiness","isLoading","setIsLoading","history","useHistory","fetchMe","a","success","alert","businessUser","isCompleted","push","useEffect","alignItems","mr","window","location","origin","id","leftIcon","e","url","copy","duration","canvas","document","getElementById","pngUrl","toDataURL","downloadLink","createElement","download","body","appendChild","click","removeChild","style","display","loginValidation","values","errors","email","test","password","Wrapper","maxW","InputField","label","inputSize","props","useField","field","touched","isInvalid","htmlFor","TextareaField","PasswordInputField","showPassword","setShowPassword","type","aria-label","AiFillEyeInvisible","AiFillEye","AlertError","textAlign","Login","setError","onSubmit","userService","message","initialValues","firstName","lastName","validate","isSubmitting","isFullWidth","alignSelf","orientation","mb","ContainerPage","BookingService","getAll","params","queryString","stringify","skipNull","skipEmptyString","strict","propsToParams","update","put","formatHoursDate","hours","map","openFrom","ISO_8601","openTill","messages","allDay","previous","next","today","month","week","day","agenda","time","event","noEventsInRange","showMore","total","CalendarItem","customer","isTruncated","BusinessService","businessId","createHours","getHours","uplaodCover","headers","uplaodGallery","deletePhoto","delete","getPhotos","createService","updateService","serviceId","deleteService","getServices","getMax","sort","b","localeCompare","localizer","momentLocalizer","BookingCalendar","businessContext","useContext","bookings","setBookings","min","max","rangeTime","setRangeTime","hours1","hours2","fetchHours","statuses","bookingEvents","start","toDate","end","add","totalTime","fetch","pb","events","startAccessor","endAccessor","timeslots","step","eventPropGetter","_start","_end","_isSelected","backgroundColor","bookingStatusId","borderRadius","opacity","borderLeftWidth","borderLeftColor","flexDirection","slotPropGetter","slotGroupPropGetter","minHeight","dayPropGetter","components","defaultView","views","onSelectEvent","Home","signupValidation","Signup","pr","WrapperSettings","businessValidation","Number","businessCategoryId","LoadingView","Settings","fetchBusiness","isClosable","phone","handleChange","rows","onChange","UploadCover","onUpload","cover","setCover","isUploading","setIsUplaoding","FormData","append","files","m","accept","multiple","objectFit","loading","BoardingCover","BoardingHours","setHours","getBusiness","i","j","arr","formDay","setFieldValue","dayOfWeek","isOpen","days","key","colorScheme","initialValue","BusinessAddressService","AddressForm","handleSaveAddress","address","setAddresss","geoAddress","setGeoAddress","lng","lat","latLng","setLatLng","setMap","mrk","setMrk","state","setState","city","setCity","mapContainer","useRef","fetchAddress","addressMap","jumpTo","center","zoom","marker","mapboxgl","Marker","draggable","setLngLat","addTo","onDragEnd","accessToken","Map","container","current","handleSelect","geocodeByAddress","results","fillInAddress","getLatLng","place","addressComponent","address_components","length","types","locality","long_name","administrativeArea","lngLat","getLngLat","street","area","aling","geoaddress","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","placeholder","background","isIndeterminate","suggestion","ref","el","justifyContent","disabled","BoardingInformation","setStep","NewServiceSchema","Yup","shape","required","price","BoardingServices","validationSchema","BoardingSuccess","publishBusiness","welcomeValidationSchema","CategoryService","Welcome","categories","setCategories","fetchCategories","item","NewBusiness","useParams","option","undefined","handleSteps","buildOnboarding","SettingsAddress","setAddress","zipcode","SettingsLocation","DeleteServiceDialog","onClose","service","realodList","cancelRef","leastDestructiveRef","ServiceForm","ModalNewService","motionPreset","ServiceItem","handleEditService","handleDeleteService","IconButton","ServiceList","services","SettingsServices","useDisclosure","onOpen","setServices","setService","isDeleteModal","setIsDeleteModal","fetchServices","SettingsHour","myHours","setMyHours","newHours","minutesToHour","minutes","hour","Math","trunc","BookingsListHistory","startDate","Date","toISOString","fetchBookings","totalPrice","BookingsListNext","dateEnd","textDecor","cursor","BookingsList","bookingId","setBookingId","handleToAcept","index","slice","handleToCancel","isActive","Bookings","tab","setTab","Booking","booking","setBooking","fetchBooking","statusId","colorStatus","createdAt","bookingService","nameService","priceService","timeService","UploadGallery","photos","setPhotos","image","file","onChangeGallery","newFiles","Array","from","URL","createObjectURL","newPhotos","dataFiles","handleDeletePhoto","splice","photo","role","_groupHover","SettingsGallery","App","PrivateRoutes","Cookies","exact","path","component","render","pathname","PrivateRoute","Component","rest","isAuth","PublicRoute","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fonts","chakraTheme","mono","theme","extendTheme","styles","global","colors","black","primary","_primary","secondary","_secondary","surface","borders","subtext","primaryLight","variants","textDecoration","Button","Input","baseStyle","_focus","outline","boxShadow","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7eae1cba.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\n\ndeclare module 'axios' {\n  interface AxiosResponse<T = any> extends Promise<T> {}\n}\n\nexport default abstract class HttpClient {\n  protected readonly instance: AxiosInstance;\n\n  public constructor(baseURL: string) {\n    // /axios.defaults.withCredentials = true;\n    this.instance = axios.create({\n      baseURL,\n      withCredentials: true,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  private _handleResponse = ({ data }: AxiosResponse) => data;\n\n  protected _handleError = (error: any) => Promise.reject(error);\n}","// export const API_DOMAIN = 'http://localhost:8001';\nexport const API_DOMAIN = process.env.REACT_APP_API_URL || 'https://api.reserly.mx';\nexport const URL_API = `${API_DOMAIN}/api/manager_v1`;\nexport const APP_NAME = 'Reserly';\nexport const TOKEN_MAPBOX = process.env.REACT_APP_TOKEN_MAPBOX || '';\n","import HttpClient from './HttpClient';\nimport { User, UserResponse } from \"../types/User\";\nimport { URL_API } from \"../config/constants\";\n\nexport class UserService extends HttpClient {\n\n  public constructor() {\n    super(URL_API);\n  }\n\n  public login = (data: User) => this.instance.post<UserResponse>('/users/auth', data);\n  public signup = (data: User) => this.instance.post<UserResponse>('/users', data);\n\n  public logout = () => this.instance.get<UserResponse>('/users/auth/logout');\n  public getMe = () => this.instance.get<UserResponse>('/users');\n}","export default __webpack_public_path__ + \"static/media/logo-reserly-2.fdfaa62e.png\";","import { Flex, MenuButton, Spacer, Text, Menu, MenuList, MenuItem, Link } from '@chakra-ui/react';\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { APP_NAME } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { User } from '../../types/User';\n\nimport logo from '../../assets/logo-reserly-2.png';\n\ninterface HeaderProps {\n  user: User | null\n  business: IBusiness\n  logout: any\n}\n\nexport const Header: React.FC<HeaderProps> = ({ user, business, logout }) => {\n\n  if (!user) {\n    return (\n      <Flex bg='surface' align='center' justify='center' shadow='md' borderBottomColor='#DDD' borderWidth={1} py={4}>\n        <Text>{APP_NAME}</Text>\n        <Spacer />\n        <Text>Iniciar sesion</Text>\n      </Flex>\n    )\n  }\n  \n  return (\n    <Flex h='66px' bg='surface' align='center' justify='center' borderBottomColor='borders' borderBottomWidth={1} py={4} px={8}>\n      <Flex align='center' w='190px'>\n        <Link href=\"/\">\n          <img src={logo} alt=\"uorder\" width=\"120\" height=\"40\" />\n        </Link>\n      </Flex>\n      <Text fontWeight='semibold' color='subtext'>{business.name}</Text>\n      <Text fontWeight='bold' fontSize='xs' ml={4} color={business.isPublic ? 'primary' : 'yellow.300'}>\n        { business.isPublic ? 'Publicado' : 'No publicado' }\n        \n      </Text>\n      <Spacer />\n      <Menu>\n        {/* <Link href='/' size=\"sm\" variant=\"primary\" mx={3}>Modo cliente</Link> */}\n        <MenuButton as={Link} mx={3} variant='primary'>\n          Mi Cuenta\n        </MenuButton>\n        <MenuList zIndex={3} borderColor=\"#DDD\">\n          <MenuItem onClick={logout}>Cerrar sesión</MenuItem>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}","import React from 'react'\nimport { Box, Flex, Image, Link, Text } from '@chakra-ui/react';\nimport {\n  CgCalendar,\n  CgHome,\n  CgUserList,\n  CgToolbox\n} from 'react-icons/cg';\nimport { Link as Lnk } from 'react-router-dom';\n\nimport ReserlyLogo from './../../assets/Reserly.png';\nimport { IBusiness } from '../../types/Business';\n\ninterface SidebarProps {\n  logout: any\n  business: IBusiness\n}\n\nconst MenuLink: React.FC<{ title: string, icon: any, href: string }> = ({title, icon, href}) => (\n  <Flex direction='row'>  \n    <Link as={Lnk} to={href} w='100%' _hover={{ bg: 'primary', color: '#FFFFFF' }} fontWeight='bold'>\n      <Flex direction='row' align='center' p={3} >\n        {icon()} <Text fontSize='sm' ml={5}>{title}</Text>\n      </Flex>\n    </Link>\n  </Flex>\n)\n\nexport const Sidebar: React.FC<SidebarProps> = ({ logout }) => {\n  return (\n    <Box w='210px' h='100vh' bg='surface' shadow='sm' borderRightWidth={1} borderRightColor='borders' pos='sticky' top='0' left='0'>\n      {/* <Flex py={3} textAlign='center' justify='center' align='center'>\n        <Image src={ReserlyLogo} alt='Reserly' h='64px' />\n      </Flex> */}\n\n      <Box mt={3}>\n        <MenuLink title='Inicio' icon={CgHome} href='/' />\n        {/* <MenuLink title='Calendario' icon={CgCalendar} href='/calendar' /> */}\n        <MenuLink title='Reservaciones' icon={CgCalendar} href='/bookings' />\n        {/* <MenuLink title='Clientes' icon={CgUserList} href='/customers' /> */}\n        <MenuLink title='Configuración' icon={CgToolbox} href='/settings' />\n      </Box>\n    </Box>\n  );\n}","import React from 'react';\nimport { Flex, Spinner, Text } from '@chakra-ui/react';\n\nimport { APP_NAME } from '../../config/constants';\n\ninterface LoadingProps {}\n\nexport const Loading: React.FC<LoadingProps> = () => {\n  return (\n    <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n      <Spinner size='xl' color='primary' />\n      <Text mt={4} fontWeight='bold' fontSize='2xl'>Cargando {APP_NAME}</Text>\n    </Flex>\n  );\n}","import moment from 'moment';\nmoment.locale('es-mx');\n\nexport const formatDate = (date :Date, format? :string) => {\n  if (!format) {\n    return moment(date).format('DD/MM/YYYY HH:mm');\n  }\n\n  return moment(date).format(format);\n}\n\nexport const formatDateLG = (date :Date) => {\n  return moment(date).format('dddd DD [de] MMMM [de] YYYY HH:mm');\n}","import { position, useToast } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSocket } from '../hooks/useSocket';\nimport { formatDate } from '../utils/formatDate';\nimport { formatBookingDate } from '../utils/formatHoursDate';\n\nexport const SocketContext = React.createContext<any>(null);\n\nexport const SocketProvider: React.FC = ({ children }) => {\n  // hooks\n  const toast = useToast();\n  const { socket, online } = useSocket();\n  \n  socket.on('new-booking', (data :any) => {\n    console.log('Socket data', data);\n    \n    toast({\n      title: 'Nueva reservación',\n      description: `${formatDate(data.bookingDate)}`,\n      status: 'success',\n      position: 'top',\n    })\n  });\n  \n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      { children }\n    </SocketContext.Provider>\n  );\n}","import { useEffect, useMemo, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { API_DOMAIN, URL_API } from '../config/constants';\n\n\nexport const useSocket = () => {\n    \n    const socket : Socket = io(API_DOMAIN, { transports: ['websocket'] });\n    const [ online, setOnline ] = useState(false);\n    \n    // socket.on('saludo', (data :any) => {\n    //   console.log('Datos de saludo', data);\n    // })\n\n    // useEffect(() => {\n    //     setOnline( socket.connected );\n    // }, [socket])\n\n    // useEffect(() => {\n    //     socket.on('connect', () => {\n    //       console.log('Socket conectado');\n          \n    //     });\n    // }, [ socket ])\n\n    // useEffect(() => {\n    //     socket.on('disconnect', () => setOnline( false ));\n    // }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}","export const generateName = (name: string) => {\n  return name.replace(/ /g, '-').toLocaleLowerCase();\n}","export default __webpack_public_path__ + \"static/media/reserly-logo.d5cba136.png\";","import { Box, Divider, Flex, HStack, Link, Text } from '@chakra-ui/react';\nimport React from 'react'\n\nimport logo from '../../assets/reserly-logo.png';\n\nexport const Footer: React.FC = () => {\n  return (\n    <Flex bg='secondary' py={10} px={4} mt={24}>\n      <Flex direction='column' w='1180px' mx='auto'>\n        <Box>\n          <Link href=\"/\">\n            <img src={logo} alt=\"uorder\" width=\"120\" height=\"90\" />\n          </Link>\n          <HStack spacing={5} py={4}>\n            <Link target='_blank' fontWeight='500' color='#FFFFFF' fontSize='sm' href={`${process.env.REACT_APP_WEB_URL}/terminos-y-condiciones`}>\n              Terminos y condiciones\n            </Link>\n            <Link target='_blank' fontWeight='500' color='#FFFFFF' fontSize='sm' href={`${process.env.REACT_APP_WEB_URL}/aviso-de-privacidad`}>\n              Politica de privacidad\n            </Link>\n            <Text fontWeight='500' color='#FFFFFF' fontSize='sm'>\n              Contacto: hola@reserly.mx\n            </Text>\n          </HStack>\n        </Box>\n        <Box>\n          <Link target='_blank' fontWeight='500' color='#FFFFFF' fontSize='sm' href='https://www.facebook.com/reserlymx'>\n            {/* <FaFacebook size={28} /> */}\n            Facebook de Reserly\n          </Link>\n        </Box>\n        <Divider my={6} borderColor='#FFFFFF' />\n        <Text fontWeight='500' color='#FFFFFF' fontSize='sm'>\n          © Reserly. Todos los derechos reservados\n        </Text>\n      </Flex>\n    </Flex>\n  );\n}","/* eslint-disable react-hooks/exhaustive-deps */\n// Libraries\nimport React, { useEffect, useState, useRef } from 'react'\nimport { Box, Button, Flex, Text, useToast } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport copy from 'copy-to-clipboard';\nimport { ImQrcode, ImCopy } from 'react-icons/im'\n\nimport QRCode from 'qrcode.react';\n\nimport { UserService } from '../../services/userService';\nimport { User } from '../../types/User';\nimport { Header } from './Header';\nimport { Sidebar } from './Sidebar';\nimport { Loading } from './Loading';\nimport { IBusiness } from '../../types/Business';\nimport { SocketProvider } from '../../context/socketContext';\nimport { generateName } from '../../utils/generateName';\nimport { Footer } from './Footer';\n\ninterface LayoutProps {}\n\nexport const UserContext = React.createContext<any>(null);\n\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\n  // hooks\n  const toast = useToast();\n\n  // state\n  const [user, setUser] = useState<User | null>(null);\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n\n  const fetchMe = async () => {\n    const { success, user } = await new UserService().getMe();\n    if (!success || !user) {\n      alert('Usuario no encotrado');\n      return ;\n      // Aqui se debe de enviar al login, cerrar sesion o mostrar alguna pantalla de error\n    };\n\n    console.log('Datos de usuario', user);\n    \n    if (!user.businessUser || !user.businessUser.business?.isCompleted) {\n      // alert('Este usuario no tiene tienda, favor de registrar una.')\n      history.push('/new-business');\n      return;\n    }\n\n    if (user.businessUser.business) {\n      setBusiness(user.businessUser.business)\n    }\n\n    setUser(user);\n    setIsLoading(false);\n  }\n\n  const copyUrl = (e :any) => {\n    if (business && business.name) {\n      const url : string = `${window.location.origin}/${generateName(business.name)}/${business.id}`;\n      copy(url);\n      toast({\n        title: 'URL copiada',\n        duration: 1000,\n        position: 'top',\n        status: 'success',\n      })\n    }\n  }\n\n  const downloadQR = () => {\n    const canvas :any = document.getElementById(\"businessqr\");\n    if (canvas && business && business.name) {\n      const pngUrl = canvas\n        .toDataURL(\"image/png\")\n        .replace(\"image/png\", \"image/octet-stream\");\n      let downloadLink = document.createElement(\"a\");\n      downloadLink.href = pngUrl;\n      downloadLink.download = `${generateName(business.name)}-qr`;\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    }\n  }\n\n  const logout = async () => {\n    await new UserService().logout();\n    history.push('/login');\n  }\n\n  useEffect(() => {\n    fetchMe();\n  }, []);\n\n  if(isLoading || !business || !business.name) {\n    return <Loading />\n  }\n\n  // if (!user) {\n  //   <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n  //     <Text mt={4} fontWeight='bold' fontSize='2xl'>Usuario no disponible</Text>\n  //   </Flex>\n  // }\n\n  \n  return (\n    <UserContext.Provider value={business}>\n      <SocketProvider>\n        <Box height='100vh' bg='background'>\n          <Header user={user} business={business} logout={logout} />\n          <Flex direction='row'>\n            <Sidebar logout={logout} business={business} />\n            <Box w='100%'>\n              <Flex w='100%' bg='surface' px={6} py={2} alignItems='center'>\n                <Text fontSize='sm' fontWeight='bold' mr={2}>Compartir</Text>\n                <Text fontSize='sm' >{`${window.location.origin}/b/${generateName(business.name)}/${business.id}`}</Text>\n                <Button size='xs' ml={3} leftIcon={<ImCopy />} onClick={copyUrl}>\n                  Copiar URL\n                </Button>\n                <Button leftIcon={<ImQrcode />} size='xs' ml={3} onClick={downloadQR}>\n                  Descargar QR\n                </Button>\n              </Flex>\n              <Box>\n                <QRCode value={`${window.location.origin}/${generateName(business.name)}/${business.id}`} id='businessqr' style={{ display: 'none' }} />\n                {children}\n              </Box>\n            </Box>\n          </Flex>\n          <Footer />\n        </Box>\n      </SocketProvider>\n    </UserContext.Provider>\n  );\n}","import { User } from \"../types/User\";\n\nexport const loginValidation = (values: User) => {\n  const errors : any = {};\n  if (!values.email) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n  ) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  }\n\n  if (!values.password) {\n    errors.password = 'Ingresa una contraseña'\n  }\n\n  return errors;\n}","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nexport type WrapperVariant = \"small\" | \"regular\";\n\ninterface WrapperProps {\n  variant?: WrapperVariant;\n}\n\nexport const Wrapper: React.FC<WrapperProps> = ({\n  children,\n  variant = \"regular\",\n}) => {\n  return (\n    <Box\n      mt={8}\n      mx=\"auto\"\n      maxW={variant === \"regular\" ? \"800px\" : \"400px\"}\n      w=\"100%\"\n    >\n      {children}\n    </Box>\n  );\n};","import React, { useState, InputHTMLAttributes } from \"react\";\nimport { useField } from \"formik\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  InputProps,\n  FormErrorMessage,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n  Textarea,\n  TextareaProps,\n} from \"@chakra-ui/react\";\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\n\n// type InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n//   label: string;\n//   name: string;\n//   errors?: string\n// };\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & InputProps & TextareaProps & {\n  label: string;\n  name: string;\n  errors?: string\n  inputSize?: string\n};\n\n\n// '' => false\n// 'error message stuff' => true\n\nexport const InputField: React.FC<InputFieldProps> = ({ label, errors, inputSize = 'md', ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel fontWeight='bold' fontSize='sm' htmlFor={field.name}>{label}</FormLabel>\n      <Input size={inputSize} {...field} {...props} id={field.name} />\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport const TextareaField: React.FC<InputFieldProps> = ({ label, errors, inputSize = 'md', ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel fontWeight='bold' fontSize='sm' htmlFor={field.name}>{label}</FormLabel>\n      <Textarea size={inputSize} {...field} {...props} id={field.name} />\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport const PasswordInputField: React.FC<InputFieldProps> = ({ label, ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel htmlFor=\"description\" fontSize='sm' fontWeight='bold'>Contraseña</FormLabel>\n      <InputGroup>\n        <Input\n          type={showPassword ? \"text\" : \"password\"}\n          {...field}\n          {...props} id={field.name}\n        />\n        <InputRightElement>\n          <IconButton aria-label=\"Search database\" variant='ghost' icon={!showPassword ? AiFillEye({}) : AiFillEyeInvisible({})} onClick={() => setShowPassword(!showPassword)} />\n        </InputRightElement>\n      </InputGroup>\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n","import React from 'react'\nimport { Alert, AlertDescription, AlertTitle } from '@chakra-ui/react';\n\ninterface AlertErrorProps {\n  title?: string\n  description?: string\n}\n\nexport const AlertError: React.FC<AlertErrorProps> = ({ title, description }) => {\n  return (\n    <Alert status='error' >\n      { title && <AlertTitle>{title}</AlertTitle> }\n      { description && <AlertDescription fontSize='sm' textAlign='left'>{description}</AlertDescription> }\n    </Alert>\n  );\n}","// Libraries\nimport React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\n// Local libraries\nimport { loginValidation } from '../validations/loginValidation';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\n\n// Components\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { AlertError } from '../components/general/AlertError';\n\nexport const Login: React.FC = () => {\n  const [error, setError] = useState('');\n\n  const history = useHistory();\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.login(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n    } else {\n      history.push('/');\n    }\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Inicia sesión</Heading>\n        <Box mt={6}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={loginValidation}>\n            {({ isSubmitting, errors, touched }) => (\n              <Form>\n                <VStack spacing={4}>\n                  {/* <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' /> */}\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button mt={40} isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Iniciar sesión</Button>\n                  <Button alignSelf='flex-end' textAlign='right' size='sm' variant='link'>¿Olvidaste tu contraseña?</Button>\n                  { error && <AlertError description={error} /> }\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿No tienes cuenta?{\" \"}\n                    <Lnk to='/signup'>\n                      <Link color='primary' fontWeight='bold'>Registrate</Link>\n                    </Lnk>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}","import { Box, Flex, Heading, Text } from '@chakra-ui/react';\nimport React from 'react'\n\ninterface ContainerPageProps {\n  title?: string\n}\n\nexport const ContainerPage: React.FC<ContainerPageProps> = ({ title, children }) => {\n  return (\n    <Box p={6} py={4} w='100%' maxW='1920px'>\n      { title && <Heading as='h3' size='lg'>{title}</Heading> }\n      <Box mt={3}>\n        {children}\n      </Box>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { IBooking } from \"../types/IBooking\";\nimport { propsToParams } from \"../utils/propsToParams\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BookingService extends HttpClient {\n  constructor() {\n    super(URL_API);\n  }\n\n  getAll = (params? :any) => this.instance.get(`/bookings?${propsToParams(params)}`);\n  get = (id :number) => this.instance.get(`/bookings/${id}`);\n  update = (id :number, data :IBooking) => this.instance.put(`/bookings/${id}`, data);\n}","import queryString from 'query-string';\n\nexport const propsToParams = (params :any) => {\n  return queryString.stringify(params, { skipNull: true, skipEmptyString: true, strict: true });\n}","import moment from 'moment-timezone';\nimport { Event } from 'react-big-calendar';\nimport { IBooking } from '../types/IBooking';\n\nimport { IHour } from \"../types/IHour\";\n\n// let dateAndTime = moment(component.props.data.value, [moment.ISO_8601, 'HH:mm']);\nexport const formatHoursDate = (hours: IHour[]) : IHour[]=> {\n    return hours.map((e) => ({\n      ...e,\n      // openFrom: moment( '12:00' ).format('HH:MM'),\n      openFrom: moment(e.openFrom, [moment.ISO_8601, 'HH:mm']).format('H:mm'),\n      openTill: moment(e.openTill, [moment.ISO_8601, 'HH:mm']).format('H:mm'),\n    }));\n}\n\nexport const formatBookingDate = (hours: IBooking[]) : Event[]=> {\n  return hours.map((e) => ({\n    ...e,\n    title: e.customer ? e.customer.firstName : '',\n    // openFrom: moment( '12:00' ).format('HH:MM'),\n    start: moment(`${e.bookingDate}`).toDate(),\n    end: moment(`${e.bookingDate}`).add(e.totalTime, 'minute').toDate(),\n  }));\n}","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total :any) => `+ Ver más (${total})`\n};","import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { User } from '../../types/User';\n\ninterface CalendarItemProps {\n  event: any\n}\n\nexport const CalendarItem: React.FC<CalendarItemProps> = ({ event }) => {\n  const { customer } = event;\n  return (\n    <Box>\n      <Text fontWeight='semibold' isTruncated>{customer.firstName} {customer.lastName}</Text>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { IBusiness, IBusinessResponse } from \"../types/Business\";\nimport { IHoursResponse } from \"../types/IHour\";\nimport { IService, IServiceResponse, IServicesResponse } from \"../types/IService\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BusinessService extends HttpClient {\n  constructor() {\n    super(URL_API)\n  }\n\n  create = (data: IBusiness) => this.instance.post<IBusinessResponse>('/businesses', data);\n  update = (data: IBusiness, businessId: number) => this.instance.put<IBusinessResponse>(`/businesses/${businessId}`, data);\n  get = () => this.instance.get('/businesses');\n\n  createHours = (data: any, businessId: number) => this.instance.post(`/businesses/${businessId}/hours`, data);\n  getHours = (businessId: number) => this.instance.get<IHoursResponse>(`/businesses/${businessId}/hours`);\n\n  uplaodCover = (data :any) => this.instance.post('/businesses/upload/cover', data, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  });\n\n  uplaodGallery = (data :any) => this.instance.post('/businesses/upload/photos', data, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  });\n\n  deletePhoto = (id :number) => this.instance.delete(`/businesses/upload/photos/${id}`);\n  getPhotos = () => this.instance.get('/businesses/upload/photos');\n\n  // API DE SERVICIOS\n  createService = (data: IService, businessId: number) => this.instance.post<IServiceResponse>(`/businesses/${businessId}/services`, data);\n  updateService = (data: IService, serviceId: number, businessId: number) => this.instance.put<IServiceResponse>(`/businesses/${businessId}/services/${serviceId}`, data);\n  deleteService = (serviceId: number, businessId: number) => this.instance.delete<IServiceResponse>(`/businesses/${businessId}/services/${serviceId}`);\n  getServices = (businessId:number) => this.instance.get<IServicesResponse>(`/businesses/${businessId}/services`);\n}","import { IHour } from \"../types/IHour\";\n\nexport const getMin = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openFrom && b.openFrom) {\n      return a.openFrom.localeCompare(b.openFrom);\n    }\n  });\n\n  console.log('Orden get min', hours);\n  \n  return hours[0].openFrom;\n}\n\nexport const getMax = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openTill && b.openTill) {\n      return b.openTill.localeCompare(a.openTill);\n    }\n  });\n\n  console.log('Orden get max', hours);\n\n  return hours[0].openTill;\n}","import React, { HTMLAttributes, useContext, useEffect, useState } from 'react'\nimport { Box, Flex, HStack, Text } from '@chakra-ui/react';\nimport { Calendar, Event, EventPropGetter, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\n\nimport { IBooking } from '../../types/IBooking';\nimport { BookingService } from '../../services/bookingService';\nimport { formatBookingDate, formatHoursDate } from '../../utils/formatHoursDate';\nimport { messages } from '../../config/calendarText';\nimport { CalendarItem } from './CalendarItem';\n\nimport './BookingCalendar.css';\nimport { BusinessService } from '../../services/businessService';\nimport { UserContext } from '../general/Layout';\nimport { getMin, getMax } from '../../utils/hoursFilters';\nimport { useHistory } from 'react-router-dom';\n\nconst localizer = momentLocalizer(moment)\n\ninterface BookingCalendarProps {}\n\nexport const BookingCalendar: React.FC<BookingCalendarProps> = ({}) => {\n  // hooks\n  const history = useHistory();\n\n  // context\n  const businessContext = useContext(UserContext);\n  \n  // state\n  const [bookings, setBookings] = useState<Event[]>([]);\n  const [rangeTime, setRangeTime] = useState({ min: '00:00', max: '23:30' });\n\n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const hours1 = response.hours;\n        const hours2 = [...response.hours];\n        const min = getMin(hours1);\n        const max = getMax(hours2);\n\n        if (min && max) {\n          setRangeTime({ min, max });\n        }\n        \n        const newHours = formatHoursDate(response.hours);\n        // console.log('Horas', newHours);\n      }\n    }\n\n    fetchHours();\n  }, []);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const response = await new BookingService().getAll({ statuses: [1, 2] });\n      if (response.success) {\n        const bookingEvents = formatBookingDate(response.bookings);\n        setBookings(bookingEvents);\n      }\n    }\n    fetch();\n  }, []);\n\n  const onSelectEvent = (event :any) => {\n    console.log('Click en el evento', event);\n    if (event.id) {\n      history.push(`/bookings/${event.id}`);\n    }\n  }\n\n  const eventPropGetter = (event: any, _start: any, _end: any, _isSelected: any) : React.HTMLAttributes<HTMLDivElement> => {\n    \n    const style : React.CSSProperties = {\n      backgroundColor: event.bookingStatusId === 2 ? '#BDEFD1' : '#FEFCBF',\n      borderRadius: 0,\n      opacity: 1,\n      borderWidth: 0,\n      fontSize: '12px',\n      color: event.bookingStatusId === 2 ? '#16793D' : '#D69E2E',\n      borderLeftWidth: 5,\n      borderLeftColor: event.bookingStatusId === 2 ? '#05AF3C' : '#ECC94B',\n      flexDirection: 'column',\n      fontWeight: 'bold',\n    }\n    return {\n      style\n    }\n  }\n\n  const slotPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {}\n    return {\n      style\n    }\n  }\n\n  const slotGroupPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {\n      minHeight: '80px',\n    }\n    return {\n      style\n    }\n  }\n\n  const dayPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {\n      backgroundColor: '#FFF',\n    }\n    return {\n      style\n    }\n  }\n  \n  return (\n    <Box>\n      <Flex pb={2}>\n        <Flex mb={1}>\n          <HStack mr={3}>\n            <Box bg='primary' w={4} h={4} />\n            <Text fontSize='sm'>Aceptado</Text>\n          </HStack>\n          <HStack>\n            <Box bg='yellow.300' w={4} h={4} />\n            <Text fontSize='sm'>Pendiente</Text>\n          </HStack>\n        </Flex>\n      </Flex>\n      <Calendar\n        localizer={localizer}\n        events={bookings}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        timeslots={2}\n        step={15}\n        messages={messages}\n        eventPropGetter={eventPropGetter}\n        slotPropGetter={slotPropGetter}\n        slotGroupPropGetter={slotGroupPropGetter}\n        dayPropGetter={dayPropGetter}\n        components={{\n          event: CalendarItem\n        }}\n        defaultView='week'\n        views={{ week: true, day: true, agenda: true }}\n        min={moment(rangeTime.min, [moment.ISO_8601, 'HH:mm']).toDate()}\n        max={moment(rangeTime.max, [moment.ISO_8601, 'HH:mm']).toDate()}\n        onSelectEvent={onSelectEvent}\n      />\n    </Box>\n  );\n}","import React from 'react'\nimport { Box } from '@chakra-ui/react';\n\n// local components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { BookingCalendar } from '../components/booking/BookingCalendar';\n\n\ninterface HomeProps {}\n\nexport const Home: React.FC<HomeProps> = ({}) => {\n  return (\n    <ContainerPage>\n      <Box>\n        <BookingCalendar />\n      </Box>\n    </ContainerPage>\n  );\n}","import { User } from \"../types/User\";\n\nexport const signupValidation = (values: User) => {\n  const errors : any = {};\n  if (!values.email) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n  ) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  }\n\n  if (!values.password) {\n    errors.password = 'Ingresa una contraseña'\n  }\n\n  if (!values.firstName) {\n    errors.firstName = 'Ingresa un nombre'\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Ingresa un apellido'\n  }\n  \n\n  return errors;\n}","import React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\nimport { AlertError } from '../components/general/AlertError';\nimport { signupValidation } from '../validations/signupValidation';\n\ninterface SignupProps {}\n\nexport const Signup: React.FC<SignupProps> = ({}) => {\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.signup(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n      return;\n    }\n\n    history.push('/');\n\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Bienvenido</Heading>\n        <Text mt={2} fontWeight='bold'>Registrate gratis.</Text>\n        <Box mt={4}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={signupValidation}>\n            {({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={4}>\n                  <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' />\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Registrate</Button>\n\n                  { error && <AlertError description={error} /> }\n\n                  <Text as=\"em\" fontSize='sm'>Al registrarte, confirmas que aceptas los <Link href='#' color=\"teal.500\">Términos y condiciones</Link> y la <Link href='#' color=\"teal.500\">Política de privacidad</Link>.</Text>\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿Ya tienes tu cuenta?{\" \"}\n                    <Link as={Lnk} to='/login' color='primary' fontWeight='bold'>\n                      Iniciar sesion\n                    </Link>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}","import React from 'react'\nimport { Box, Flex, HStack, Link, Text } from '@chakra-ui/react';\nimport { Link as Lnk } from 'react-router-dom';\n\ninterface WrapperSettingsProps {\n\n}\n\nconst MenuLink: React.FC<{ title: string, href: string }> = ({title, href}) => (\n  <Link as={Lnk} to={href} fontWeight='bold' pr={4}>\n    <Flex direction='row'>\n      <Text fontSize='md'>{title}</Text>\n    </Flex>\n  </Link>\n)\n\nexport const WrapperSettings: React.FC<WrapperSettingsProps> = ({ children }) => {\n  return (\n    <Box>\n      <HStack mt={4} borderBottomWidth={1} borderColor='borders' py={3}>\n        <MenuLink title='Servicios' href='/settings/services' />\n        <MenuLink title='Datos básicos' href='/settings' />\n        <MenuLink title='Ubicación' href='/settings/location' />\n        {/* <MenuLink title='Dirección' href='/settings/address' /> */}\n        <MenuLink title='Horario' href='/settings/hours' />\n        <MenuLink title='Fotos' href='/settings/photos' />\n        {/* <MenuLink title='Usuario' href='/settings' /> */}\n      </HStack>\n\n      <Box my={4} bg='surface' borderColor='borders' borderWidth={1} p={6} borderRadius={3}>\n        {children}\n      </Box>\n\n    </Box>\n  );\n}","import { IBusiness } from \"../types/Business\";\n\nexport const businessValidation = (values: IBusiness) => {\n  const errors : any = {};\n  \n  if (!values.name) {\n    errors.name = 'Ingresa el nombre de tu negocio'\n  }\n\n  if (Number(values.businessCategoryId) === 0) {\n    errors.businessCategoryId = 'Ingresa una categoría'\n  }\n\n  return errors;\n}","import { Flex, Spinner } from '@chakra-ui/react';\nimport React from 'react'\n\ninterface LoadingViewProps {}\n\nexport const LoadingView: React.FC<LoadingViewProps> = () => {\n  return (\n    <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n      <Spinner size='md' color='primary' />\n    </Flex>\n  );\n}","// libraries\nimport React, { useEffect, useState } from 'react'\nimport { Box, VStack, Select, Button, FormControl, FormLabel, Heading, FormErrorMessage, useToast } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { InputField, TextareaField } from '../components/general/InputField';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { IBusiness } from '../types/Business';\nimport { businessValidation } from '../validations/businessValidation';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\n// local components\n\ninterface SettingsProps {}\n\nexport const Settings: React.FC<SettingsProps> = () => {\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const toast = useToast();\n\n  useEffect(() => {\n    const fetchBusiness = async () => {\n      const { business } = await new BusinessService().get();\n      console.log('Business', business);\n      \n      setBusiness(business);\n    }\n    fetchBusiness();\n  }, []);\n\n  const onSubmit = async (values: IBusiness) => {\n    if (business && business.id) {\n      const response =await new BusinessService().update(values, business.id)\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      console.log('respuesta', response);\n    }\n  }\n\n  if(!business) {\n    return <LoadingView />\n  }\n\n  const initialValues : IBusiness = {\n    name: business.name ? business.name : '',\n    description: business.description ? business.description : '',\n    businessCategoryId: business.businessCategoryId ? business.businessCategoryId : 0,\n    phone: business.phone ? business.phone : ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box w='70%'>\n          <Heading as='h2' size='md' mb={8}>Datos básicos</Heading>\n          <Formik initialValues={initialValues} onSubmit={onSubmit} validate={businessValidation}>\n            { (({ isSubmitting, values, handleChange, errors }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                  <InputField inputSize='lg' name='name' label='Nombre del negocio' />\n                  <TextareaField inputSize='lg' name='description' label='Descripción del negocio (opcional)' rows={4} />\n                  <FormControl isInvalid={!!errors.businessCategoryId}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Categoría</FormLabel>\n                    <Select name='businessCategoryId' size='lg' value={values.businessCategoryId} onChange={handleChange}>\n                      <option value='0' >Selecciona una categoría</option>\n                      <option value='1' >Salon</option>\n                      <option value='2' >Spa</option>\n                      <option value='3' >Barberia</option>\n                      <option value='4' >Tatuajes</option>\n                      <option value='5' >Maquillaje</option>\n                      <option value='6' >Podologia</option>\n                      <option value='7' >Servicios para el hogar</option>\n                      <option value='8' >Servicios para el mascotas</option>\n                    </Select>\n                    { errors.businessCategoryId && <FormErrorMessage>{errors.businessCategoryId}</FormErrorMessage> }\n                  </FormControl>\n                  <InputField inputSize='lg' name='phone' label='Teléfono de contacto' />\n                  {/* <HStack spacing={3} w='100%'>\n                    <InputField inputSize='lg' name='category' label='Horario de apertura' />\n                    <InputField inputSize='lg' name='category' label='Horario de clausura' />\n                  </HStack> */}\n                  <Button variant='primary' size='lg' type='submit' isLoading={isSubmitting}>\n                    Guardar\n                  </Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormLabel, Text, useToast, Image } from '@chakra-ui/react';\n\nimport { BusinessService } from '../../services/businessService';\n\ninterface UploadCoverProps {\n  onUpload?: any\n}\n\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg';\n\nexport const UploadCover: React.FC<UploadCoverProps> = ({ onUpload }) => {\n  // hooks\n  const toast = useToast();\n\n  // state\n  const [cover, setCover] = useState('');\n  const [isUploading, setIsUplaoding] = useState(false);\n\n  const fetch = async () => {\n    const response = await new BusinessService().get();\n    setCover(response.business.cover);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, [])\n\n  const onChange = async (e :any) => {\n    setIsUplaoding(true);\n\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    await new BusinessService().uplaodCover(data);\n\n    fetch();   \n\n    toast({\n      title: \"Datos actualizados.\",\n      status: \"success\",\n      isClosable: true,\n      position: 'top'\n    });\n\n    setIsUplaoding(false);\n\n    if (onUpload) {\n      onUpload();\n    }\n\n  }\n\n  return (\n    <>\n      <Box w='60%' pr={10}>\n        <Text fontWeight='bold' mb={4}>Foto de portada</Text>\n        <Text fontSize='sm' color='subtext' mb={3}>Tu foto de portada es la primera impresión que tienen tus clientes de tu negocio.</Text>\n        <Text fontSize='sm' color='subtext'>\n          {/* Directrices importantes: Tamańo recomendado 930 x 620 píxeles; formato .jpg, .jpeg, o .png. */}\n          Directrices importantes: Tamańo recomendado 780 x 520 píxeles; formato .jpg, .jpeg, o .png.\n        </Text>\n        <Button variant='primary-outline' isLoading={isUploading} p={0} mt={4}>\n          <FormLabel w='100%' h='100%' htmlFor='file' m={0} p={2} px={4} >Cambiar foto</FormLabel>\n        </Button>\n\n        <input\n          type=\"file\"\n          id=\"file\" \n          name='file'\n          accept={acceptedFileTypes} \n          multiple={false} \n          onChange={onChange}\n          style={{ display: 'none' }}\n        />\n      </Box>\n      <Flex w='40%' justify='center' alignItems='center'>\n        <Image src={cover} w='300px' h='200px' objectFit=\"cover\" loading='eager' />\n      </Flex>\n    </>\n  );\n}","import { Box, Button, Flex, Heading, Text } from '@chakra-ui/react';\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { UploadCover } from '../gallery/UploadCover';\n\ninterface BoardingCoverProps {\n\n}\n\nexport const BoardingCover: React.FC<BoardingCoverProps> = ({}) => {\n  const history = useHistory();\n\n  const handleOnUpload = () => {\n    history.push('/new-business/6');\n  }\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>Foto de portada</Heading>\n      <Text fontSize='xl' fontWeight='500'>Esta es la primera imagen que verán las personas, puede ser el logotipo de tu negocio, imagen de tu local o una imagen de un servicio.</Text>\n      <Flex w='100%' justify='space-between' mt={10}>\n        <UploadCover onUpload={handleOnUpload} />\n      </Flex>\n\n      <Button mt={10} variant='outline' onClick={() => history.push('/new-business/6')}>\n        Saltar\n      </Button>\n    </Box>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormControl, Heading, HStack, IconButton, Select, Text, Tooltip, VStack } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, Formik } from 'formik';\nimport { BusinessService } from '../../services/businessService';\nimport { FaDoorClosed, FaDoorOpen } from 'react-icons/fa';\nimport { IBusiness } from '../../types/Business';\nimport { Loading } from '../general/Loading';\n\ninterface BoardingHoursProps {}\n\nexport const BoardingHours: React.FC<BoardingHoursProps> = () => {\n  const history = useHistory()\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n\n  const [hours, setHours] = useState<string[]>([]);\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n    getHours();\n  }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<2; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 30*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const onSubmit = async (values: any) => {\n    if (business) {\n      const response = await new BusinessService().createHours(values, business.id);\n      if (response.success) {\n        history.push('/new-business/5');\n      }\n    }\n  }\n\n  const formDay = (values: any, handleChange: any, setFieldValue: any, label: string, dayOfWeek: number) => {\n    const isOpen : boolean = values.days[dayOfWeek].isOpen;\n    const { openFrom, openTill } = values.days[dayOfWeek];\n    return (\n      <HStack w='100%' direction='row' justify='center' align='center'>\n        <Text w='250px' textAlign='left' fontWeight='semibold'>{label}</Text>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openFrom`} size='lg' value={openFrom} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openTill`} size='lg' value={openTill} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <Tooltip label={isOpen ? 'Cerrar este día' : 'Abrir este día'} fontSize=\"md\">\n          <IconButton\n            colorScheme=\"teal\"\n            aria-label=\"Call Segun\"\n            size=\"lg\"\n            icon={isOpen ? <FaDoorOpen /> : <FaDoorClosed />}\n            onClick={() => setFieldValue(`days[${dayOfWeek}].isOpen`, !isOpen )}\n          />\n        </Tooltip>\n      </HStack>\n    )\n  }\n\n  if (!business) {\n    return <Loading />\n  }\n\n  const initialValue = {\n    days: [\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 0 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 1 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 2 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 3 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 4 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 5 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 6 },\n    ]\n  }\n\n  return (\n    <Box textAlign='center'>\n    <Heading as='h2'>¿Cual es el horario de tu negocio?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Ingresa el horario de tu negocio ya que será la hora disponible para hacer reservaciones.</Text>\n      \n      <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex align='center' w='100%' justify='center' mt={10}>\n              <VStack w='80%' spacing={3}>\n                { formDay(values, handleChange, setFieldValue, 'Lunes', 0) }\n                { formDay(values, handleChange, setFieldValue, 'Martes', 1) }\n                { formDay(values, handleChange, setFieldValue, 'Miercoles', 2) }\n                { formDay(values, handleChange, setFieldValue, 'Jueves', 3) }\n                { formDay(values, handleChange, setFieldValue, 'Viernes', 4) }\n                { formDay(values, handleChange, setFieldValue, 'Sabado', 5) }\n                { formDay(values, handleChange, setFieldValue, 'Domingo', 6) }\n                <Button size='lg' alignSelf='flex-end' variant='primary' type='submit' isLoading={isSubmitting}>Siguiente</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { BusinessAddress, BusinessAddressResponse } from \"../types/BusinessAddress\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BusinessAddressService extends HttpClient {\n  constructor() {\n    super(URL_API)\n  }\n\n  get = (businessId: number) => this.instance.get<BusinessAddressResponse>(`/businesses/${businessId}/addresses`);\n  create = (data: BusinessAddress, businessId: number) => this.instance.post(`/businesses/${businessId}/addresses`, data);\n  update = (data: BusinessAddress, businessId: number, id: number) => this.instance.put<BusinessAddressResponse>(`/businesses/${businessId}/addresses/${id}`, data);\n}","import React, { useState, useEffect, useRef } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport { BusinessAddressService } from '../../services/businessAddressService';\nimport { TOKEN_MAPBOX } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { BusinessAddress, BusinessAddressResponse } from '../../types/BusinessAddress';\n\ninterface AddressFormProps {\n  handleSaveAddress: any\n  business: Required<IBusiness>\n}\n\nexport const AddressForm: React.FC<AddressFormProps> = ({ handleSaveAddress, business }) => {\n  \n  const [address, setAddresss] = useState<BusinessAddress | null>(null);\n  \n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [latLng, setLatLng] = useState({ lng: -74.5, lat: 40 });\n  const [map, setMap] = useState<mapboxgl.Map | null>(null);\n  const [mrk, setMrk] = useState<mapboxgl.Marker | null>(null);\n  const [state, setState] = useState('');\n  const [city, setCity] = useState('');\n\n  const mapContainer = useRef<any>(null);\n  \n  const fetchAddress = async (map: Map) => {\n    const { success, address } = await new BusinessAddressService().get(business.id);\n    if (success && address) {\n      setAddresss(address);\n      setGeoAddress(address.addressMap);\n      setLatLng({ lat: address.lat, lng: address.lng });\n\n      if (map) {\n        map.jumpTo({ center: [address.lng, address.lat], zoom: 16 });\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([address.lng, address.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        setMrk(marker);\n      }\n    }\n  }\n\n  useEffect(() => {\n    mapboxgl.accessToken = TOKEN_MAPBOX;\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n      center: [-100.3161126, 25.6866142], // starting position [lng, lat]\n      zoom: 16 // starting zoom\n    });\n    setMap(map);\n\n    \n    map.on('load', function() {\n      fetchAddress(map);\n    });\n\n  }, [])\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (business.id) {\n      if (address?.id) {\n        response = await new BusinessAddressService().update({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress, state, city }, business.id, address.id);\n      } else {\n        response = await new BusinessAddressService().create({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress, state, city }, business.id);\n      }\n      if (response.success && response.address) {\n        setAddresss(response.address);\n      }\n      \n      if (handleSaveAddress) {\n        handleSaveAddress();\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    fillInAddress(results[0]);\n    console.log('Resultados de ubicacion', results);\n    \n    const latLng = await getLatLng(results[0]);\n    setLatLng(latLng);\n    if (map) {\n      \n      // map.jumpTo({ 'center': [latLng.lng, latLng.lat], 'zoom': 14 });\n      map.jumpTo({ center: [latLng.lng, latLng.lat], zoom: 16 });\n\n      if (!mrk) {\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([latLng.lng, latLng.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        setMrk(marker);\n      } else {\n        mrk.setLngLat([latLng.lng, latLng.lat]);\n      }\n      \n    }\n  }\n\n  const fillInAddress = (place: google.maps.GeocoderResult) => {\n    const addressComponent : google.maps.GeocoderAddressComponent[] = place.address_components;\n    for (var i = 0; i < addressComponent.length; i++) {\n      if (addressComponent[i].types[0] === 'locality') {\n        const locality : any = addressComponent[i];\n        console.log('locality', locality.long_name);\n        setCity(locality.long_name);\n      }\n      if (addressComponent[i].types[0] === 'administrative_area_level_1') {\n        const administrativeArea : any = addressComponent[i];\n        console.log('administrative_area_level_1', administrativeArea.long_name);\n        setState(administrativeArea.long_name);\n      }\n    }\n  }\n\n\n  const onDragEnd = (marker: Marker) => {\n    var lngLat = marker.getLngLat();\n    setLatLng(lngLat);\n    console.log('NUEVAS CORDENADAS', lngLat);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        { (({ isSubmitting }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10}>\n              <VStack w='100%' align='flex-start'>\n                <Text fontWeight='bold'>Ingresa la dirección completa de tu negocio</Text>\n                <PlacesAutocomplete\n                  value={geoAddress}\n                  onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                  onSelect={handleSelect}\n                  searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                >\n                  { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                      <Box w='100%'>\n                        <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                        <Box shadow='md' background='#FFFFFF'>\n                          { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                          {suggestions.map(suggestion => {\n                            return (\n                              <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                <Text fontWeight='bold'>{suggestion.description}</Text>\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      </Box>\n                  )) }\n                </PlacesAutocomplete>\n              </VStack>\n            </Flex>\n            <Box>\n              <Box w='100%' h='200px' ref={el => (mapContainer.current = el)}></Box>\n              {/* <Text fontWeight='bold' fontSize='xs' mt={2}>Mueve el marcador si es necesario pero asegurate que este en el lugar correcto.</Text> */}\n              <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n              \n            </Box>\n\n            <Flex mt={4} align='flex-end' justifyContent='flex-end'>\n              <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Siguiente</Button>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n      \n      {/* <Box w='100%' h='200px' id='map'></Box> */}\n    </Box>\n  );\n}","import { Box, Heading, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\nimport { AddressForm } from '../business/AddressForm';\nimport { Loading } from '../general/Loading';\n\ninterface BoardingInformationProps {\n  setStep: any\n}\n\nexport const BoardingInformation: React.FC<BoardingInformationProps> = ({ setStep }) => {\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  const history = useHistory();\n  \n  const handleSaveAddress = () => {\n    history.push('/new-business/3');\n  }\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  if (!business) {\n    return <Loading />\n  }\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>¿Cual es la dirección de tu negocio?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Ingresa la información lo más precisa posible para que tus clientes puedan llegar.</Text>\n      { business && <AddressForm handleSaveAddress={handleSaveAddress} business={business} /> }\n    </Box>\n  );\n}","import * as Yup from 'yup';\n\n export const NewServiceSchema = Yup.object().shape({\n\n   name: Yup.string()\n    .min(5, 'Demasíado corto, minimo 5 letras.')\n    .max(200, 'Maximo 200 letras.')\n    .required('Ingresa un nombre'),\n\n  price:Yup.number()\n    .min(1)\n    .required('Ingresa el precio'),\n\n  time: Yup.string()\n  .required('Ingresa el tiempo'),\n });","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, Text, VStack } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, Formik } from 'formik';\nimport { InputField } from '../general/InputField';\nimport { BusinessService } from '../../services/businessService';\nimport { IService } from '../../types/IService';\nimport { IBusiness } from '../../types/Business';\nimport { NewServiceSchema } from '../../validations/newServiceValidation';\n\ninterface BoardingServicesProps {}\n\nexport const BoardingServices: React.FC<BoardingServicesProps> = ({}) => {\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n\n  const history = useHistory()\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  const onSubmit = async (values: IService) => {\n    if (business) {\n      const { success } = await new BusinessService().createService(values, business.id)\n      if (success) {\n        history.push('/new-business/4');\n      }\n    }\n  }\n\n  const initialValue = {\n    name: '',\n    description: '',\n    time: '',\n    price: '',\n  }\n\n  return (\n    <Box textAlign='center'>\n    <Heading as='h2'>¿Qué servicios realizas?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Añade un servicio para empezar a utilizar Boombook</Text>\n      \n      <Formik initialValues={initialValue} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <Flex align='center' w='100%' justify='center' mt={10}>\n              <VStack w='70%' spacing={3}>\n                <InputField inputSize='lg' name='name' label='Nombre del servicio' />\n                <InputField inputSize='lg' name='description' label='Descripción' />\n                <HStack w='100%' direction='row' justify='space-between'>\n                  <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                  {/* <InputNumberField inputSize='lg' name='Precio' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  {/* <InputField inputSize='lg' name='time' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  <FormControl isInvalid={!!errors.time}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                    <Select name='time' size='lg' placeholder=\"Seleccione la duración\" value={values.time} onChange={handleChange}>\n                      <option value=\"15\">15 min.</option>\n                      <option value=\"30\">30 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"60\">1:00 hr.</option>\n                      <option value=\"75\">1:15 hr.</option>\n                      <option value=\"90\">1:30 hr.</option>\n                      <option value=\"105\">1:45 hr.</option>\n                      <option value=\"120\">2:00 hr.</option>\n                      <option value=\"135\">2:15 hr.</option>\n                      <option value=\"140\">2:30 hr.</option>\n                    </Select>\n                    <FormErrorMessage>{errors.time}</FormErrorMessage>\n                  </FormControl>\n                </HStack>\n                <Button size='lg' alignSelf='flex-end' variant='primary' type='submit' isLoading={isSubmitting}>Siguiente</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Button, Flex, Heading, Text } from '@chakra-ui/react'\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport { APP_NAME } from '../../config/constants';\nimport { useHistory } from 'react-router-dom';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\n\ninterface BoardingSuccessProps {\n  \n}\n\nexport const BoardingSuccess: React.FC<BoardingSuccessProps> = ({ }) => {\n  const history = useHistory();\n\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  \n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  const publishBusiness = async () => {\n    const data : IBusiness = { isCompleted: true, isPublic: true };\n    if (business) {\n      const response = await new BusinessService().update(data, business.id);\n      if (response.success) {\n        history.push('/');\n      }\n    }\n  }\n\n  return (\n    <Flex align='center' direction='column' textAlign='center'>\n      <AiFillCheckCircle size={90} color='#25CB67' />\n      <Heading my={6} as='h2'>Completado</Heading>\n      <Text fontSize='xl' fontWeight='500' mb={3}>\n        Gracias por registrate en {APP_NAME}, toda la información registrada anteriormente puede ser modificada desde la página de configuración.\n      </Text>\n      <Text fontSize='md' fontWeight='500'>\n        Te sugerimos ir al módulo de configuración para que añadas más servicios y publiques tu galería de fotos.\n      </Text>\n      \n\n      <Button variant='primary' size='lg' mt={6} px={16} onClick={publishBusiness}>\n        Aceptar y publicar\n      </Button>\n    </Flex>\n  );\n}","import * as Yup from 'yup';\n\n export const welcomeValidationSchema = Yup.object().shape({\n\n   name: Yup.string()\n    .min(5, 'Demasíado corto, minimo 5 letras.')\n    .max(200, 'Maximo 200 letras.')\n    .required('Ingresa un nombre'),\n\n    businessCategoryId: Yup.number()\n    .min(1, 'Selecciona una categoría')\n    .required('Selecciona una categoría'),\n });","import HttpClient from './HttpClient';\n\nimport { API_DOMAIN, URL_API } from \"../config/constants\";\n\nexport class CategoryService extends HttpClient {\n\n  public constructor() {\n    super(`${API_DOMAIN}/api/v1`);\n  }\n\n  public getAll = () => this.instance.get('/categories');\n}","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\nimport { Box, Button, Flex, FormControl, FormErrorMessage, FormLabel, Heading, Select, Text, VStack } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\nimport { User } from '../../types/User';\nimport { InputField, TextareaField } from '../general/InputField';\nimport { welcomeValidationSchema } from '../../validations/welcomeValidation';\nimport { CategoryService } from '../../services/categoryService';\n\ninterface WelcomeProps {\n  user: User\n  business?: IBusiness | null\n}\n\nexport const Welcome: React.FC<WelcomeProps> = ({ user, business }) => {\n  const history = useHistory();\n\n  // state\n  const [categories, setCategories] = useState([]);\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      const response = await new CategoryService().getAll();\n      if (response.success) {\n        setCategories(response.categories);\n      }\n    }\n    fetchCategories();\n  }, []);\n\n  const onSubmit = async (values: IBusiness) => {\n    if (business && business.id) {\n      await new BusinessService().update(values, business.id);\n    } else {\n      await new BusinessService().create(values);\n    }\n    history.push('/new-business/2');\n  }\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>Estamos contentos de que estes aquí {user.firstName}.</Heading>\n      <Text fontSize='xl' fontWeight='500'>Estas a un paso de comenzar a organizar tus clientes.</Text>\n\n      <Formik initialValues={{ name: business ? business.name : '', businessCategoryId: business ? business.businessCategoryId : 0 }} onSubmit={onSubmit} validationSchema={welcomeValidationSchema}>\n        { ({ values, isSubmitting, handleChange, errors }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10} w='100%' direction='column' justifyContent='center' align='center'>\n              <Box w='70%'>\n                <VStack spacing={5} align='flex-start'>\n                  <InputField inputSize='lg' name='name' label='¿Cual es el nombre de tu negocio?'/>\n                  <FormControl isInvalid={!!errors.businessCategoryId}>\n                      <FormLabel fontWeight='bold' fontSize='sm'>Categoría</FormLabel>\n                      <Select name='businessCategoryId' size='lg' value={values.businessCategoryId} onChange={handleChange}>\n                        <option value='0' >Selecciona una categoría</option>\n                        { categories.map((item: any) => (\n                          <option value={item.id} key={item.id}>{item.name}</option>\n                        )) }\n                      </Select>\n                      { errors.businessCategoryId && <FormErrorMessage>{errors.businessCategoryId}</FormErrorMessage> }\n                    </FormControl>\n                    <TextareaField inputSize='lg' name='description' label='Descripción del negocio (opcional)' rows={3} />\n                    <InputField inputSize='lg' name='phone' label='Teléfono del negocio' />\n                  <Box textAlign='right' alignSelf='flex-end'>\n                    <Button\n                      variant='primary'\n                      size='lg'\n                      type='submit'\n                      isLoading={isSubmitting}\n                    >\n                      Siguiente\n                    </Button>\n                  </Box>\n                </VStack>\n              </Box>\n            </Flex>\n          </Form>\n        ) }\n      </Formik>\n    </Box>\n  );\n}","import { Box, Heading, Progress } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { Header } from '../components/general/Header';\nimport { Loading } from '../components/general/Loading';\nimport { BoardingCover } from '../components/onboarding/BoardingCover';\nimport { BoardingHours } from '../components/onboarding/BoardingHours';\nimport { BoardingInformation } from '../components/onboarding/BoardingInformation';\nimport { BoardingServices } from '../components/onboarding/BoardingServices';\nimport { BoardingSuccess } from '../components/onboarding/BoardingSuccess';\nimport { Welcome } from '../components/onboarding/Welcome';\nimport { BusinessService } from '../services/businessService';\n\nimport { UserService } from '../services/userService';\nimport { IBusiness } from '../types/Business';\nimport { User } from '../types/User';\n\ninterface NewBusinessParams {\n  step?: string | undefined\n}\n\nexport const NewBusiness: React.FC = () => {\n  const params = useParams<NewBusinessParams>();\n  const option = params.step !== undefined ? Number(params.step) : 1;\n\n  const [step, setStep] = useState<number>(option || 1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  \n\n  useEffect(() => {\n    const option = params.step !== undefined ? Number(params.step) : 1;\n    setStep(option)\n  }, [option, params.step]);\n\n  useEffect(() => {\n    const getMe = async () => {\n      const { success, user } = await new UserService().getMe();\n      if (!user || !success) {\n        return;\n      }\n      setUser(user);\n    };\n  \n    const getBusiness = async () => {\n      const { success, business }  = await new BusinessService().get();\n      if (success) {\n        setBusiness(business);\n      }\n    }\n    getMe();\n    getBusiness();\n    setIsLoading(false);\n    \n  }, []);\n\n  const handleSteps = (step: number) => {\n    setStep(step)\n  }\n\n  const logout = async () => {\n    await new UserService().logout();\n    window.location.href = '/';\n  }\n\n  if (!user || isLoading) {\n    return <Loading />\n  }\n\n  const buildOnboarding = () => {\n    switch (step) {\n      case 1:\n        return <Welcome business={business} user={user} />\n      case 2:\n        return <BoardingInformation setStep={handleSteps} />\n      case 3:\n        return <BoardingServices />\n      case 4:\n        return <BoardingHours />\n      case 5:\n        return <BoardingCover />\n      case 6:\n        return <BoardingSuccess />\n      default:\n        return <Heading>No se pudo cargar la pagina</Heading>\n    }\n  }\n\n  return (\n    <Box bg='#FFFFFF' height='100vh'>\n      { business && <Header user={user} business={business} logout={logout} /> }\n      \n      <Box mx='auto' w='800px' py={4}>\n        <Box>\n          <Progress value={16.66 * step} colorScheme='green' />\n        </Box>\n        <Box mt={6}>\n          { (user && !isLoading) && buildOnboarding() }\n        </Box>\n      </Box>\n    </Box>\n  );\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { Box, Button, Heading, HStack, useToast, VStack , Text} from '@chakra-ui/react';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddress } from '../types/BusinessAddress';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { InputField } from '../components/general/InputField';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\ninterface SettingsAddressProps {}\n\nexport const SettingsAddress: React.FC<SettingsAddressProps> = () => {\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n  \n  useEffect(() => {\n    const fetchAddress = async () => {\n      const { address } = await new BusinessAddressService().get(businessContext.id);\n      if (address) {\n        setAddress(address);\n      }\n      console.log('Direccion', address);\n    }\n\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async (values: any) => {\n    if (businessContext && businessContext.id && address?.id) {\n      console.log('Id de negocio', businessContext.id, values);\n      const { success } = await new BusinessAddressService().update(values, businessContext.id, address.id);\n      if (success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  if (!address) {\n    return <LoadingView />\n  }\n\n  const initialValues = {\n    street: address.street ? address.street : '',\n    area: address.area ? address.area : '',\n    city: address.city ? address.city : '',\n    state: address.state ? address.state : '',\n    zipcode: address.zipcode ? address.zipcode : '',\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Dirección</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Esta información es utilizada  si la ubicación por coordenadas no es precisa, así que es recomendable ingresarla.</Text>\n        <Box w='80%'>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            { (({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='street' label='Calle y número' />\n                  <InputField inputSize='lg' name='area' label='Colonia' />\n                </HStack>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='city' label='Municipio' />\n                  <InputField inputSize='lg' name='state' label='Estado' />\n                </HStack>\n                <HStack spacing={4} w='49%'>\n                  <InputField inputSize='lg' name='zipcode' label='Codigo postal' />\n                </HStack>\n                <Button variant='primary' type='submit' size='lg' isLoading={isSubmitting}>Guardar</Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useContext, useRef, useState, useEffect } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button, useToast, Heading } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { BusinessAddress, BusinessAddressResponse } from '../types/BusinessAddress';\nimport { TOKEN_MAPBOX } from '../config/constants';\n\ninterface SettingsLocationProps {\n\n}\n\nexport const SettingsLocation: React.FC<SettingsLocationProps> = () => {\n  // Contexto\n  const businessContext = useContext(UserContext);\n  \n  // Hooks\n  const toast = useToast();\n  const mapContainer = useRef<any>(null);\n\n  // States\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [latLng, setLatLng] = useState({ lng: -74.5, lat: 40 });\n  const [map, setMap] = useState<mapboxgl.Map | null>(null);\n  const [mrk, setMrk] = useState<mapboxgl.Marker | null>(null);\n  \n  const fetchAddress = async (map: Map) => {\n    const { success, address } = await new BusinessAddressService().get(businessContext.id);\n    if (success && address) {\n      setAddress(address);\n      setGeoAddress(address.addressMap);\n      setLatLng({ lat: address.lat, lng: address.lng });\n\n      if (map) {\n        map.jumpTo({ center: [address.lng, address.lat], zoom: 16 });\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([address.lng, address.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        // const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([latLng.lng, latLng.lat]).addTo(map);\n        setMrk(marker);\n      }\n    }\n  }\n\n  useEffect(() => {\n    mapboxgl.accessToken = TOKEN_MAPBOX;\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n      center: [-100.3161126, 25.6866142], // starting position [lng, lat]\n      zoom: 16 // starting zoom\n    });\n    setMap(map);\n\n    \n    map.on('load', function() {\n      fetchAddress(map);\n    });\n\n  }, [])\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (businessContext.id && address?.id) {\n      response = await new BusinessAddressService().update({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress }, businessContext.id, address.id);\n      if (response.success) {\n        // setAddress(response.address);\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    const latLng = await getLatLng(results[0]);\n    setLatLng(latLng);\n    if (map) {\n      \n      // map.jumpTo({ 'center': [latLng.lng, latLng.lat], 'zoom': 14 });\n      map.jumpTo({ center: [latLng.lng, latLng.lat], zoom: 16 });\n      if (mrk) {\n        mrk.setLngLat([latLng.lng, latLng.lat]);\n      }\n      // console.log('viejo marcado');\n      \n      // marker.on('dragend', () => onDragEnd(marker));\n    }\n  }\n\n  const onDragEnd = (marker: Marker) => {\n    var lngLat = marker.getLngLat();\n    setLatLng(lngLat);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Ubicación</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Ingresa correctamente esta\u0010 información, es la que visualizaran las personas para poder llegar a tu negocio</Text>\n\n        <Box>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n          { (({ isSubmitting }) => (\n            <Form>\n              <Flex aling='center' justify='center' mb={2}>\n                <VStack w='100%' align='flex-start'>\n                  <PlacesAutocomplete\n                    value={geoAddress}\n                    onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                    onSelect={handleSelect}\n                    searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                  >\n                    { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <Box w='100%'>\n                          <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                          <Box shadow='md' background='#FFFFFF'>\n                            { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                            {suggestions.map(suggestion => {\n                              return (\n                                <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                  <Text fontWeight='bold'>{suggestion.description}</Text>\n                                </Box>\n                              );\n                            })}\n                          </Box>\n                        </Box>\n                    )) }\n                  </PlacesAutocomplete>\n                </VStack>\n              </Flex>\n              <Box>\n                <Box w='100%' h='300px' ref={el => (mapContainer.current = el)}></Box>\n                <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n                \n              </Box>\n\n              <Flex mt={4} align='flex-start' justifyContent='flex-start'>\n                <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Guardar</Button>\n              </Flex>\n            </Form>\n          )) }\n        </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useContext } from 'react'\nimport { AlertDialog, AlertDialogBody, AlertDialogOverlay, AlertDialogContent, AlertDialogHeader, AlertDialogFooter, Button, Text, useToast } from '@chakra-ui/react';\n\nimport { IService } from '../../types/IService';\nimport { BusinessService } from '../../services/businessService';\nimport { UserContext } from '../general/Layout';\n\ninterface DeleteServiceDialogProps {\n  service: IService\n  isOpen: boolean\n  onClose: any\n  realodList: any\n}\n\nexport const DeleteServiceDialog: React.FC<DeleteServiceDialogProps> = ({ isOpen, onClose, service, realodList }) => {\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n\n  const deleteService = async () => {\n    if(service?.id) {\n      const { success } = await new BusinessService().deleteService(service.id, businessContext.id);\n      if (success) {\n        realodList()\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      onClose();\n    }\n    \n  }\n\n  const cancelRef = React.useRef<any>();\n  return (\n    <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Eliminar servicio\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n            <Text mb={2} fontWeight='bold' fontSize='sm'>¿Estas seguro que quieres eliminar este servicio?</Text>\n            <Text fontSize='sm'>No es posible deshacer la operación.</Text>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancelar\n              </Button>\n              <Button colorScheme=\"red\" onClick={deleteService} ml={3}>\n               Si, eliminar\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n  );\n}","import React, { useContext } from 'react'\nimport { Box, Button, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, VStack } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { InputField, TextareaField } from '../general/InputField'\nimport { NewServiceSchema } from '../../validations/newServiceValidation'\nimport { IService, IServiceResponse } from '../../types/IService'\nimport { BusinessService } from '../../services/businessService'\nimport { UserContext } from '../general/Layout'\n\ninterface ServiceFormProps {\n  realodList: any\n  service?: IService\n}\n\nexport const ServiceForm: React.FC<ServiceFormProps> = ({ realodList, service }) => {\n  const businessContext = useContext(UserContext);\n\n  const onSubmit = async (values: IService) => {\n    let response : IServiceResponse;\n    if (service?.id) {\n      response = await new BusinessService().updateService(values, service.id, businessContext.id);\n    } else {\n      response = await new BusinessService().createService(values, businessContext.id);\n    }\n    \n    console.log('respuesta', response);\n    if (response.success) {\n      if (realodList) {\n        realodList();\n      }\n    }\n  }\n\n  const initialValues = !service ? {\n    name: '',\n    description: '',\n    price: '',\n    time: '',\n  } : service;\n\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <VStack spacing={4}>\n              <InputField name='name' label='Nombre' />\n              <TextareaField name='description' label='Descripción (opcional)' />\n              <HStack>\n                <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                <FormControl isInvalid={!!errors.time}>\n                  <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                  <Select name='time' size='lg' placeholder=\"Seleccioné una duración\" value={values.time} onChange={handleChange}>\n                    <option value=\"15\">15 min.</option>\n                    <option value=\"30\">30 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"60\">1:00 hr.</option>\n                    <option value=\"75\">1:15 hr.</option>\n                    <option value=\"90\">1:30 hr.</option>\n                    <option value=\"105\">1:45 hr.</option>\n                    <option value=\"120\">2:00 hr.</option>\n                  </Select>\n                  { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                </FormControl>\n              </HStack>\n              <Button type='submit' isLoading={isSubmitting} variant='primary' alignSelf='end'>Guardar</Button>\n            </VStack>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import React from 'react'\nimport { Modal, ModalOverlay, ModalContent, ModalCloseButton, ModalHeader, ModalBody, ModalFooter, Button, Text, useDisclosure } from '@chakra-ui/react';\nimport { ServiceForm } from './ServiceForm';\nimport { IService } from '../../types/IService';\n\ninterface ModalNewServiceProps {\n  isOpen: boolean\n  onClose: any\n  realodList: any\n  service?: IService\n}\n\nexport const ModalNewService: React.FC<ModalNewServiceProps> = ({ isOpen, onClose, realodList, service }) => {  \n  return (\n    <Modal isOpen={isOpen} onClose={onClose} motionPreset='slideInBottom'>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Nuevo servicio</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <ServiceForm realodList={realodList} service={service} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}","import { Box, Button, Divider, Flex, HStack, IconButton, Menu, MenuButton, MenuItem, MenuList, Text } from '@chakra-ui/react';\nimport React from 'react'\nimport { CgChevronDoubleDown } from 'react-icons/cg';\nimport { CgMoreVerticalAlt } from 'react-icons/cg';\nimport { IService } from '../../types/IService';\n\ninterface ServiceItemProps {\n  service: IService\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceItem: React.FC<ServiceItemProps> = ({ service, handleEditService, handleDeleteService }) => {\n  return (\n    <Flex shadow='md' bg='surface' px={4} py={4} borderBottomWidth={1} borderBottomColor='borders' align='center'>\n      <Box w='50%'>\n        <Text size='xs' fontWeight='bold'>{service.name}</Text>\n        <Text fontSize='sm'>{service.description}</Text>\n      </Box>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>{service.time} min.</Text>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>${service.price}</Text>\n      <Box>\n        <Menu>\n          <MenuButton as={IconButton} icon={<CgMoreVerticalAlt />}/>\n          <MenuList>\n            {/* <MenuItem>Pausar</MenuItem> */}\n            <MenuItem onClick={() => handleEditService(service)} >Editar</MenuItem>\n            <MenuItem onClick={() => handleDeleteService(service)}>Eliminar</MenuItem>\n          </MenuList>\n        </Menu>\n      </Box>\n    </Flex>\n  );\n}","import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { IService } from '../../types/IService';\nimport { ServiceItem } from './ServiceItem';\n\ninterface ServiceListProps {\n  services: IService[]\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceList: React.FC<ServiceListProps> = ({ services, handleEditService, handleDeleteService }) => {\n  return (\n    <Box shadow='sm'>\n      { services.map((item) => (\n        <ServiceItem\n          service={item}\n          handleEditService={handleEditService}\n          handleDeleteService={handleDeleteService}\n          key={item.id}\n        />\n      )) }\n    </Box>\n  );\n}","import { AlertDialog, Box, Button, Flex, Heading, Spacer, Text, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { DeleteServiceDialog } from '../components/services/DeleteServiceDialog';\nimport { ModalNewService } from '../components/services/ModalNewService';\nimport { ServiceList } from '../components/services/ServiceList';\nimport { BusinessService } from '../services/businessService';\nimport { IService } from '../types/IService';\n\ninterface SettingsServicesProps {\n  \n}\n\nexport const SettingsServices: React.FC<SettingsServicesProps> = ({ }) => {\n  // Hooks\n  const { onOpen, isOpen, onClose } = useDisclosure()\n  const businessContext = useContext(UserContext);\n\n  // States\n  const [services, setServices] = useState<IService[]>([])\n  const [service, setService] = useState<IService>()\n  const [isLoading, setIsLoading] = useState(true);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const fetchServices = async  () => {\n    const { success, services } = await new BusinessService().getServices(businessContext.id);\n    if (success && services) {\n      setServices(services);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetchServices();\n  }, []);\n\n  const realodList = () => {\n    fetchServices();\n    onClose();\n  }\n\n  const handleCreateService = () => {\n    setService(undefined)\n    onOpen();\n  }\n\n  const handleEditService = (service: IService) => {\n    setService(service);\n    onOpen()\n    \n  }\n\n  const handleDeleteService = (service: IService) => {\n    setService(service);\n    setIsDeleteModal(true);\n  }\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ModalNewService isOpen={isOpen} onClose={onClose} realodList={realodList} service={service} />\n      { service &&  <DeleteServiceDialog isOpen={isDeleteModal} realodList={realodList} service={service} onClose={() => setIsDeleteModal(!isDeleteModal)} /> }\n      <ContainerPage title='Configuración'>\n        <WrapperSettings>\n          <Flex direction='row' align='center'>\n            <Box>\n              <Heading as='h2' size='md' mb={2}>Servicios</Heading>\n              <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Añade tantos servicios necesites para que tus clientes sepan todo lo que ofreces.</Text>\n            </Box>\n            <Spacer />\n            <Box>\n              <Button variant='primary' onClick={handleCreateService}>Nuevo servicio</Button>\n            </Box>\n          </Flex>\n          <Box>\n            <ServiceList\n              services={services}\n              handleEditService={handleEditService}\n              handleDeleteService={handleDeleteService}\n              />\n          </Box>\n        </WrapperSettings>\n      </ContainerPage>\n    </>\n  );\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Heading, HStack, Text, Tooltip, FormControl, Select, IconButton, Box, Flex, VStack, Button, useToast } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { FaDoorOpen, FaDoorClosed } from 'react-icons/fa';\n\n// Types\nimport { IBusiness } from '../types/Business';\n\n// services\nimport { BusinessService } from '../services/businessService';\nimport { formatHoursDate } from '../utils/formatHoursDate';\n\n// components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { IHour } from '../types/IHour';\n\n\ninterface SettingsHourProps {\n\n}\n\nexport const SettingsHour: React.FC<SettingsHourProps> = () => {\n  // context\n  const businessContext = useContext(UserContext);\n\n  // Hooks\n  const history = useHistory()\n  const toast = useToast();\n\n  // states\n  const [hours, setHours] = useState<string[]>([]);\n  const [myHours, setMyHours] = useState<IHour[]>([]);\n  \n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const newHours = formatHoursDate(response.hours);\n        setMyHours(newHours);\n      }\n    }\n\n    fetchHours();\n    getHours();\n  }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<2; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 30*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const onSubmit = async (values: any) => {\n    if (businessContext?.id) {\n      const response = await new BusinessService().createHours(values, businessContext.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const formDay = (values: any, handleChange: any, setFieldValue: any, label: string, dayOfWeek: number) => {\n    const isOpen : boolean = values.days[dayOfWeek].isOpen;\n    const { openFrom, openTill } = values.days[dayOfWeek];\n    return (\n      <HStack w='100%' direction='row' justify='center' align='center'>\n        <Text w='250px' textAlign='left' fontWeight='semibold'>{label}</Text>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openFrom`} size='lg' value={openFrom} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openTill`} size='lg' value={openTill} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <Tooltip label={isOpen ? 'Cerrar este día' : 'Abrir este día'} fontSize=\"md\">\n          <IconButton\n            colorScheme=\"teal\"\n            aria-label=\"Call Segun\"\n            size=\"lg\"\n            icon={isOpen ? <FaDoorOpen /> : <FaDoorClosed />}\n            onClick={() => setFieldValue(`days[${dayOfWeek}].isOpen`, !isOpen )}\n          />\n        </Tooltip>\n      </HStack>\n    )\n  }\n\n  if (!businessContext || myHours.length === 0) {\n    return <LoadingView />\n  }\n\n  console.log('my hours');\n  \n  const initialValue = {\n    days: [\n      { businessId: businessContext.id, openFrom: myHours[0] ? myHours[0].openFrom :  '9:00', openTill: myHours[0] ? myHours[0].openTill : '20:00', isOpen: myHours[0] ? myHours[0].isOpen : true, dayOfWeek: 0 },\n      { businessId: businessContext.id, openFrom: myHours[1] ? myHours[1].openFrom :  '9:10', openTill: myHours[1] ? myHours[1].openTill : '20:00', isOpen: myHours[1] ? myHours[1].isOpen : true, dayOfWeek: 1 },\n      { businessId: businessContext.id, openFrom: myHours[2] ? myHours[2].openFrom :  '9:00', openTill: myHours[2] ? myHours[2].openTill : '20:00', isOpen: myHours[2] ? myHours[2].isOpen : true, dayOfWeek: 2 },\n      { businessId: businessContext.id, openFrom: myHours[3] ? myHours[3].openFrom :  '9:00', openTill: myHours[3] ? myHours[3].openTill : '20:00', isOpen: myHours[3] ? myHours[3].isOpen : true, dayOfWeek: 3 },\n      { businessId: businessContext.id, openFrom: myHours[4] ? myHours[4].openFrom :  '9:00', openTill: myHours[4] ? myHours[4].openTill : '20:00', isOpen: myHours[4] ? myHours[4].isOpen : true, dayOfWeek: 4 },\n      { businessId: businessContext.id, openFrom: myHours[5] ? myHours[5].openFrom :  '9:50', openTill: myHours[5] ? myHours[5].openTill : '20:00', isOpen: myHours[5] ? myHours[5].isOpen : true, dayOfWeek: 5 },\n      { businessId: businessContext.id, openFrom: myHours[6] ? myHours[6].openFrom :  '9:00', openTill: myHours[6] ? myHours[6].openTill : '20:00', isOpen: myHours[6] ? myHours[6].isOpen : true, dayOfWeek: 6 },\n    ]\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box>\n          <Heading as='h2' size='md' mb={2}>Horario</Heading>\n        </Box>\n        <Box>\n        <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex w='100%' mt={10}>\n              <VStack w='80%' spacing={3}>\n                { formDay(values, handleChange, setFieldValue, 'Domingo', 0) }\n                { formDay(values, handleChange, setFieldValue, 'Lunes', 1) }\n                { formDay(values, handleChange, setFieldValue, 'Martes', 2) }\n                { formDay(values, handleChange, setFieldValue, 'Miercoles', 3) }\n                { formDay(values, handleChange, setFieldValue, 'Jueves', 4) }\n                { formDay(values, handleChange, setFieldValue, 'Viernes', 5) }\n                { formDay(values, handleChange, setFieldValue, 'Sabado', 6) }\n                <Button size='lg' alignSelf='flex-start' variant='primary' type='submit' isLoading={isSubmitting}>Guardar</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","export const minutesToHour = (minutes :number) => {\n  const hour = minutes / 60;\n  const min = (hour % 1) * 60;\n\n  if (min === 0) {\n    return `${Math.trunc(hour)} hrs`;\n  } else if(hour < 1) {\n    return `${min} mins`;\n  } else {\n    return `${Math.trunc(hour)}:${min} hrs`;\n  } \n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip } from \"@chakra-ui/react\"\nimport moment from 'moment';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\n\ninterface BookingsListHistoryProps {}\n\nexport const BookingsListHistory: React.FC<BookingsListHistoryProps> = ({}) => {\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { startDate: moment(new Date()).toISOString() };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Calculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n            <Th>Estatus</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td>{item.customer?.firstName} {item.customer?.lastName}</Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n              <Td>{item.bookingStatusId === 3 ? 'Cancelada' : 'Terminada'}</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip } from \"@chakra-ui/react\"\nimport moment from 'moment';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\ninterface BookingsListNextProps {}\n\nexport const BookingsListNext: React.FC<BookingsListNextProps> = ({}) => {\n  // hooks\n  const history = useHistory();\n  // state\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { status: 2, time: 10, dateEnd: moment(new Date()).toISOString() };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Calculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td\n                textDecor='underline'\n                onClick={() => history.push(`/bookings/${item.id}`)}\n                fontWeight='600'\n                _hover={{ bg: 'primaryLight', cursor: 'pointer' }}\n              >\n                {item.customer?.firstName} {item.customer?.lastName}\n              </Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip, useToast } from \"@chakra-ui/react\"\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface BookingsListProps {}\n\n// Añadir toolt tip al tiempo y precio indicando que es el calculo basado en lo que registro el negocio\n\n// Este monto se basa en el precio de los servicios que registraste\n\nexport const BookingsList: React.FC<BookingsListProps> = ({}) => {\n  // hooks\n  const toast = useToast();\n  const history = useHistory();\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [bookingId, setBookingId] = useState(0)\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { status: 1, time: 10 };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  const handleToAcept = async (index :number, id? :number) => {\n    console.log('Booking id', id);\n    if (id) {\n      setBookingId(id);\n      const response = await new BookingService().update(id, { bookingStatusId: 2 });\n      if (response.success) {\n        setBookings([\n          ...bookings.slice(0, index),\n          ...bookings.slice(index + 1)\n        ]);\n\n        toast({\n          status: 'success',\n          title: 'Servicio aceptado',\n          position: 'top',\n        })\n      }\n      setBookingId(0);\n    }    \n  }\n\n  const handleToCancel = async (index :number, id? :number) => {\n    if (id) {\n      setBookingId(id);\n      const response = await new BookingService().update(id, { bookingStatusId: 3 });\n      if (response.success) {\n        setBookings([\n          ...bookings.slice(0, index),\n          ...bookings.slice(index + 1)\n        ]);\n\n        toast({\n          status: 'error',\n          title: 'Servicio rechazado',\n          position: 'top',\n        })\n      }\n      setBookingId(0);\n    }    \n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Calculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n            <Th />\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking, index :number) => (\n            <Tr fontSize='14px'>\n              <Td\n                textDecor='underline'\n                onClick={() => history.push(`/bookings/${item.id}`)}\n                fontWeight='600'\n                _hover={{ bg: 'primaryLight', cursor: 'pointer' }}\n              >\n                {item.customer?.firstName} {item.customer?.lastName}\n              </Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n              <Td>\n                <Flex>\n                  <Tooltip label=\"Aceptar\" fontSize=\"md\">\n                    <IconButton\n                      aria-label=\"Aceptar\"\n                      variant=\"ghost\"\n                      size='lg'\n                      fontSize=\"36px\"\n                      icon={<AiOutlineCheckCircle />}\n                      mr={1}\n                      onClick={() => handleToAcept(index, item.id)}\n                      isLoading={bookingId === item.id}\n                    />\n                  </Tooltip>\n                  <Tooltip label=\"Rechazar\" fontSize=\"md\">\n                    <IconButton\n                      aria-label=\"Aceptar\"\n                      variant=\"ghost\"\n                      size='lg'\n                      fontSize=\"36px\"\n                      icon={<AiOutlineCloseCircle />}\n                      mr={1}\n                      onClick={() => handleToCancel(index, item.id)}\n                      isLoading={bookingId === item.id}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import { Box, Button, Flex, HStack, Link, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { BookingsListHistory } from '../components/booking/BookingHistoryList';\nimport { BookingsListNext } from '../components/booking/BookingListNext';\nimport { BookingsList } from '../components/booking/BookingsList';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { BookingService } from '../services/bookingService';\nimport { IBooking } from '../types/IBooking';\n\ninterface BookingsProps {}\n\nconst MenuLink: React.FC<{ title: string, onClick: any, isActive: boolean }> = ({title, onClick, isActive}) => (\n  <Button bg={isActive ? 'primary' : ''} variant='ghost' fontWeight='bold' pr={6} onClick={onClick}>\n    <Text color={isActive ? '#FFF' : ''} fontSize='md'>{title}</Text>\n  </Button>\n)\n\nexport const Bookings: React.FC<BookingsProps> = ({}) => {\n  const [tab, setTab] = useState(1);\n\n  return (\n    <ContainerPage title='Reservaciones'>\n      <Box bg='surface' borderBottomWidth={1} borderColor='borders' py={3}>\n        <Box>\n          <HStack mt={4} borderBottomWidth={1} borderColor='borders' p={3}>\n            <MenuLink title='Pendientes' onClick={() => setTab(1)} isActive={tab === 1} />\n            <MenuLink title='Proximas' onClick={() => setTab(2)} isActive={tab === 2} />\n            <MenuLink title='Historial' onClick={() => setTab(3)} isActive={tab === 3} />\n          </HStack>\n          { tab === 1 && <BookingsList /> }\n          { tab === 2 && <BookingsListNext /> }\n          { tab === 3 && <BookingsListHistory /> }\n        </Box>\n      </Box>\n    </ContainerPage>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Container, Flex, Heading, HStack, IconButton, Spacer, Stack, Text, Tooltip, useToast, VStack } from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { IBooking } from '../types/IBooking';\nimport { BookingService } from '../services/bookingService';\nimport { formatDateLG } from '../utils/formatDate';\nimport { minutesToHour } from '../utils/minutesToHours';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { IBookingService } from '../types/IBookingService';\n\ninterface BookingProps {}\n\n// Datos de clioente\n/**\n Nombre\n Telefono,\n\n Fecha\n Hora\n Mensaje\n\n Servicios\n\n Acciones\n  Aceptar\n  Rechazar\n  Contactar\n*/\n\nexport const Booking: React.FC<BookingProps> = ({}) => {\n\n  // hooks\n  const { id } :any = useParams();\n  const toast = useToast();\n\n  // state\n  const [booking, setBooking] = useState<Required<IBooking>>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchBooking = async () => {\n    const { success, booking } = await new BookingService().get(id)\n    if (success) {\n      setBooking(booking);\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchBooking();\n  }, []);\n\n  const handleToAcept = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().update(id, { bookingStatusId: 2 });\n      if (response.success) {\n        fetchBooking();\n      }\n      setIsLoading(false);\n      console.log('respues de reservacion', response);\n    }    \n  }\n\n  const handleToCancel = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().update(id, { bookingStatusId: 3 });\n      if (response.success) {\n        fetchBooking();\n      }\n      console.log('Respuesta de servicio', response);\n      setIsLoading(false);\n      toast({\n        status: 'error',\n        title: 'Servicio rechazado',\n        position: 'top',\n      })\n      \n    }\n  }    \n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  if (!booking) {\n    return (\n      <Text>Servicio no encontrado</Text>\n    )\n  }\n\n  const colorStatus = (statusId :number) => {\n    switch (statusId) {\n      case 1:\n        return '#D69E2E'\n      case 2:\n        return 'primary'\n      case 3:\n        return 'error'\n      default:\n        break;\n    }\n  }\n  \n  return (\n    <>\n      <Box bg={colorStatus(booking.bookingStatusId)} color='#FFF' py={6} px={12} borderBottomWidth={1} borderColor='borders'>\n        <VStack align='left' justify='flex-start'>\n          <Heading as='h1'>{booking.customer.firstName} {booking.customer.lastName}</Heading>\n          <Text color='#FFF'>Teléfono: {booking.customer.phone}</Text>\n          <Text color='#FFF'>Fecha de solicitud: {formatDateLG(booking.createdAt)}</Text>\n        </VStack>\n      </Box>\n      \n      <ContainerPage>\n        <Flex justify='space-between'>\n          <Flex direction='column' w='62%'>\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders' mb={6}>\n              <Heading as='h4' fontSize='2xl' mb={6}>Resumen del servicio</Heading>\n\n              { booking.message &&\n              <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                <Text fontSize='sm' fontWeight='600' color='subtext'>Comentario</Text>\n                <Text as='cite'>{booking.message}</Text>\n              </VStack>\n              }\n              <HStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Fecha de servicio</Text>\n                  <Text fontWeight='600'>{formatDateLG(booking.bookingDate)}</Text>\n                </VStack>\n              </HStack>\n              <HStack spacing={10}>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Tiempo de servicio</Text>\n                  <Text fontWeight='600'>{minutesToHour(booking.totalTime)}</Text>\n                </VStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Total a cobrar</Text>\n                  <Text fontWeight='600'>${booking.totalPrice}MXN</Text>\n                </VStack>\n              </HStack>\n            </Box>\n\n            <Box bg='surface' py={6} px={6} w='100%' borderWidth={1} borderColor='borders'>\n              <Heading as='h4' fontSize='2xl' mb={6}>Servicios</Heading>\n              <Stack mb={3} w='100%'>\n                { booking.bookingService.map((item: IBookingService) => (\n                  <Flex align='center' justify='space-evenly' flex='100%'>\n                    <Text fontSize='md' fontWeight='semibold' w='260px'>{item.nameService}</Text>\n                    <Spacer />\n                    <Flex alignSelf='center'>\n                      <Box w='15px' />\n                      <Flex direction='column'>\n                        <Text fontSize='xs' pr='10px'>${item.priceService}MXN</Text>\n                        <Text fontSize='xs' pr='10px'>{item.timeService}min</Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )) }\n              </Stack>\n            </Box>\n          </Flex>\n\n          <Box w='35%'>\n            { booking.bookingStatusId === 1 &&\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders'>\n              <Flex justifyContent='center' direction='column' alignItems='center'>\n                <Heading as='h4' fontSize='2xl'>Solicitud</Heading>\n                <Text mt={10} textAlign='center'>Oscar Alberto esta interesado en hacer una reservación. ¿Lo aceptas?</Text>\n                <VStack my={6} w='100%'>\n                  <Button variant='primary' isFullWidth size='lg' onClick={handleToAcept}>\n                    Aceptar\n                  </Button>\n                  <Button variant='outline' colorScheme='red' isFullWidth size='lg' onClick={handleToCancel}>\n                    Rechazar\n                  </Button>\n                </VStack>\n              </Flex>\n            </Box>\n            }\n          </Box>\n\n        </Flex>\n      </ContainerPage>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormLabel, Text, useToast, Image, VStack, SimpleGrid, Wrap, IconButton } from '@chakra-ui/react';\nimport { IoIosAdd } from 'react-icons/io';\nimport { RiDeleteBin6Line } from 'react-icons/ri'\n\n\nimport { BusinessService } from '../../services/businessService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface UploadGalleryProps {}\n\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg';\n\nexport const UploadGallery: React.FC<UploadGalleryProps> = ({}) => {\n  // hooks\n  const toast = useToast();\n\n  // state\n  const [photos, setPhotos] = useState<object[]>([]);\n  const [isUploading, setIsUplaoding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetch = async () => {\n    const response = await new BusinessService().getPhotos();\n    if (response.success) {\n      const files = response.photos.map((item :any) => ({\n        image: item.file,\n        id: item.id,\n      }))\n\n      console.log('Files fetvh', files);\n      \n      setPhotos(files);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, [])\n\n  \n\n  const onChangeGallery = async (e :any) => {\n    setIsUplaoding(true);\n    setIsLoading(true);\n    const files : FileList = e.target.files;\n    const newFiles = Array.from(files).map((item:any) => ({\n      image: URL.createObjectURL(item),\n      id: item.id,\n    }))\n    \n    const newPhotos = [...photos, ...newFiles]\n    setPhotos(newPhotos);\n\n    const dataFiles = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      dataFiles.append('files', files[i]);\n    }\n    \n    const response = await new BusinessService().uplaodGallery(dataFiles);\n\n    if (response.success) {\n      toast({\n        title: \"Datos actualizados.\",\n        status: \"success\",\n        isClosable: true,\n        position: 'top'\n      });\n      // setTimeout(() => {\n      //   // window.location.reload();\n      //   fetch();\n      //   setIsUplaoding(false);\n      // }, 5000)\n    }\n    setIsUplaoding(false);\n    setIsLoading(false);\n  }\n\n  const handleDeletePhoto = async (id :number, index :number) => {\n    setIsLoading(true);\n    if (id) {\n      const response = await new BusinessService().deletePhoto(id);\n      if (response.success) {\n        setPhotos([\n          ...photos.splice(0, index),\n          ...photos.splice(index + 1),\n        ]);\n      }\n    }\n    setIsLoading(false);\n  }\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n  \n  return (\n    <>\n      <Box w='60%'>\n        <Text fontWeight='bold' mb={4}>Galeria</Text>\n        <Text fontSize='sm' color='subtext' mb={3}>Añade las fotos de tu negocio y local para que los usuarios conozcan tus servicios.</Text>\n        <Button variant='primary-outline' isLoading={isUploading} p={0} mt={4}>\n          <FormLabel w='100%' h='100%' htmlFor='files' m={0} p={2} px={4} >Añadir imagenes +</FormLabel>\n        </Button>\n        <input\n          type=\"file\"\n          id=\"files\" \n          name='files'\n          accept={acceptedFileTypes} \n          multiple\n          onChange={onChangeGallery}\n          style={{ display: 'none' }}\n        />\n      </Box>\n      <Box w='90%'>\n        <Wrap direction='row' flex={1} mt={4}>\n          { photos.map((photo :any, index :number) => (\n            <Box p={2} key={index} pos='relative' role='group'>\n              <Flex pos='absolute' w='200px' alignItems='flex-end' justifyContent='flex-end' p={2} display='none' _groupHover={{ display: 'flex' }}>\n                <IconButton size='sm' aria-label='Delete photo' icon={<RiDeleteBin6Line size={20} />} onClick={() => handleDeletePhoto(photo.id, index)} />\n              </Flex>\n              <Image w='200px' h='133px' objectFit=\"cover\" src={photo.image} />\n            </Box>\n          )) }\n        </Wrap>\n      </Box>\n    </>\n  );\n}","import React, { HtmlHTMLAttributes, useEffect, useState } from 'react'\nimport { Text, Heading, Box, Flex, Image, Divider, Button, VStack, FormLabel, useToast } from '@chakra-ui/react';\n\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { UploadCover } from '../components/gallery/UploadCover';\nimport { UploadGallery } from '../components/gallery/UploadGallery';\n\ninterface SettingsGalleryProps {}\n\nexport const SettingsGallery: React.FC<SettingsGalleryProps> = () => {\n  \n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Fotos</Heading>\n\n        <Flex w='90%' justify='space-between' mt={4}>\n          <UploadCover />\n        </Flex>\n\n        <Divider my={6} />\n\n        <Flex w='100%' justify='space-between' direction='column'>\n          <UploadGallery />\n        </Flex>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport * as Cookies from \"js-cookie\";\n\n// Components\nimport { Layout } from './components/general/Layout';\n\n// Pages\nimport { Login } from './pages/Login';\nimport { Home } from './pages/Home';\nimport { Signup } from './pages/Signup';\nimport { Settings } from './pages/Settings';\nimport { NewBusiness } from './pages/NewBusiness';\nimport { SettingsAddress } from './pages/SettingsAddress';\nimport { SettingsLocation } from './pages/SettingsLocation';\nimport { SettingsServices } from './pages/SettingsServices';\nimport { SettingsHour } from './pages/SettingsHour';\nimport { Bookings } from './pages/Bookings';\nimport { Booking } from './pages/Booking';\nimport { SettingsGallery } from './pages/SettingsGallery';\n\nconst App = () => {\n  const PrivateRoutes = () => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    if (isAuth) {\n      return (\n        <Route exact path='/:path?/:path2?'>\n          <Layout>\n            <Route path='/' exact component={Home} />\n            <Route path='/bookings' exact component={Bookings} />\n            <Route path='/bookings/:id' exact component={Booking} />\n            <Route path='/settings' exact component={Settings} />\n            <Route path='/settings/services' exact component={SettingsServices} />\n            <Route path='/settings/address' exact component={SettingsAddress} />\n            <Route path='/settings/location' exact component={SettingsLocation} />\n            <Route path='/settings/hours' exact component={SettingsHour} />\n            <Route path='/settings/photos' exact component={SettingsGallery} />\n            {/* <Route component={NotFound}/> */}\n          </Layout>\n        </Route>\n      )\n    } else {\n      return <Route render={() => <Redirect to={{ pathname: '/signup' }} />} />\n    }\n  }\n\n  const PrivateRoute = ({ component: Component, ...rest }: any) => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    return (\n      <Route\n        {...rest}\n        render={(props) => ( isAuth\n          ? ( <Component {...props} /> ) \n          : ( <Redirect to={{ pathname: '/login' }} /> )) \n        } \n      />\n    )\n  }\n\n  const PublicRoute = ({ component: Component, ...rest }: any) => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    return (\n      <Route\n        {...rest}\n        render={(props) => ( !isAuth\n          ? ( <Component {...props} /> ) \n          : ( <Redirect to={{ pathname: '/' }} /> )) \n        } \n      />\n    )\n  }\n\n  return (\n    <BrowserRouter basename='/manager/'>\n      \n      <Switch>\n        <PublicRoute path='/login' exact component={Login} />\n        <PublicRoute path='/signup' exact component={Signup} />\n        \n        <PrivateRoute path='/new-business/:step?' exact component={NewBusiness} />\n        {/* <Route component={NotFound}/> */}\n\n        <PrivateRoutes />\n      </Switch>\n    </BrowserRouter>   \n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport { extendTheme, theme as chakraTheme } from '@chakra-ui/react'\n\nconst fonts = { ...chakraTheme.fonts, mono: `'Menlo', monospace` }\n\n// const breakpoints = ['40em', '52em', '64em']\n\nconst theme = extendTheme({\n  ...chakraTheme,\n  styles: {\n    global: {\n      body: {\n        bg: \"#F6F7F9\",\n        // color: \"#333333\",\n        color: '#020621',\n      },\n    },\n  },\n  colors: {\n    ...chakraTheme.colors,\n    black: '#16161D',\n    primary: '#25CB67',  // Primary\n    _primary: '#05AF3C', // Priamry variant \n    secondary: '#020621', // Secondanry\n    _secondary: '#161e2c', // Secondanry variant\n    error: '#B00020',\n    background: '#F6F7F9',\n    surface: '#FFFFFF',\n    borders: '#d9e3eb',\n    subtext: '#717171',\n    primaryLight: '#E9F9EF'\n  },\n  fonts,\n  // breakpoints,\n  components: {\n    Link: {\n      variants: {\n        \"primary\": {\n          fontWeight: 'semibold',\n          _hover: {\n            textDecoration: 'none',\n            color: 'primary'\n          },\n        },\n      },\n    },\n    Button: {\n      variants: {\n        \"primary\": {\n          bg: \"primary\",\n          borderColor: \"#05AF3C\",\n          color: '#FFF',\n          _hover: {\n            bg: \"_primary\",\n          },\n        },\n        \"primary-outline\": {\n          bg: \"transparent\",\n          borderColor: \"primary\",\n          borderWidth: 1,\n          color: 'primary',\n          _hover: {\n            bg: \"_primary\",\n            color: '#FFFFFF',\n          },\n        },\n        \"secondary\": {\n          bg: \"secondary\",\n          borderColor: \"#05AF3C\",\n          color: '#FFF',\n          _hover: {\n            bg: \"_secondary\",\n          },\n        },\n      },\n    },\n    Input: {\n      baseStyle: {\n        field: {\n          _focus: {\n            borderColor: '_primary',\n            borderWidth: 1,\n            outline: 0,\n            boxShadow: 'none',\n          },\n          boxShadow: 'none',\n        },\n      },\n      variants: {\n        outline: () => ({\n          field: {\n            _focus: {\n              borderColor: '_primary',\n              borderWidth: 1,\n              outline: 0,\n              boxShadow: 'none',\n            },\n            _hover: {\n              borderColor: '_primary',\n              borderWidth: 1,\n            }\n          },\n        }),\n        \"app\": {\n          field: {\n            _focus: {\n              borderColor: '_primary',\n              borderWidth: 1,\n              outline: 0,\n            },\n          },\n        },\n      },\n    },\n  }\n})\n\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/react';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './config/theme';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <CSSReset />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}