{"version":3,"sources":["services/HttpClient.tsx","config/constants.tsx","services/userService.tsx","assets/logo-reserly-2.png","components/general/Header.tsx","components/general/Sidebar.tsx","components/general/Loading.tsx","utils/formatDate.tsx","context/socketContext.tsx","hooks/useSocket.tsx","components/general/Layout.tsx","validations/loginValidation.tsx","components/general/Wrapper.tsx","components/general/InputField.tsx","components/general/AlertError.tsx","pages/Login.tsx","components/general/ContainerPage.tsx","services/bookingService.tsx","utils/propsToParams.tsx","utils/formatHoursDate.tsx","config/calendarText.tsx","components/booking/CalendarItem.tsx","services/businessService.tsx","utils/hoursFilters.tsx","components/booking/BookingCalendar.tsx","pages/Home.tsx","validations/signupValidation.tsx","pages/Signup.tsx","components/general/WrapperSettings.tsx","validations/businessValidation.tsx","components/general/LoadingView.tsx","pages/Settings.tsx","components/calendar/Calendar.tsx","pages/BookingCalendar.tsx","components/onboarding/BoardingHours.tsx","services/businessAddressService.tsx","components/business/AddressForm.tsx","components/onboarding/BoardingInformation.tsx","components/onboarding/BoardingServices.tsx","components/onboarding/BoardingSuccess.tsx","components/onboarding/Welcome.tsx","pages/NewBusiness.tsx","pages/SettingsAddress.tsx","pages/SettingsLocation.tsx","components/services/DeleteServiceDialog.tsx","validations/newServiceValidation.tsx","components/services/ServiceForm.tsx","components/services/ModalNewService.tsx","components/services/ServiceItem.tsx","components/services/ServiceList.tsx","pages/SettingsServices.tsx","pages/SettingsHour.tsx","utils/minutesToHours.tsx","components/booking/BookingHistoryList.tsx","components/booking/BookingListNext.tsx","components/booking/BookingsList.tsx","pages/Bookings.tsx","pages/Booking.tsx","components/gallery/UploadCover.tsx","components/gallery/UploadGallery.tsx","pages/SettingsGallery.tsx","App.tsx","reportWebVitals.ts","config/theme.tsx","index.tsx"],"names":["HttpClient","baseURL","instance","_initializeResponseInterceptor","interceptors","response","use","_handleResponse","_handleError","data","error","Promise","reject","this","axios","create","withCredentials","API_DOMAIN","process","URL_API","APP_NAME","TOKEN_MAPBOX","UserService","login","post","signup","logout","get","getMe","Header","user","business","h","bg","align","justify","borderBottomColor","borderBottomWidth","py","px","w","href","src","logo","alt","width","height","fontWeight","name","fontSize","ml","color","size","variant","mx","as","Link","zIndex","borderColor","onClick","shadow","borderWidth","MenuLink","title","icon","direction","Lnk","to","_hover","p","Sidebar","borderRightWidth","borderRightColor","pos","top","left","mt","CgHome","CgCalendar","CgToolbox","Loading","flex","formatDate","date","format","moment","formatDateLG","SocketContext","React","createContext","SocketProvider","children","toast","useToast","socket","io","transports","useState","online","useSocket","on","console","log","description","bookingDate","status","position","Provider","value","UserContext","Layout","setUser","setBusiness","isLoading","setIsLoading","history","useHistory","fetchMe","a","success","alert","businessUser","push","useEffect","loginValidation","values","errors","email","test","password","Wrapper","maxW","InputField","label","inputSize","props","useField","field","touched","isInvalid","htmlFor","id","TextareaField","PasswordInputField","showPassword","setShowPassword","type","aria-label","AiFillEyeInvisible","AiFillEye","AlertError","textAlign","Login","setError","onSubmit","userService","message","my","initialValues","firstName","lastName","validate","isSubmitting","spacing","isFullWidth","alignSelf","orientation","mb","ContainerPage","BookingService","getAll","params","queryString","stringify","skipNull","skipEmptyString","strict","propsToParams","update","put","formatHoursDate","hours","map","e","openFrom","ISO_8601","openTill","messages","allDay","previous","next","today","month","week","day","agenda","time","event","noEventsInRange","showMore","total","CalendarItem","customer","BusinessService","businessId","createHours","getHours","uplaodCover","headers","uplaodGallery","deletePhoto","delete","getPhotos","createService","updateService","serviceId","deleteService","getServices","getMax","sort","b","localeCompare","localizer","momentLocalizer","BookingCalendar","businessContext","useContext","bookings","setBookings","min","max","rangeTime","setRangeTime","hours1","hours2","fetchHours","statuses","bookingEvents","start","toDate","end","add","totalTime","fetch","pb","mr","events","startAccessor","endAccessor","timeslots","step","eventPropGetter","_start","_end","_isSelected","style","backgroundColor","bookingStatusId","borderRadius","opacity","borderLeftWidth","borderLeftColor","flexDirection","slotPropGetter","slotGroupPropGetter","minHeight","dayPropGetter","components","defaultView","views","onSelectEvent","Home","signupValidation","Signup","pr","WrapperSettings","businessValidation","Number","businessCategoryId","LoadingView","Settings","fetchBusiness","isClosable","phone","handleChange","onChange","citas","Calendar","days","setDays","setHours","isRender","setIsRender","daysTmp","Date","dayName","dayNumber","forEach","item","index","useLayoutEffect","i","j","arr","borderTopWidth","headerDay","Array","from","key","BoardingHours","getBusiness","formDay","setFieldValue","dayOfWeek","isOpen","colorScheme","initialValue","BusinessAddressService","AddressForm","handleSaveAddress","address","setAddresss","geoAddress","setGeoAddress","lng","lat","latLng","setLatLng","setMap","mrk","setMrk","mapContainer","useRef","fetchAddress","addressMap","jumpTo","center","zoom","marker","mapboxgl","Marker","draggable","setLngLat","addTo","onDragEnd","accessToken","Map","container","current","handleSelect","geocodeByAddress","results","getLatLng","lngLat","getLngLat","street","area","city","state","aling","geoaddress","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","background","isIndeterminate","suggestion","ref","el","justifyContent","disabled","BoardingInformation","setStep","BoardingServices","price","BoardingSuccess","Welcome","NewBusiness","useParams","option","undefined","handleSteps","buildOnboarding","SettingsAddress","setAddress","zipcode","SettingsLocation","DeleteServiceDialog","onClose","service","realodList","cancelRef","leastDestructiveRef","NewServiceSchema","Yup","shape","required","ServiceForm","validationSchema","ModalNewService","motionPreset","ServiceItem","handleEditService","handleDeleteService","IconButton","ServiceList","services","SettingsServices","useDisclosure","onOpen","setServices","setService","isDeleteModal","setIsDeleteModal","fetchServices","SettingsHour","myHours","setMyHours","newHours","length","minutesToHour","minutes","hour","toFixed","BookingsListHistory","startDate","toISOString","fetchBookings","totalPrice","BookingsListNext","dateEnd","textDecor","cursor","BookingsList","bookingId","setBookingId","handleToAcept","slice","handleToCancel","isActive","Bookings","tab","setTab","Booking","booking","setBooking","fetchBooking","statusId","colorStatus","createdAt","bookingService","nameService","priceService","timeService","alignItems","UploadCover","cover","setCover","isUploading","setIsUplaoding","FormData","append","target","files","m","accept","multiple","display","objectFit","UploadGallery","photos","setPhotos","image","file","onChangeGallery","newFiles","URL","createObjectURL","newPhotos","dataFiles","handleDeletePhoto","splice","photo","role","_groupHover","SettingsGallery","App","PrivateRoutes","Cookies","exact","path","component","render","pathname","PrivateRoute","Component","rest","isAuth","PublicRoute","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fonts","chakraTheme","mono","theme","extendTheme","styles","global","body","colors","black","primary","_primary","secondary","_secondary","surface","borders","subtext","primaryLight","variants","textDecoration","Button","Input","baseStyle","_focus","outline","boxShadow","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40d97300.chunk.js","sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\n\ndeclare module 'axios' {\n  interface AxiosResponse<T = any> extends Promise<T> {}\n}\n\nexport default abstract class HttpClient {\n  protected readonly instance: AxiosInstance;\n\n  public constructor(baseURL: string) {\n    // /axios.defaults.withCredentials = true;\n    this.instance = axios.create({\n      baseURL,\n      withCredentials: true,\n    });\n\n    this._initializeResponseInterceptor();\n  }\n\n  private _initializeResponseInterceptor = () => {\n    this.instance.interceptors.response.use(\n      this._handleResponse,\n      this._handleError,\n    );\n  };\n\n  private _handleResponse = ({ data }: AxiosResponse) => data;\n\n  protected _handleError = (error: any) => Promise.reject(error);\n}","// export const API_DOMAIN = 'http://localhost:8001';\nexport const API_DOMAIN = process.env.REACT_APP_API_URL || 'https://api.reserly.mx';\nexport const URL_API = `${API_DOMAIN}/api/manager_v1`;\nexport const APP_NAME = 'Reserly';\nexport const TOKEN_MAPBOX = process.env.REACT_APP_TOKEN_MAPBOX || '';\n","import HttpClient from './HttpClient';\nimport { User, UserResponse } from \"../types/User\";\nimport { URL_API } from \"../config/constants\";\n\nexport class UserService extends HttpClient {\n\n  public constructor() {\n    super(URL_API);\n  }\n\n  public login = (data: User) => this.instance.post<UserResponse>('/users/auth', data);\n  public signup = (data: User) => this.instance.post<UserResponse>('/users', data);\n\n  public logout = () => this.instance.get<UserResponse>('/users/auth/logout');\n  public getMe = () => this.instance.get<UserResponse>('/users');\n}","export default __webpack_public_path__ + \"static/media/logo-reserly-2.fdfaa62e.png\";","import { Flex, MenuButton, Spacer, Text, Menu, MenuList, MenuItem, Link } from '@chakra-ui/react';\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { APP_NAME } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { User } from '../../types/User';\n\nimport logo from '../../assets/logo-reserly-2.png';\n\ninterface HeaderProps {\n  user: User | null\n  business: IBusiness\n  logout: any\n}\n\nexport const Header: React.FC<HeaderProps> = ({ user, business, logout }) => {\n\n  if (!user) {\n    return (\n      <Flex bg='surface' align='center' justify='center' shadow='md' borderBottomColor='#DDD' borderWidth={1} py={4}>\n        <Text>{APP_NAME}</Text>\n        <Spacer />\n        <Text>Iniciar sesion</Text>\n      </Flex>\n    )\n  }\n  \n  return (\n    <Flex h='50px' bg='surface' align='center' justify='center' borderBottomColor='borders' borderBottomWidth={1} py={4} px={8}>\n      <Flex align='center' w='190px'>\n        <Link href=\"/\">\n          <img src={logo} alt=\"uorder\" width=\"120\" height=\"40\" />\n        </Link>\n      </Flex>\n      <Text fontWeight='bold'>{business.name}</Text>\n      <Text fontWeight='bold' fontSize='xs' ml={4} color='primary'>Publicado</Text>\n      <Spacer />\n      <Menu>\n        <Link href='/' size=\"sm\" variant=\"primary\" mx={3}>Modo cliente</Link>\n        <MenuButton as={Link} mx={3} variant='primary'>\n          Cuenta\n        </MenuButton>\n        <MenuList zIndex={3} borderColor=\"#DDD\">\n          <MenuItem onClick={logout}>Cerrar sesión</MenuItem>\n        </MenuList>\n      </Menu>\n    </Flex>\n  );\n}","import React from 'react'\nimport { Box, Flex, Image, Link, Text } from '@chakra-ui/react';\nimport {\n  CgCalendar,\n  CgHome,\n  CgUserList,\n  CgToolbox\n} from 'react-icons/cg';\nimport { Link as Lnk } from 'react-router-dom';\n\nimport ReserlyLogo from './../../assets/Reserly.png';\nimport { IBusiness } from '../../types/Business';\n\ninterface SidebarProps {\n  logout: any\n  business: IBusiness\n}\n\nconst MenuLink: React.FC<{ title: string, icon: any, href: string }> = ({title, icon, href}) => (\n  <Flex direction='row'>  \n    <Link as={Lnk} to={href} w='100%' _hover={{ bg: 'primary', color: '#FFFFFF' }} fontWeight='bold'>\n      <Flex direction='row' align='center' p={3} >\n        {icon()} <Text fontSize='sm' ml={5}>{title}</Text>\n      </Flex>\n    </Link>\n  </Flex>\n)\n\nexport const Sidebar: React.FC<SidebarProps> = ({ logout }) => {\n  return (\n    <Box w='210px' h='100vh' bg='surface' shadow='sm' borderRightWidth={1} borderRightColor='borders' pos='sticky' top='0' left='0'>\n      {/* <Flex py={3} textAlign='center' justify='center' align='center'>\n        <Image src={ReserlyLogo} alt='Reserly' h='64px' />\n      </Flex> */}\n\n      <Box mt={3}>\n        <MenuLink title='Inicio' icon={CgHome} href='/' />\n        <MenuLink title='Calendario' icon={CgCalendar} href='/calendar' />\n        <MenuLink title='Reservaciones' icon={CgCalendar} href='/bookings' />\n        {/* <MenuLink title='Clientes' icon={CgUserList} href='/customers' /> */}\n        <MenuLink title='Configuración' icon={CgToolbox} href='/settings' />\n      </Box>\n    </Box>\n  );\n}","import React from 'react';\nimport { Flex, Spinner, Text } from '@chakra-ui/react';\n\nimport { APP_NAME } from '../../config/constants';\n\ninterface LoadingProps {}\n\nexport const Loading: React.FC<LoadingProps> = () => {\n  return (\n    <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n      <Spinner size='xl' color='primary' />\n      <Text mt={4} fontWeight='bold' fontSize='2xl'>Cargando {APP_NAME}</Text>\n    </Flex>\n  );\n}","import moment from 'moment';\n\nexport const formatDate = (date :Date, format? :string) => {\n  if (!format) {\n    return moment(date).format('DD/MM/YYYY HH:mm');\n  }\n\n  return moment(date).format(format);\n}\n\nexport const formatDateLG = (date :Date) => {\n  return moment(date).format('dddd DD [de] MMMM [de] YYYY HH:mm');\n}","import { position, useToast } from '@chakra-ui/react';\nimport React from 'react';\nimport { useSocket } from '../hooks/useSocket';\nimport { formatDate } from '../utils/formatDate';\nimport { formatBookingDate } from '../utils/formatHoursDate';\n\nexport const SocketContext = React.createContext<any>(null);\n\nexport const SocketProvider: React.FC = ({ children }) => {\n  // hooks\n  const toast = useToast();\n  const { socket, online } = useSocket();\n  \n  socket.on('new-booking', (data :any) => {\n    console.log('Socket data', data);\n    \n    toast({\n      title: 'Nueva reservación',\n      description: `${formatDate(data.bookingDate)}`,\n      status: 'success',\n      position: 'top',\n    })\n  });\n  \n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      { children }\n    </SocketContext.Provider>\n  );\n}","import { useEffect, useMemo, useState } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { API_DOMAIN, URL_API } from '../config/constants';\n\n\nexport const useSocket = () => {\n    \n    const socket : Socket = io(API_DOMAIN, { transports: ['websocket'] });\n    const [ online, setOnline ] = useState(false);\n    \n    // socket.on('saludo', (data :any) => {\n    //   console.log('Datos de saludo', data);\n    // })\n\n    // useEffect(() => {\n    //     setOnline( socket.connected );\n    // }, [socket])\n\n    // useEffect(() => {\n    //     socket.on('connect', () => {\n    //       console.log('Socket conectado');\n          \n    //     });\n    // }, [ socket ])\n\n    // useEffect(() => {\n    //     socket.on('disconnect', () => setOnline( false ));\n    // }, [ socket ])\n\n    return {\n        socket,\n        online\n    }\n}","/* eslint-disable react-hooks/exhaustive-deps */\n// Libraries\nimport React, { useEffect, useState } from 'react'\nimport { Box, Flex } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { UserService } from '../../services/userService';\nimport { User } from '../../types/User';\nimport { Header } from './Header';\nimport { Sidebar } from './Sidebar';\nimport { Loading } from './Loading';\nimport { IBusiness } from '../../types/Business';\nimport { SocketProvider } from '../../context/socketContext';\n\ninterface LayoutProps {}\n\nexport const UserContext = React.createContext<any>(null);\n\nexport const Layout: React.FC<LayoutProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const history = useHistory();\n\n\n  const fetchMe = async () => {\n    const { success, user } = await new UserService().getMe();\n    if (!success || !user) {\n      alert('Usuario no encotrado');\n      return ;\n      // Aqui se debe de enviar al login, cerrar sesion o mostrar alguna pantalla de error\n    };\n\n    if (!user.businessUser) {\n      // alert('Este usuario no tiene tienda, favor de registrar una.')\n      history.push('/new-business');\n      return;\n    }\n\n    if (user.businessUser.business) {\n      setBusiness(user.businessUser.business)\n    }\n\n    setUser(user);\n    setIsLoading(false);\n  }\n\n  const logout = async () => {\n    await new UserService().logout();\n    history.push('/login');\n  }\n\n  useEffect(() => {\n    fetchMe();\n  }, []);\n\n  if(isLoading || !business) {\n    return <Loading />\n  }\n\n  // if (!user) {\n  //   <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n  //     <Text mt={4} fontWeight='bold' fontSize='2xl'>Usuario no disponible</Text>\n  //   </Flex>\n  // }\n\n  \n  return (\n    <UserContext.Provider value={business}>\n      <SocketProvider>\n        <Box height='100vh' bg='background'>\n          <Header user={user} business={business} logout={logout} />\n          <Flex direction='row'>\n            <Sidebar logout={logout} business={business} />\n            <Box w='100%'>\n              <Box>\n                {children}\n              </Box>\n            </Box>\n          </Flex>\n        </Box>\n      </SocketProvider>\n    </UserContext.Provider>\n  );\n}","import { User } from \"../types/User\";\n\nexport const loginValidation = (values: User) => {\n  const errors : any = {};\n  if (!values.email) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n  ) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  }\n\n  if (!values.password) {\n    errors.password = 'Ingresa una contraseña'\n  }\n\n  return errors;\n}","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nexport type WrapperVariant = \"small\" | \"regular\";\n\ninterface WrapperProps {\n  variant?: WrapperVariant;\n}\n\nexport const Wrapper: React.FC<WrapperProps> = ({\n  children,\n  variant = \"regular\",\n}) => {\n  return (\n    <Box\n      mt={8}\n      mx=\"auto\"\n      maxW={variant === \"regular\" ? \"800px\" : \"400px\"}\n      w=\"100%\"\n    >\n      {children}\n    </Box>\n  );\n};","import React, { useState, InputHTMLAttributes } from \"react\";\nimport { useField } from \"formik\";\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  InputProps,\n  FormErrorMessage,\n  InputGroup,\n  InputRightElement,\n  IconButton,\n  Textarea,\n  TextareaProps,\n} from \"@chakra-ui/react\";\nimport { AiFillEye, AiFillEyeInvisible } from 'react-icons/ai';\n\n// type InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n//   label: string;\n//   name: string;\n//   errors?: string\n// };\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & InputProps & TextareaProps & {\n  label: string;\n  name: string;\n  errors?: string\n  inputSize?: string\n};\n\n\n// '' => false\n// 'error message stuff' => true\n\nexport const InputField: React.FC<InputFieldProps> = ({ label, errors, inputSize = 'md', ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel fontWeight='bold' fontSize='sm' htmlFor={field.name}>{label}</FormLabel>\n      <Input size={inputSize} {...field} {...props} id={field.name} />\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport const TextareaField: React.FC<InputFieldProps> = ({ label, errors, inputSize = 'md', ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel fontWeight='bold' fontSize='sm' htmlFor={field.name}>{label}</FormLabel>\n      <Textarea size={inputSize} {...field} {...props} id={field.name} />\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n\nexport const PasswordInputField: React.FC<InputFieldProps> = ({ label, ...props }) => {\n  const [field, { error, touched }] = useField(props);\n  const [showPassword, setShowPassword] = useState(false);\n  return (\n    <FormControl isInvalid={!!(touched && error)}>\n      <FormLabel htmlFor=\"description\" fontSize='sm' fontWeight='bold'>Contraseña</FormLabel>\n      <InputGroup>\n        <Input\n          type={showPassword ? \"text\" : \"password\"}\n          {...field}\n          {...props} id={field.name}\n        />\n        <InputRightElement>\n          <IconButton aria-label=\"Search database\" variant='ghost' icon={!showPassword ? AiFillEye({}) : AiFillEyeInvisible({})} onClick={() => setShowPassword(!showPassword)} />\n        </InputRightElement>\n      </InputGroup>\n      {(touched && error) ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n","import React from 'react'\nimport { Alert, AlertDescription, AlertTitle } from '@chakra-ui/react';\n\ninterface AlertErrorProps {\n  title?: string\n  description?: string\n}\n\nexport const AlertError: React.FC<AlertErrorProps> = ({ title, description }) => {\n  return (\n    <Alert status='error' >\n      { title && <AlertTitle>{title}</AlertTitle> }\n      { description && <AlertDescription fontSize='sm' textAlign='left'>{description}</AlertDescription> }\n    </Alert>\n  );\n}","// Libraries\nimport React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\n// Local libraries\nimport { loginValidation } from '../validations/loginValidation';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\n\n// Components\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { AlertError } from '../components/general/AlertError';\n\nexport const Login: React.FC = () => {\n  const [error, setError] = useState('');\n\n  const history = useHistory();\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.login(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n    } else {\n      history.push('/');\n    }\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Inicia sesión</Heading>\n        <Box mt={6}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={loginValidation}>\n            {({ isSubmitting, errors, touched }) => (\n              <Form>\n                <VStack spacing={4}>\n                  {/* <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' /> */}\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button mt={40} isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Iniciar sesión</Button>\n                  <Button alignSelf='flex-end' textAlign='right' size='sm' variant='link'>¿Olvidaste tu contraseña?</Button>\n                  { error && <AlertError description={error} /> }\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿No tienes cuenta?{\" \"}\n                    <Lnk to='/signup'>\n                      <Link color='primary' fontWeight='bold'>Registrate</Link>\n                    </Lnk>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}","import { Box, Heading } from '@chakra-ui/react';\nimport React from 'react'\n\ninterface ContainerPageProps {\n  title?: string\n}\n\nexport const ContainerPage: React.FC<ContainerPageProps> = ({ title, children }) => {\n  return (\n    <Box p={6} w='100%' maxW='1920px'>\n      { title && <Heading as='h3' size='lg'>{title}</Heading> }\n      <Box mt={3}>\n        {children}\n      </Box>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { IBooking } from \"../types/IBooking\";\nimport { propsToParams } from \"../utils/propsToParams\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BookingService extends HttpClient {\n  constructor() {\n    super(URL_API);\n  }\n\n  getAll = (params? :any) => this.instance.get(`/bookings?${propsToParams(params)}`);\n  get = (id :number) => this.instance.get(`/bookings/${id}`);\n  update = (id :number, data :IBooking) => this.instance.put(`/bookings/${id}`, data);\n}","import queryString from 'query-string';\n\nexport const propsToParams = (params :any) => {\n  return queryString.stringify(params, { skipNull: true, skipEmptyString: true, strict: true });\n}","import moment from 'moment-timezone';\nimport { Event } from 'react-big-calendar';\nimport { IBooking } from '../types/IBooking';\n\nimport { IHour } from \"../types/IHour\";\n\n// let dateAndTime = moment(component.props.data.value, [moment.ISO_8601, 'HH:mm']);\nexport const formatHoursDate = (hours: IHour[]) : IHour[]=> {\n    return hours.map((e) => ({\n      ...e,\n      // openFrom: moment( '12:00' ).format('HH:MM'),\n      openFrom: moment(e.openFrom, [moment.ISO_8601, 'HH:mm']).format('H:mm'),\n      openTill: moment(e.openTill, [moment.ISO_8601, 'HH:mm']).format('H:mm'),\n    }));\n}\n\nexport const formatBookingDate = (hours: IBooking[]) : Event[]=> {\n  return hours.map((e) => ({\n    ...e,\n    title: e.customer ? e.customer.firstName : '',\n    // openFrom: moment( '12:00' ).format('HH:MM'),\n    start: moment(`${e.bookingDate}`).toDate(),\n    end: moment(`${e.bookingDate}`).add(e.totalTime, 'minute').toDate(),\n  }));\n}","export const messages = {\n  allDay: 'Todo el día',\n  previous: '<',\n  next: '>',\n  today: 'Hoy',\n  month: 'Mes',\n  week: 'Semana',\n  day: 'Día',\n  agenda: 'Agenda',\n  date: 'Fecha',\n  time: 'Hora',\n  event: 'Evento',\n  noEventsInRange: 'No hay eventos en este rango',\n  showMore: (total :any) => `+ Ver más (${total})`\n};","import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { User } from '../../types/User';\n\ninterface CalendarItemProps {\n  event: any\n}\n\nexport const CalendarItem: React.FC<CalendarItemProps> = ({ event }) => {\n  const { customer } = event;\n  return (\n    <Box>\n      <Text fontWeight='semibold'>{customer.firstName}</Text>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { IBusiness, IBusinessResponse } from \"../types/Business\";\nimport { IHoursResponse } from \"../types/IHour\";\nimport { IService, IServiceResponse, IServicesResponse } from \"../types/IService\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BusinessService extends HttpClient {\n  constructor() {\n    super(URL_API)\n  }\n\n  create = (data: IBusiness) => this.instance.post<IBusinessResponse>('/businesses', data);\n  update = (data: IBusiness, businessId: number) => this.instance.put<IBusinessResponse>(`/businesses/${businessId}`, data);\n  get = () => this.instance.get('/businesses');\n\n  createHours = (data: any, businessId: number) => this.instance.post(`/businesses/${businessId}/hours`, data);\n  getHours = (businessId: number) => this.instance.get<IHoursResponse>(`/businesses/${businessId}/hours`);\n\n  uplaodCover = (data :any) => this.instance.post('/businesses/upload/cover', data, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  });\n\n  uplaodGallery = (data :any) => this.instance.post('/businesses/upload/photos', data, {\n    headers: {\n      'content-type': 'multipart/form-data'\n    }\n  });\n\n  deletePhoto = (id :number) => this.instance.delete(`/businesses/upload/photos/${id}`);\n  getPhotos = () => this.instance.get('/businesses/upload/photos');\n\n  // API DE SERVICIOS\n  createService = (data: IService, businessId: number) => this.instance.post<IServiceResponse>(`/businesses/${businessId}/services`, data);\n  updateService = (data: IService, serviceId: number, businessId: number) => this.instance.put<IServiceResponse>(`/businesses/${businessId}/services/${serviceId}`, data);\n  deleteService = (serviceId: number, businessId: number) => this.instance.delete<IServiceResponse>(`/businesses/${businessId}/services/${serviceId}`);\n  getServices = (businessId:number) => this.instance.get<IServicesResponse>(`/businesses/${businessId}/services`);\n}","import { IHour } from \"../types/IHour\";\n\nexport const getMin = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openFrom && b.openFrom) {\n      return a.openFrom.localeCompare(b.openFrom);\n    }\n  });\n\n  console.log('Orden get min', hours);\n  \n  return hours[0].openFrom;\n}\n\nexport const getMax = (hours :IHour[]) => {\n  hours.sort((a, b) :any => {\n    if (a.openTill && b.openTill) {\n      return b.openTill.localeCompare(a.openTill);\n    }\n  });\n\n  console.log('Orden get max', hours);\n\n  return hours[0].openTill;\n}","import React, { HTMLAttributes, useContext, useEffect, useState } from 'react'\nimport { Box, Flex, HStack, Text } from '@chakra-ui/react';\nimport { Calendar, Event, EventPropGetter, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\nimport 'moment/locale/es';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\n\n\nimport { IBooking } from '../../types/IBooking';\nimport { BookingService } from '../../services/bookingService';\nimport { formatBookingDate, formatHoursDate } from '../../utils/formatHoursDate';\nimport { messages } from '../../config/calendarText';\nimport { CalendarItem } from './CalendarItem';\n\nimport './BookingCalendar.css';\nimport { BusinessService } from '../../services/businessService';\nimport { UserContext } from '../general/Layout';\nimport { getMin, getMax } from '../../utils/hoursFilters';\nimport { useHistory } from 'react-router-dom';\n\nconst localizer = momentLocalizer(moment)\n\ninterface BookingCalendarProps {}\n\nexport const BookingCalendar: React.FC<BookingCalendarProps> = ({}) => {\n  // hooks\n  const history = useHistory();\n\n  // context\n  const businessContext = useContext(UserContext);\n  \n  // state\n  const [bookings, setBookings] = useState<Event[]>([]);\n  const [rangeTime, setRangeTime] = useState({ min: '00:00', max: '23:30' });\n\n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const hours1 = response.hours;\n        const hours2 = [...response.hours];\n        const min = getMin(hours1);\n        const max = getMax(hours2);\n\n        if (min && max) {\n          setRangeTime({ min, max });\n        }\n        \n        const newHours = formatHoursDate(response.hours);\n        // console.log('Horas', newHours);\n      }\n    }\n\n    fetchHours();\n  }, []);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const response = await new BookingService().getAll({ statuses: [1, 2] });\n      if (response.success) {\n        const bookingEvents = formatBookingDate(response.bookings);\n        setBookings(bookingEvents);\n      }\n    }\n    fetch();\n  }, []);\n\n  const onSelectEvent = (event :any) => {\n    console.log('Click en el evento', event);\n    if (event.id) {\n      history.push(`/bookings/${event.id}`);\n    }\n  }\n\n  const eventPropGetter = (event: any, _start: any, _end: any, _isSelected: any) : React.HTMLAttributes<HTMLDivElement> => {\n    \n    const style : React.CSSProperties = {\n      backgroundColor: event.bookingStatusId === 2 ? '#BDEFD1' : '#FEFCBF',\n      borderRadius: 0,\n      opacity: 1,\n      borderWidth: 0,\n      fontSize: '12px',\n      color: event.bookingStatusId === 2 ? '#16793D' : '#D69E2E',\n      borderLeftWidth: 5,\n      borderLeftColor: event.bookingStatusId === 2 ? '#05AF3C' : '#ECC94B',\n      flexDirection: 'column',\n      fontWeight: 'bold',\n    }\n    return {\n      style\n    }\n  }\n\n  const slotPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {}\n    return {\n      style\n    }\n  }\n\n  const slotGroupPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {\n      minHeight: '80px',\n    }\n    return {\n      style\n    }\n  }\n\n  const dayPropGetter = () : React.HTMLAttributes<HTMLDivElement> => {\n    const style : React.CSSProperties = {\n      backgroundColor: '#FFF',\n    }\n    return {\n      style\n    }\n  }\n  \n  return (\n    <Box>\n      <Flex pb={2}>\n        <HStack mr={3}>\n          <Box bg='primary' w={4} h={4} />\n          <Text fontSize='sm'>Aceptado</Text>\n        </HStack>\n        <HStack>\n          <Box bg='#ECC94B' w={4} h={4} />\n          <Text fontSize='sm'>Pendiente</Text>\n        </HStack>\n      </Flex>\n      <Calendar\n        localizer={localizer}\n        events={bookings}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        timeslots={2}\n        step={15}\n        messages={messages}\n        eventPropGetter={eventPropGetter}\n        slotPropGetter={slotPropGetter}\n        slotGroupPropGetter={slotGroupPropGetter}\n        dayPropGetter={dayPropGetter}\n        components={{\n          event: CalendarItem\n        }}\n        defaultView='week'\n        views={{ week: true, day: true, agenda: true }}\n        min={moment(rangeTime.min, [moment.ISO_8601, 'HH:mm']).toDate()}\n        max={moment(rangeTime.max, [moment.ISO_8601, 'HH:mm']).toDate()}\n        onSelectEvent={onSelectEvent}\n      />\n    </Box>\n  );\n}","import React from 'react'\nimport { Box } from '@chakra-ui/react';\n\n// local components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { BookingCalendar } from '../components/booking/BookingCalendar';\n\n\ninterface HomeProps {}\n\nexport const Home: React.FC<HomeProps> = ({}) => {\n  return (\n    <ContainerPage>\n      <Box>\n        <BookingCalendar />\n      </Box>\n    </ContainerPage>\n  );\n}","import { User } from \"../types/User\";\n\nexport const signupValidation = (values: User) => {\n  const errors : any = {};\n  if (!values.email) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  } else if (\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n  ) {\n    errors.email = 'Ingresa una dirección de correo electrónico';\n  }\n\n  if (!values.password) {\n    errors.password = 'Ingresa una contraseña'\n  }\n\n  if (!values.firstName) {\n    errors.firstName = 'Ingresa un nombre'\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Ingresa un apellido'\n  }\n  \n\n  return errors;\n}","import React, { useState } from 'react'\nimport { Box, Button, Heading, Text, VStack, Link, Divider } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { Link as Lnk, useHistory } from 'react-router-dom';\n\nimport { Wrapper } from '../components/general/Wrapper';\nimport { InputField, PasswordInputField } from '../components/general/InputField';\nimport { UserService } from '../services/userService';\nimport { User } from '../types/User';\nimport { AlertError } from '../components/general/AlertError';\nimport { signupValidation } from '../validations/signupValidation';\n\ninterface SignupProps {}\n\nexport const Signup: React.FC<SignupProps> = ({}) => {\n  const history = useHistory();\n  const [error, setError] = useState('');\n\n  const onSubmit = async (values: User) => {\n    const userService = new UserService();\n    const response = await userService.signup(values);\n\n    if (!response.success && response.message) {\n      setError(response.message);\n      return;\n    }\n\n    history.push('/');\n\n  };\n\n  const initialState = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  return (\n    <Wrapper variant=\"small\">\n      <Box shadow='md' my={0} mx=\"auto\" textAlign='center' p={10} bg='surface'>\n        <Heading as='h1'>Bienvenido</Heading>\n        <Text mt={2} fontWeight='bold'>Registrate y obten 3 meses gratis.</Text>\n        <Box mt={4}>\n          <Formik initialValues={initialState} onSubmit={onSubmit} validate={signupValidation}>\n            {({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={4}>\n                  <InputField name='firstName' label='Nombre' />\n                  <InputField name='lastName' label='Apellido' />\n                  <InputField name='email' label='Correo eletrónico' />\n                  <PasswordInputField name='password' label='Contraseña' />\n                  <Button isLoading={isSubmitting} type='submit' size='lg' variant='primary' isFullWidth>Registrate</Button>\n\n                  { error && <AlertError description={error} /> }\n\n                  <Text as=\"em\" fontSize='sm'>Al registrarte, confirmas que aceptas los <Link href='#' color=\"teal.500\">Términos y condiciones</Link> y la <Link href='#' color=\"teal.500\">Política de privacidad</Link>.</Text>\n\n                  <Divider orientation='horizontal' my={4} />\n                  <Text mb={2}>¿Ya tienes tu cuenta?{\" \"}\n                    <Link as={Lnk} to='/login' color='primary' fontWeight='bold'>\n                      Iniciar sesion\n                    </Link>\n                  </Text>\n                </VStack>\n              </Form>\n            )}\n          </Formik>\n        </Box>\n      </Box>\n    </Wrapper>\n  );\n}","import React from 'react'\nimport { Box, Flex, HStack, Link, Text } from '@chakra-ui/react';\nimport { Link as Lnk } from 'react-router-dom';\n\ninterface WrapperSettingsProps {\n\n}\n\nconst MenuLink: React.FC<{ title: string, href: string }> = ({title, href}) => (\n  <Link as={Lnk} to={href} fontWeight='bold' pr={4}>\n    <Flex direction='row'>\n      <Text fontSize='md'>{title}</Text>\n    </Flex>\n  </Link>\n)\n\nexport const WrapperSettings: React.FC<WrapperSettingsProps> = ({ children }) => {\n  return (\n    <Box>\n      <HStack mt={4} borderBottomWidth={1} borderColor='borders' py={3}>\n        <MenuLink title='Servicios' href='/settings/services' />\n        <MenuLink title='Datos básicos' href='/settings' />\n        <MenuLink title='Ubicación' href='/settings/location' />\n        <MenuLink title='Dirección' href='/settings/address' />\n        <MenuLink title='Horario' href='/settings/hours' />\n        <MenuLink title='Fotos' href='/settings/photos' />\n        {/* <MenuLink title='Usuario' href='/settings' /> */}\n      </HStack>\n\n      <Box my={4} bg='surface' borderColor='borders' borderWidth={1} p={6} borderRadius={3}>\n        {children}\n      </Box>\n\n    </Box>\n  );\n}","import { IBusiness } from \"../types/Business\";\n\nexport const businessValidation = (values: IBusiness) => {\n  const errors : any = {};\n  \n  if (!values.name) {\n    errors.name = 'Ingresa el nombre de tu negocio'\n  }\n\n  if (Number(values.businessCategoryId) === 0) {\n    errors.businessCategoryId = 'Ingresa una categoría'\n  }\n\n  return errors;\n}","import { Flex, Spinner } from '@chakra-ui/react';\nimport React from 'react'\n\ninterface LoadingViewProps {}\n\nexport const LoadingView: React.FC<LoadingViewProps> = () => {\n  return (\n    <Flex direction='column' justify='center' align='center' flex={1} w='100%' height='100vh'>\n      <Spinner size='md' color='primary' />\n    </Flex>\n  );\n}","// libraries\nimport React, { useEffect, useState } from 'react'\nimport { Box, VStack, Select, Button, FormControl, FormLabel, Heading, FormErrorMessage, useToast } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { InputField, TextareaField } from '../components/general/InputField';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { IBusiness } from '../types/Business';\nimport { businessValidation } from '../validations/businessValidation';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\n// local components\n\ninterface SettingsProps {}\n\nexport const Settings: React.FC<SettingsProps> = () => {\n  const [business, setBusiness] = useState<IBusiness | null>(null);\n  const toast = useToast();\n\n  useEffect(() => {\n    const fetchBusiness = async () => {\n      const { business } = await new BusinessService().get();\n      console.log('Business', business);\n      \n      setBusiness(business);\n    }\n    fetchBusiness();\n  }, []);\n\n  const onSubmit = async (values: IBusiness) => {\n    if (business && business.id) {\n      const response =await new BusinessService().update(values, business.id)\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      console.log('respuesta', response);\n    }\n  }\n\n  if(!business) {\n    return <LoadingView />\n  }\n\n  const initialValues : IBusiness = {\n    name: business.name ? business.name : '',\n    description: business.description ? business.description : '',\n    businessCategoryId: business.businessCategoryId ? business.businessCategoryId : 0,\n    phone: business.phone ? business.phone : ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box w='70%'>\n          <Heading as='h2' size='md' mb={8}>Datos básicos</Heading>\n          <Formik initialValues={initialValues} onSubmit={onSubmit} validate={businessValidation}>\n            { (({ isSubmitting, values, handleChange, errors }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                  <InputField inputSize='lg' name='name' label='Nombre del negocio' />\n                  <TextareaField inputSize='lg' name='description' label='Descripción del negocio (opcional)' />\n                  <FormControl isInvalid={!!errors.businessCategoryId}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Categoría</FormLabel>\n                    <Select name='businessCategoryId' size='lg' value={values.businessCategoryId} onChange={handleChange}>\n                      <option value='0' >Selecciona una categoría</option>\n                      <option value='1' >Salon</option>\n                      <option value='2' >Spa</option>\n                      <option value='3' >Barberia</option>\n                      <option value='4' >Tatuajes</option>\n                      <option value='5' >Maquillaje</option>\n                      <option value='6' >Podologia</option>\n                      <option value='7' >Servicios para el hogar</option>\n                      <option value='8' >Servicios para el mascotas</option>\n                    </Select>\n                    { errors.businessCategoryId && <FormErrorMessage>{errors.businessCategoryId}</FormErrorMessage> }\n                  </FormControl>\n                  <InputField inputSize='lg' name='phone' label='Teléfono de contacto (opcional)' />\n                  {/* <HStack spacing={3} w='100%'>\n                    <InputField inputSize='lg' name='category' label='Horario de apertura' />\n                    <InputField inputSize='lg' name='category' label='Horario de clausura' />\n                  </HStack> */}\n                  <Button variant='primary' size='lg' type='submit' isLoading={isSubmitting}>\n                    Guardar\n                  </Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useEffect, useLayoutEffect, useState } from 'react'\nimport ReactDOM from 'react-dom';\nimport { Box, Flex, Text } from '@chakra-ui/react';\nimport moment from 'moment';\n\ninterface CalendarProps {}\n\nconst cita = {\n  date: '12/25/2020',\n  time: '10:00',\n}\n\nconst citas = [\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '10:00',\n  },\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '11:00',\n  },\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '12:00',\n  },\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '13:00',\n  },\n  {\n    name: 'Oscar',\n    date: '12/25/2020',\n    time: '14:00',\n  },\n  {\n    name: 'Juan',\n    date: '12/25/2020',\n    time: '19:00',\n  } \n]\n\ntype days = {\n  dayName: string\n  dayNumber: string\n}\n\nexport const Calendar: React.FC<CalendarProps> = ({}) => {\n  const [days, setDays] = useState<days[]>([]);\n  const [hours, setHours] = useState<string[]>([]);\n  const [isRender, setIsRender] = useState(false);\n\n  useEffect(() => {\n    console.log('use effect')\n    const daysTmp : days[] = [];\n    // const currentDay = new Date();\n    let day = 0;\n    while (day < 7) {\n      // const answer = new Date().setDate(new Date().getDate() + 5);\n      let date = moment(new Date()).add({ days: day })\n      daysTmp.push({\n        dayName: date.format('ddd'),\n        dayNumber: date.format('DD')\n      });\n      day++;\n    }\n    \n    setDays(daysTmp);\n    getHours();\n    setIsRender(true);\n\n  }, []);\n\n  useEffect(() => {\n    if(isRender) {\n      citas.forEach((item, index) => {\n        // ReactDOM.render(book(item), document.getElementById('24-0:00'));\n      }); \n    }\n  })\n\n  useLayoutEffect(() => {\n    console.log('use layout')\n    // citas.forEach((item, index) => {\n    //   ReactDOM.render(book(item), document.getElementById('24-0:00'));\n    // });\n  })\n\n  // useEffect(() => {\n  //   // Consulta el API\n  //   citas.forEach((item, index) => {\n  //     ReactDOM.render(book(item), document.getElementById('24-0:00'));\n  //   });\n  // }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<4; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 15*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const book = (item: any, day?: string, time?: string) => {\n    // let date = moment(new Date(Date.parse(item.date)))\n    // if (date.format('ddd DD') === day && item.time === time) {\n    //   return <Text>Cita aqui</Text>\n    // }\n\n    return <Text>{item.name}</Text>\n  }\n\n  const headerDay = (item: days, index: number) => (\n    <Flex key={index} align='center' justify='center' bg='surface' width='14%' height='40px'>\n      <Text fontWeight='bold'>{item.dayName}</Text>\n    </Flex>\n  )\n\n  return (\n    <Box>\n      <Flex pos='sticky' top='0' borderTopWidth={1} borderBottomWidth={1} borderColor='borders'>\n        <Flex align='center' justify='center' bg='surface' width='5%' height='40px'>\n          <Text fontWeight='bold'>Horas</Text>\n        </Flex>\n        { days.map((item, i) => headerDay(item, i)) }\n      </Flex>\n      \n      <Flex direction='row'>\n        <Flex direction='column' w='5%'>\n          {\n            Array.from(Array(24), (e, i) => (\n              <Flex key={i} bg='surface' w='100%' height='120px' justify='center' align='center' borderWidth={1} borderColor='borders'>\n                <Text>{i}:00</Text>\n              </Flex>\n            ))\n          }\n        </Flex>\n        <Flex direction='row' w='95%'>\n          { days.map((day) => {\n            return (\n              <Flex key={day.dayNumber} direction='column' w='15%'>\n                {\n                  hours.map((time, key) => (\n                    <Box key={key}  id={`${day.dayNumber}-${time}`} bg='surface' height='30px' borderWidth={1} borderColor='borders' borderTopWidth='0px' borderLeftWidth='0px'>\n                      {/* { book(cita, day, time) } */}\n                    </Box>\n                  ))\n                }            \n              </Flex>\n            )\n          }) }\n        </Flex>\n      </Flex>\n      \n    </Box>\n  );\n}","import React from 'react'\nimport { Box } from '@chakra-ui/react';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { Calendar } from '../components/calendar/Calendar';\n\ninterface BookingCalendarProps {}\n\nexport const BookingCalendar: React.FC<BookingCalendarProps> = ({}) => {\n  return (\n    <ContainerPage title='Calendario'>\n      <Box>\n        <Calendar />\n      </Box>\n    </ContainerPage>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormControl, Heading, HStack, IconButton, Select, Text, Tooltip, VStack } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, Formik } from 'formik';\nimport { BusinessService } from '../../services/businessService';\nimport { FaDoorClosed, FaDoorOpen } from 'react-icons/fa';\nimport { IBusiness } from '../../types/Business';\nimport { Loading } from '../general/Loading';\n\ninterface BoardingHoursProps {}\n\nexport const BoardingHours: React.FC<BoardingHoursProps> = () => {\n  const history = useHistory()\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n\n  const [hours, setHours] = useState<string[]>([]);\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n    getHours();\n  }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<2; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 30*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const onSubmit = async (values: any) => {\n    if (business) {\n      const response = await new BusinessService().createHours(values, business.id);\n      if (response.success) {\n        history.push('/new-business/5');\n      }\n    }\n  }\n\n  const formDay = (values: any, handleChange: any, setFieldValue: any, label: string, dayOfWeek: number) => {\n    const isOpen : boolean = values.days[dayOfWeek].isOpen;\n    const { openFrom, openTill } = values.days[dayOfWeek];\n    return (\n      <HStack w='100%' direction='row' justify='center' align='center'>\n        <Text w='250px' textAlign='left' fontWeight='semibold'>{label}</Text>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openFrom`} size='lg' value={openFrom} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openTill`} size='lg' value={openTill} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <Tooltip label={isOpen ? 'Cerrar este día' : 'Abrir este día'} fontSize=\"md\">\n          <IconButton\n            colorScheme=\"teal\"\n            aria-label=\"Call Segun\"\n            size=\"lg\"\n            icon={isOpen ? <FaDoorOpen /> : <FaDoorClosed />}\n            onClick={() => setFieldValue(`days[${dayOfWeek}].isOpen`, !isOpen )}\n          />\n        </Tooltip>\n      </HStack>\n    )\n  }\n\n  if (!business) {\n    return <Loading />\n  }\n\n  const initialValue = {\n    days: [\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 0 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 1 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 2 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 3 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 4 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 5 },\n      { businessId: business.id, openFrom: '9:00', openTill: '20:00', isOpen: true, dayOfWeek: 6 },\n    ]\n  }\n\n  return (\n    <Box textAlign='center'>\n    <Heading as='h2'>¿Cual es el horario de tu negocio?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Ingresa el horario de tu negocio ya que será la hora disponible para hacer reservaciones.</Text>\n      \n      <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex align='center' w='100%' justify='center' mt={10}>\n              <VStack w='80%' spacing={3}>\n                { formDay(values, handleChange, setFieldValue, 'Lunes', 0) }\n                { formDay(values, handleChange, setFieldValue, 'Martes', 1) }\n                { formDay(values, handleChange, setFieldValue, 'Miercoles', 2) }\n                { formDay(values, handleChange, setFieldValue, 'Jueves', 3) }\n                { formDay(values, handleChange, setFieldValue, 'Viernes', 4) }\n                { formDay(values, handleChange, setFieldValue, 'Sabado', 5) }\n                { formDay(values, handleChange, setFieldValue, 'Domingo', 6) }\n                <Button size='lg' alignSelf='flex-end' variant='primary' type='submit' isLoading={isSubmitting}>Siguiente</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import { URL_API } from \"../config/constants\";\nimport { BusinessAddress, BusinessAddressResponse } from \"../types/BusinessAddress\";\nimport HttpClient from \"./HttpClient\";\n\nexport class BusinessAddressService extends HttpClient {\n  constructor() {\n    super(URL_API)\n  }\n\n  get = (businessId: number) => this.instance.get<BusinessAddressResponse>(`/businesses/${businessId}/addresses`);\n  create = (data: BusinessAddress, businessId: number) => this.instance.post(`/businesses/${businessId}/addresses`, data);\n  update = (data: BusinessAddress, businessId: number, id: number) => this.instance.put<BusinessAddressResponse>(`/businesses/${businessId}/addresses/${id}`, data);\n}","import React, { useState, useEffect, useRef } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport { BusinessAddressService } from '../../services/businessAddressService';\nimport { TOKEN_MAPBOX } from '../../config/constants';\nimport { IBusiness } from '../../types/Business';\nimport { BusinessAddress, BusinessAddressResponse } from '../../types/BusinessAddress';\n\ninterface AddressFormProps {\n  handleSaveAddress: any\n  business: Required<IBusiness>\n}\n\nexport const AddressForm: React.FC<AddressFormProps> = ({ handleSaveAddress, business }) => {\n  \n  const [address, setAddresss] = useState<BusinessAddress | null>(null);\n  \n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [latLng, setLatLng] = useState({ lng: -74.5, lat: 40 });\n  const [map, setMap] = useState<mapboxgl.Map | null>(null);\n  const [mrk, setMrk] = useState<mapboxgl.Marker | null>(null);\n\n  const mapContainer = useRef<any>(null);\n  \n  const fetchAddress = async (map: Map) => {\n    const { success, address } = await new BusinessAddressService().get(business.id);\n    if (success && address) {\n      setAddresss(address);\n      setGeoAddress(address.addressMap);\n      setLatLng({ lat: address.lat, lng: address.lng });\n\n      if (map) {\n        map.jumpTo({ center: [address.lng, address.lat], zoom: 16 });\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([address.lng, address.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        setMrk(marker);\n      }\n    }\n  }\n\n  useEffect(() => {\n    mapboxgl.accessToken = TOKEN_MAPBOX;\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n      center: [-100.3161126, 25.6866142], // starting position [lng, lat]\n      zoom: 16 // starting zoom\n    });\n    setMap(map);\n\n    \n    map.on('load', function() {\n      fetchAddress(map);\n    });\n\n  }, [])\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (business.id) {\n      if (address?.id) {\n        response = await new BusinessAddressService().update({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress }, business.id, address.id);\n      } else {\n        response = await new BusinessAddressService().create({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress }, business.id);\n      }\n      if (response.success && response.address) {\n        setAddresss(response.address);\n      }\n      \n      if (handleSaveAddress) {\n        handleSaveAddress();\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    const latLng = await getLatLng(results[0]);\n    setLatLng(latLng);\n    if (map) {\n      \n      // map.jumpTo({ 'center': [latLng.lng, latLng.lat], 'zoom': 14 });\n      map.jumpTo({ center: [latLng.lng, latLng.lat], zoom: 16 });\n\n      if (!mrk) {\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([latLng.lng, latLng.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        setMrk(marker);\n      } else {\n        mrk.setLngLat([latLng.lng, latLng.lat]);\n      }\n      \n    }\n  }\n\n  const onDragEnd = (marker: Marker) => {\n    var lngLat = marker.getLngLat();\n    setLatLng(lngLat);\n    console.log('NUEVAS CORDENADAS', lngLat);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit}>\n        { (({ isSubmitting }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10}>\n              <VStack w='100%' align='flex-start'>\n                <Text fontWeight='bold'>Ingresa la dirección completa de tu negocio</Text>\n                <PlacesAutocomplete\n                  value={geoAddress}\n                  onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                  onSelect={handleSelect}\n                  searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                >\n                  { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                      <Box w='100%'>\n                        <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                        <Box shadow='md' background='#FFFFFF'>\n                          { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                          {suggestions.map(suggestion => {\n                            return (\n                              <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                <Text fontWeight='bold'>{suggestion.description}</Text>\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      </Box>\n                  )) }\n                </PlacesAutocomplete>\n              </VStack>\n            </Flex>\n            <Box>\n              <Box w='100%' h='200px' ref={el => (mapContainer.current = el)}></Box>\n              {/* <Text fontWeight='bold' fontSize='xs' mt={2}>Mueve el marcador si es necesario pero asegurate que este en el lugar correcto.</Text> */}\n              <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n              \n            </Box>\n\n            <Flex mt={4} align='flex-end' justifyContent='flex-end'>\n              <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Siguiente</Button>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n      \n      {/* <Box w='100%' h='200px' id='map'></Box> */}\n    </Box>\n  );\n}","import { Box, Heading, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\nimport { AddressForm } from '../business/AddressForm';\nimport { Loading } from '../general/Loading';\n\ninterface BoardingInformationProps {\n  setStep: any\n}\n\nexport const BoardingInformation: React.FC<BoardingInformationProps> = ({ setStep }) => {\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  const history = useHistory();\n  \n  const handleSaveAddress = () => {\n    history.push('/new-business/3');\n  }\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  if (!business) {\n    return <Loading />\n  }\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>¿Cual es la dirección de tu negocio?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Ingresa la información lo más precisa posible para que tus clientes puedan llegar.</Text>\n      { business && <AddressForm handleSaveAddress={handleSaveAddress} business={business} /> }\n    </Box>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormControl, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, Text, VStack } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\n\nimport { Form, Formik } from 'formik';\nimport { InputField } from '../general/InputField';\nimport { BusinessService } from '../../services/businessService';\nimport { IService } from '../../types/IService';\nimport { IBusiness } from '../../types/Business';\n\ninterface BoardingServicesProps {}\n\nexport const BoardingServices: React.FC<BoardingServicesProps> = ({}) => {\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n\n  const history = useHistory()\n\n  const getBusiness = async () => {\n    const { success, business }  = await new BusinessService().get();\n    if (success) {\n      setBusiness(business);\n    }\n  }\n\n  useEffect(() => {\n    getBusiness();\n  }, []);\n\n  const onSubmit = async (values: IService) => {\n    if (business) {\n      const { success } = await new BusinessService().createService(values, business.id)\n      if (success) {\n        history.push('/new-business/4');\n      }\n    }\n  }\n\n  const initialValue = {\n    name: '',\n    description: '',\n    time: '',\n    price: '',\n  }\n\n  return (\n    <Box textAlign='center'>\n    <Heading as='h2'>¿Qué servicios realizas?</Heading>\n      <Text fontSize='xl' fontWeight='500'>Añade un servicio para empezar a utilizar Boombook</Text>\n      \n      <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex align='center' w='100%' justify='center' mt={10}>\n              <VStack w='70%' spacing={3}>\n                <InputField inputSize='lg' name='name' label='Nombre del servicio' />\n                <InputField inputSize='lg' name='description' label='Descripción' />\n                <HStack w='100%' direction='row' justify='space-between'>\n                  <FormControl>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                  </FormControl>\n                  {/* <InputNumberField inputSize='lg' name='Precio' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  {/* <InputField inputSize='lg' name='time' label='Tiempo que dura (minutos)' placeholder='Ej. 45' /> */}\n                  <FormControl>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                    <Select name='time' size='lg' placeholder=\"Seleccione la duración\" value={values.time} onChange={handleChange}>\n                      <option value=\"15\">15 min.</option>\n                      <option value=\"30\">30 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"45\">45 min.</option>\n                      <option value=\"60\">1:00 hr.</option>\n                      <option value=\"75\">1:15 hr.</option>\n                      <option value=\"90\">1:30 hr.</option>\n                      <option value=\"105\">1:45 hr.</option>\n                      <option value=\"120\">2:00 hr.</option>\n                    </Select>\n                  </FormControl>\n                </HStack>\n                <Button size='lg' alignSelf='flex-end' variant='primary' type='submit' isLoading={isSubmitting}>Siguiente</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import React from 'react'\nimport { Button, Flex, Heading, Text } from '@chakra-ui/react'\nimport { AiFillCheckCircle } from 'react-icons/ai';\nimport { APP_NAME } from '../../config/constants';\nimport { useHistory } from 'react-router-dom';\n\ninterface BoardingSuccessProps {}\n\nexport const BoardingSuccess: React.FC<BoardingSuccessProps> = ({}) => {\n  const history = useHistory();\n  return (\n    <Flex align='center' direction='column' textAlign='center'>\n      <AiFillCheckCircle size={90} color='#25CB67' />\n      <Heading my={6} as='h2'>Completado</Heading>\n      <Text fontSize='xl' fontWeight='500'>Gracias por registrate en {APP_NAME}, toda la información registrada anteriormente puede ser modificada desde la pagina de configuración.</Text>\n\n      <Button variant='primary' size='lg' mt={6} px={16} onClick={() => history.push('/')}>\n        Aceptar\n      </Button>\n    </Flex>\n  );\n}","import React from 'react'\nimport { useHistory } from 'react-router-dom';\n\nimport { Box, Button, Flex, FormControl, FormLabel, Heading, Select, Text } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { BusinessService } from '../../services/businessService';\nimport { IBusiness } from '../../types/Business';\nimport { User } from '../../types/User';\nimport { InputField } from '../general/InputField';\n\ninterface WelcomeProps {\n  user: User\n  business?: IBusiness | null\n}\n\nexport const Welcome: React.FC<WelcomeProps> = ({ user, business }) => {\n  const history = useHistory();\n\n  const onSubmit = async (values: IBusiness) => {\n    if (business && business.id) {\n      await new BusinessService().update(values, business.id);\n    } else {\n      await new BusinessService().create(values);\n    }\n    history.push('/new-business/2');\n  }\n\n  return (\n    <Box textAlign='center'>\n      <Heading as='h2'>Estamos contentos de que estes aquí {user.firstName}.</Heading>\n      <Text fontSize='xl' fontWeight='500'>Estas a un paso de comenzar a organizar tus clientes.</Text>\n\n      <Formik initialValues={{ name: business ? business.name : '', businessCategoryId: business ? business.businessCategoryId : 0 }} onSubmit={onSubmit}>\n        { ({ values, isSubmitting, handleChange }) => (\n          <Form>\n            <Flex aling='center' justify='center' py={10} w='100%' direction='column' justifyContent='center' align='center'>\n              <Box w='70%'>\n                <InputField inputSize='lg' name='name' label='¿Cual es el nombre de tu negocio?' />\n                <FormControl>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Categoría</FormLabel>\n                    <Select name='businessCategoryId' size='lg' value={values.businessCategoryId} onChange={handleChange}>\n                      <option value='0' >Selecciona una categoría</option>\n                      <option value='1' >Salon</option>\n                      <option value='2' >Spa</option>\n                      <option value='3' >Barberia</option>\n                      <option value='4' >Tatuajes</option>\n                      <option value='5' >Maquillaje</option>\n                      <option value='6' >Podologia</option>\n                      <option value='7' >Hogar</option>\n                      <option value='8' >Mascotas</option>\n                    </Select>\n                  </FormControl>\n                <Box textAlign='right'>\n                  <Button\n                    mt={10}\n                    variant='primary'\n                    size='lg'\n                    type='submit'\n                    isLoading={isSubmitting}\n                  >\n                    Siguiente\n                  </Button>\n                </Box>\n              </Box>\n            </Flex>\n          </Form>\n        ) }\n      </Formik>\n    </Box>\n  );\n}","import { Box, Heading, Progress } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { Loading } from '../components/general/Loading';\nimport { BoardingHours } from '../components/onboarding/BoardingHours';\nimport { BoardingInformation } from '../components/onboarding/BoardingInformation';\nimport { BoardingServices } from '../components/onboarding/BoardingServices';\nimport { BoardingSuccess } from '../components/onboarding/BoardingSuccess';\nimport { Welcome } from '../components/onboarding/Welcome';\nimport { BusinessService } from '../services/businessService';\n\nimport { UserService } from '../services/userService';\nimport { IBusiness } from '../types/Business';\nimport { User } from '../types/User';\n\ninterface NewBusinessParams {\n  step?: string | undefined\n}\n\nexport const NewBusiness: React.FC = () => {\n  const history = useHistory();\n  const params = useParams<NewBusinessParams>();\n  const option = params.step !== undefined ? Number(params.step) : 1;\n\n  const [step, setStep] = useState<number>(option || 1);\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n  const [business, setBusiness] = useState<Required<IBusiness> | null>(null);\n  \n\n  useEffect(() => {\n    const option = params.step !== undefined ? Number(params.step) : 1;\n    setStep(option)\n  }, [option, params.step]);\n\n  useEffect(() => {\n    const getMe = async () => {\n      const { success, user } = await new UserService().getMe();\n      if (!user || !success) {\n        return;\n      }\n      setUser(user);\n    };\n  \n    const getBusiness = async () => {\n      const { success, business }  = await new BusinessService().get();\n      if (success) {\n        setBusiness(business);\n      }\n    }\n    getMe();\n    getBusiness();\n    setIsLoading(false);\n    \n  }, []);\n\n  const handleSteps = (step: number) => {\n    // if (step === 4) {\n    //   history.push('/');\n    //   return;\n    // }\n    setStep(step)\n  }\n\n  if (!user || isLoading) {\n    return <Loading />\n  }\n\n  const buildOnboarding = () => {\n    switch (step) {\n      case 1:\n        return <Welcome business={business} user={user} />\n      case 2:\n        return <BoardingInformation setStep={handleSteps} />\n      case 3:\n        return <BoardingServices />\n      case 4:\n        return <BoardingHours />\n      case 5:\n        return <BoardingSuccess />\n      default:\n        return <Heading>No se pudo cargar la pagina</Heading>\n    }\n  }\n\n  return (\n    <Box bg='#FFFFFF' height='100vh'>\n      <Box mx='auto' w='800px' py={10}>\n        <Box>\n          <Progress value={20 * step} colorScheme='green' />\n        </Box>\n        <Box mt={10}>\n          { (user && !isLoading) && buildOnboarding() }\n        </Box>\n        {/* <Flex direction='row' mt={6}>\n          <Button variant='link' onClick={goBack}>\n            Atras\n          </Button>\n          <Spacer />\n          <Button size='lg' variant='primary'>\n            Siguiente\n          </Button>\n        </Flex> */}\n        \n      </Box>\n    </Box>\n  );\n}","import React, { useContext, useEffect, useState } from 'react'\nimport { Box, Button, Heading, HStack, useToast, VStack , Text} from '@chakra-ui/react';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddress } from '../types/BusinessAddress';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { InputField } from '../components/general/InputField';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { Loading } from '../components/general/Loading';\nimport { LoadingView } from '../components/general/LoadingView';\n\ninterface SettingsAddressProps {}\n\nexport const SettingsAddress: React.FC<SettingsAddressProps> = () => {\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n  \n  useEffect(() => {\n    const fetchAddress = async () => {\n      const { address } = await new BusinessAddressService().get(businessContext.id);\n      if (address) {\n        setAddress(address);\n      }\n      console.log('Direccion', address);\n    }\n\n    fetchAddress();\n  }, []);\n\n  const onSubmit = async (values: any) => {\n    if (businessContext && businessContext.id && address?.id) {\n      console.log('Id de negocio', businessContext.id, values);\n      const { success } = await new BusinessAddressService().update(values, businessContext.id, address.id);\n      if (success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  if (!address) {\n    return <LoadingView />\n  }\n\n  const initialValues = {\n    street: address.street ? address.street : '',\n    area: address.area ? address.area : '',\n    city: address.city ? address.city : '',\n    state: address.state ? address.state : '',\n    zipcode: address.zipcode ? address.zipcode : '',\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Dirección</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Esta información es utilizada  si la ubicación por coordenadas no es precisa, así que es recomendable ingresarla.</Text>\n        <Box w='80%'>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n            { (({ isSubmitting }) => (\n              <Form>\n                <VStack spacing={8} align='flex-start'>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='street' label='Calle y número' />\n                  <InputField inputSize='lg' name='area' label='Colonia' />\n                </HStack>\n                <HStack spacing={4} w='100%'>\n                  <InputField inputSize='lg' name='city' label='Municipio' />\n                  <InputField inputSize='lg' name='state' label='Estado' />\n                </HStack>\n                <HStack spacing={4} w='49%'>\n                  <InputField inputSize='lg' name='zipcode' label='Codigo postal' />\n                </HStack>\n                <Button variant='primary' type='submit' size='lg' isLoading={isSubmitting}>Guardar</Button>\n                </VStack>\n              </Form>\n            )) }\n          </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useContext, useRef, useState, useEffect } from 'react'\nimport { Box, Flex, Input, VStack, Text, Progress, Button, useToast, Heading } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport mapboxgl, { Map, Marker } from 'mapbox-gl';\n\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessAddressService } from '../services/businessAddressService';\nimport { BusinessAddress, BusinessAddressResponse } from '../types/BusinessAddress';\nimport { TOKEN_MAPBOX } from '../config/constants';\n\ninterface SettingsLocationProps {\n\n}\n\nexport const SettingsLocation: React.FC<SettingsLocationProps> = () => {\n  // Contexto\n  const businessContext = useContext(UserContext);\n  \n  // Hooks\n  const toast = useToast();\n  const mapContainer = useRef<any>(null);\n\n  // States\n  const [address, setAddress] = useState<BusinessAddress | null>(null);\n  const [geoAddress, setGeoAddress] = useState<string>('');\n  const [latLng, setLatLng] = useState({ lng: -74.5, lat: 40 });\n  const [map, setMap] = useState<mapboxgl.Map | null>(null);\n  const [mrk, setMrk] = useState<mapboxgl.Marker | null>(null);\n  \n  const fetchAddress = async (map: Map) => {\n    const { success, address } = await new BusinessAddressService().get(businessContext.id);\n    if (success && address) {\n      setAddress(address);\n      setGeoAddress(address.addressMap);\n      setLatLng({ lat: address.lat, lng: address.lng });\n\n      if (map) {\n        map.jumpTo({ center: [address.lng, address.lat], zoom: 16 });\n        const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([address.lng, address.lat]).addTo(map);\n        marker.on('dragend', () => onDragEnd(marker));\n        // const marker : Marker = new mapboxgl.Marker({ draggable: true }).setLngLat([latLng.lng, latLng.lat]).addTo(map);\n        setMrk(marker);\n      }\n    }\n  }\n\n  useEffect(() => {\n    mapboxgl.accessToken = TOKEN_MAPBOX;\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location\n      center: [-100.3161126, 25.6866142], // starting position [lng, lat]\n      zoom: 16 // starting zoom\n    });\n    setMap(map);\n\n    \n    map.on('load', function() {\n      fetchAddress(map);\n    });\n\n  }, [])\n\n  const onSubmit = async () => {\n    let response : BusinessAddressResponse;\n    if (businessContext.id && address?.id) {\n      response = await new BusinessAddressService().update({ lat: latLng.lat, lng: latLng.lng, addressMap: geoAddress }, businessContext.id, address.id);\n      if (response.success) {\n        // setAddress(response.address);\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const handleSelect = async (address: string) => {\n    setGeoAddress(address);\n    const results = await geocodeByAddress(address)\n    const latLng = await getLatLng(results[0]);\n    setLatLng(latLng);\n    if (map) {\n      \n      // map.jumpTo({ 'center': [latLng.lng, latLng.lat], 'zoom': 14 });\n      map.jumpTo({ center: [latLng.lng, latLng.lat], zoom: 16 });\n      if (mrk) {\n        mrk.setLngLat([latLng.lng, latLng.lat]);\n      }\n      // console.log('viejo marcado');\n      \n      // marker.on('dragend', () => onDragEnd(marker));\n    }\n  }\n\n  const onDragEnd = (marker: Marker) => {\n    var lngLat = marker.getLngLat();\n    setLatLng(lngLat);\n  }\n\n  const initialValues = {\n    street: '',\n    area: '',\n    city: '',\n    state: ''\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Ubicación</Heading>\n        <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Ingresa correctamente esta\u0010 información, es la que visualizaran las personas para poder llegar a tu negocio</Text>\n\n        <Box>\n          <Formik initialValues={initialValues} onSubmit={onSubmit}>\n          { (({ isSubmitting }) => (\n            <Form>\n              <Flex aling='center' justify='center' mb={2}>\n                <VStack w='100%' align='flex-start'>\n                  <PlacesAutocomplete\n                    value={geoAddress}\n                    onChange={(geoaddress) => setGeoAddress(geoaddress)}\n                    onSelect={handleSelect}\n                    searchOptions={{ componentRestrictions: { country: ['mx'] } }}\n                  >\n                    { (({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <Box w='100%'>\n                          <Input {...getInputProps()} placeholder='Dirección ' size='lg' />\n                          <Box shadow='md' background='#FFFFFF'>\n                            { loading && <Progress size=\"xs\" isIndeterminate colorScheme='green' /> }\n                            {suggestions.map(suggestion => {\n                              return (\n                                <Box {...getSuggestionItemProps(suggestion, { key: suggestion.id })} textAlign='left' p={2}>\n                                  <Text fontWeight='bold'>{suggestion.description}</Text>\n                                </Box>\n                              );\n                            })}\n                          </Box>\n                        </Box>\n                    )) }\n                  </PlacesAutocomplete>\n                </VStack>\n              </Flex>\n              <Box>\n                <Box w='100%' h='300px' ref={el => (mapContainer.current = el)}></Box>\n                <Text fontWeight='bold' fontSize='xs' mt={2}>Si es necesario, ajusta el mapa para que el pin aparezca en la ubicación correcta.</Text>\n                \n              </Box>\n\n              <Flex mt={4} align='flex-start' justifyContent='flex-start'>\n                <Button disabled={!geoAddress} isLoading={isSubmitting} size='lg' variant='primary' type='submit'>Guardar</Button>\n              </Flex>\n            </Form>\n          )) }\n        </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React, { useContext } from 'react'\nimport { AlertDialog, AlertDialogBody, AlertDialogOverlay, AlertDialogContent, AlertDialogHeader, AlertDialogFooter, Button, Text, useToast } from '@chakra-ui/react';\n\nimport { IService } from '../../types/IService';\nimport { BusinessService } from '../../services/businessService';\nimport { UserContext } from '../general/Layout';\n\ninterface DeleteServiceDialogProps {\n  service: IService\n  isOpen: boolean\n  onClose: any\n  realodList: any\n}\n\nexport const DeleteServiceDialog: React.FC<DeleteServiceDialogProps> = ({ isOpen, onClose, service, realodList }) => {\n  const businessContext = useContext(UserContext);\n  const toast = useToast();\n\n  const deleteService = async () => {\n    if(service?.id) {\n      const { success } = await new BusinessService().deleteService(service.id, businessContext.id);\n      if (success) {\n        realodList()\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n      onClose();\n    }\n    \n  }\n\n  const cancelRef = React.useRef<any>();\n  return (\n    <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              Eliminar servicio\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n            <Text mb={2} fontWeight='bold' fontSize='sm'>¿Estas seguro que quieres eliminar este servicio?</Text>\n            <Text fontSize='sm'>No es posible deshacer la operación.</Text>\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancelar\n              </Button>\n              <Button colorScheme=\"red\" onClick={deleteService} ml={3}>\n               Si, eliminar\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n  );\n}","import * as Yup from 'yup';\n\n export const NewServiceSchema = Yup.object().shape({\n\n   name: Yup.string()\n    .min(5, 'Demasíado corto, minimo 5 letras.')\n    .max(200, 'Maximo 200 letras.')\n    .required('Ingresa un nombre'),\n\n  price:Yup.number()\n    .min(1)\n    .required('Ingresa el precio'),\n\n  time: Yup.string()\n  .required('Ingresa el tiempo'),\n });","import React, { useContext } from 'react'\nimport { Box, Button, FormControl, FormErrorMessage, FormLabel, Heading, HStack, NumberInput, NumberInputField, Select, VStack } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { InputField, TextareaField } from '../general/InputField'\nimport { NewServiceSchema } from '../../validations/newServiceValidation'\nimport { IService, IServiceResponse } from '../../types/IService'\nimport { BusinessService } from '../../services/businessService'\nimport { UserContext } from '../general/Layout'\n\ninterface ServiceFormProps {\n  realodList: any\n  service?: IService\n}\n\nexport const ServiceForm: React.FC<ServiceFormProps> = ({ realodList, service }) => {\n  const businessContext = useContext(UserContext);\n\n  const onSubmit = async (values: IService) => {\n    let response : IServiceResponse;\n    if (service?.id) {\n      response = await new BusinessService().updateService(values, service.id, businessContext.id);\n    } else {\n      response = await new BusinessService().createService(values, businessContext.id);\n    }\n    \n    console.log('respuesta', response);\n    if (response.success) {\n      if (realodList) {\n        realodList();\n      }\n    }\n  }\n\n  const initialValues = !service ? {\n    name: '',\n    description: '',\n    price: '',\n    time: '',\n  } : service;\n\n\n  return (\n    <Box>\n      <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={NewServiceSchema}>\n        { (({ isSubmitting, values, handleChange, setFieldValue, errors }) => (\n          <Form>\n            <VStack spacing={4}>\n              <InputField name='name' label='Nombre' />\n              <TextareaField name='description' label='Descripción (opcional)' />\n              <HStack>\n                <FormControl isInvalid={!!errors.price}>\n                    <FormLabel fontWeight='bold' fontSize='sm'>Precio</FormLabel>\n                    <NumberInput name='price' size='lg' onChange={(value) => setFieldValue('price', value)} value={values.price}>\n                      <NumberInputField />\n                    </NumberInput>\n                    { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                  </FormControl>\n                <FormControl isInvalid={!!errors.time}>\n                  <FormLabel fontWeight='bold' fontSize='sm'>Tiempo</FormLabel>\n                  <Select name='time' size='lg' placeholder=\"Seleccioné una duración\" value={values.time} onChange={handleChange}>\n                    <option value=\"15\">15 min.</option>\n                    <option value=\"30\">30 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"45\">45 min.</option>\n                    <option value=\"60\">1:00 hr.</option>\n                    <option value=\"75\">1:15 hr.</option>\n                    <option value=\"90\">1:30 hr.</option>\n                    <option value=\"105\">1:45 hr.</option>\n                    <option value=\"120\">2:00 hr.</option>\n                  </Select>\n                  { errors.price && <FormErrorMessage>{errors.price}</FormErrorMessage> }\n                </FormControl>\n              </HStack>\n              <Button type='submit' isLoading={isSubmitting} variant='primary' alignSelf='end'>Guardar</Button>\n            </VStack>\n          </Form>\n        )) }\n      </Formik>\n    </Box>\n  );\n}","import React from 'react'\nimport { Modal, ModalOverlay, ModalContent, ModalCloseButton, ModalHeader, ModalBody, ModalFooter, Button, Text, useDisclosure } from '@chakra-ui/react';\nimport { ServiceForm } from './ServiceForm';\nimport { IService } from '../../types/IService';\n\ninterface ModalNewServiceProps {\n  isOpen: boolean\n  onClose: any\n  realodList: any\n  service?: IService\n}\n\nexport const ModalNewService: React.FC<ModalNewServiceProps> = ({ isOpen, onClose, realodList, service }) => {  \n  return (\n    <Modal isOpen={isOpen} onClose={onClose} motionPreset='slideInBottom'>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Nuevo servicio</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <ServiceForm realodList={realodList} service={service} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}","import { Box, Button, Divider, Flex, HStack, IconButton, Menu, MenuButton, MenuItem, MenuList, Text } from '@chakra-ui/react';\nimport React from 'react'\nimport { CgChevronDoubleDown } from 'react-icons/cg';\nimport { CgMoreVerticalAlt } from 'react-icons/cg';\nimport { IService } from '../../types/IService';\n\ninterface ServiceItemProps {\n  service: IService\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceItem: React.FC<ServiceItemProps> = ({ service, handleEditService, handleDeleteService }) => {\n  return (\n    <Flex shadow='md' bg='surface' px={4} py={4} borderBottomWidth={1} borderBottomColor='borders' align='center'>\n      <Box w='50%'>\n        <Text size='xs' fontWeight='bold'>{service.name}</Text>\n        <Text fontSize='sm'>{service.description}</Text>\n      </Box>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>{service.time} min.</Text>\n      <Text size='sm' fontWeight='semibold' w='25%' textAlign='left'>${service.price}</Text>\n      <Box>\n        <Menu>\n          <MenuButton as={IconButton} icon={<CgMoreVerticalAlt />}/>\n          <MenuList>\n            {/* <MenuItem>Pausar</MenuItem> */}\n            <MenuItem onClick={() => handleEditService(service)} >Editar</MenuItem>\n            <MenuItem onClick={() => handleDeleteService(service)}>Eliminar</MenuItem>\n          </MenuList>\n        </Menu>\n      </Box>\n    </Flex>\n  );\n}","import React from 'react'\nimport { Box, Text } from '@chakra-ui/react';\nimport { IService } from '../../types/IService';\nimport { ServiceItem } from './ServiceItem';\n\ninterface ServiceListProps {\n  services: IService[]\n  handleEditService: any\n  handleDeleteService: any\n}\n\nexport const ServiceList: React.FC<ServiceListProps> = ({ services, handleEditService, handleDeleteService }) => {\n  return (\n    <Box shadow='sm'>\n      { services.map((item) => (\n        <ServiceItem\n          service={item}\n          handleEditService={handleEditService}\n          handleDeleteService={handleDeleteService}\n          key={item.id}\n        />\n      )) }\n    </Box>\n  );\n}","import { AlertDialog, Box, Button, Flex, Heading, Spacer, Text, useDisclosure } from '@chakra-ui/react';\nimport React, { useContext, useEffect, useState } from 'react'\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { UserContext } from '../components/general/Layout';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { DeleteServiceDialog } from '../components/services/DeleteServiceDialog';\nimport { ModalNewService } from '../components/services/ModalNewService';\nimport { ServiceList } from '../components/services/ServiceList';\nimport { BusinessService } from '../services/businessService';\nimport { IService } from '../types/IService';\n\ninterface SettingsServicesProps {\n  \n}\n\nexport const SettingsServices: React.FC<SettingsServicesProps> = ({ }) => {\n  // Hooks\n  const { onOpen, isOpen, onClose } = useDisclosure()\n  const businessContext = useContext(UserContext);\n\n  // States\n  const [services, setServices] = useState<IService[]>([])\n  const [service, setService] = useState<IService>()\n  const [isLoading, setIsLoading] = useState(true);\n  const [isDeleteModal, setIsDeleteModal] = useState(false);\n\n  const fetchServices = async  () => {\n    const { success, services } = await new BusinessService().getServices(businessContext.id);\n    if (success && services) {\n      setServices(services);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {  \n    fetchServices();\n  }, []);\n\n  const realodList = () => {\n    fetchServices();\n    onClose();\n  }\n\n  const handleCreateService = () => {\n    setService(undefined)\n    onOpen();\n  }\n\n  const handleEditService = (service: IService) => {\n    setService(service);\n    onOpen()\n    \n  }\n\n  const handleDeleteService = (service: IService) => {\n    setService(service);\n    setIsDeleteModal(true);\n  }\n\n  // Metodos para elimianar, pausar y editar\n\n  if(isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <>\n      <ModalNewService isOpen={isOpen} onClose={onClose} realodList={realodList} service={service} />\n      { service &&  <DeleteServiceDialog isOpen={isDeleteModal} realodList={realodList} service={service} onClose={() => setIsDeleteModal(!isDeleteModal)} /> }\n      <ContainerPage title='Configuración'>\n        <WrapperSettings>\n          <Flex direction='row' align='center'>\n            <Box>\n              <Heading as='h2' size='md' mb={2}>Servicios</Heading>\n              <Text fontSize='md' fontWeight='500' mb={8} pr={20}>Añade tantos servicios necesites para que tus clientes sepan todo lo que ofreces.</Text>\n            </Box>\n            <Spacer />\n            <Box>\n              <Button variant='primary' onClick={handleCreateService}>Nuevo servicio</Button>\n            </Box>\n          </Flex>\n          <Box>\n            <ServiceList\n              services={services}\n              handleEditService={handleEditService}\n              handleDeleteService={handleDeleteService}\n              />\n          </Box>\n        </WrapperSettings>\n      </ContainerPage>\n    </>\n  );\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Heading, HStack, Text, Tooltip, FormControl, Select, IconButton, Box, Flex, VStack, Button, useToast } from '@chakra-ui/react';\nimport { useHistory } from 'react-router-dom';\nimport { FaDoorOpen, FaDoorClosed } from 'react-icons/fa';\n\n// Types\nimport { IBusiness } from '../types/Business';\n\n// services\nimport { BusinessService } from '../services/businessService';\nimport { formatHoursDate } from '../utils/formatHoursDate';\n\n// components\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { Form, Formik } from 'formik';\nimport { UserContext } from '../components/general/Layout';\nimport { IHour } from '../types/IHour';\n\n\ninterface SettingsHourProps {\n\n}\n\nexport const SettingsHour: React.FC<SettingsHourProps> = () => {\n  // context\n  const businessContext = useContext(UserContext);\n\n  // Hooks\n  const history = useHistory()\n  const toast = useToast();\n\n  // states\n  const [hours, setHours] = useState<string[]>([]);\n  const [myHours, setMyHours] = useState<IHour[]>([]);\n  \n  useEffect(() => {\n    const fetchHours = async () => {\n      const response = await new BusinessService().getHours(businessContext.id);\n      \n      if (response.success && response.hours) {\n        const newHours = formatHoursDate(response.hours);\n        setMyHours(newHours);\n      }\n    }\n\n    fetchHours();\n    getHours();\n  }, []);\n\n  const getHours = () => {\n    var arr = [], i, j;\n    for(i=0; i<24; i++) {\n      for(j=0; j<2; j++) {\n        arr.push(i + \":\" + (j===0 ? \"00\" : 30*j) );\n      }\n    }\n    setHours(arr);\n  }\n\n  const onSubmit = async (values: any) => {\n    if (businessContext?.id) {\n      const response = await new BusinessService().createHours(values, businessContext.id);\n      if (response.success) {\n        toast({\n          title: \"Datos actualizados.\",\n          status: \"success\",\n          isClosable: true,\n          position: 'top'\n        });\n      }\n    }\n  }\n\n  const formDay = (values: any, handleChange: any, setFieldValue: any, label: string, dayOfWeek: number) => {\n    const isOpen : boolean = values.days[dayOfWeek].isOpen;\n    const { openFrom, openTill } = values.days[dayOfWeek];\n    return (\n      <HStack w='100%' direction='row' justify='center' align='center'>\n        <Text w='250px' textAlign='left' fontWeight='semibold'>{label}</Text>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openFrom`} size='lg' value={openFrom} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl>\n          <Select name={`days[${dayOfWeek}].openTill`} size='lg' value={openTill} onChange={handleChange}>\n            { hours.map((time, key) => (\n              <option key={key} value={time}>{time}</option>\n            ))}\n          </Select>\n        </FormControl>\n        <Tooltip label={isOpen ? 'Cerrar este día' : 'Abrir este día'} fontSize=\"md\">\n          <IconButton\n            colorScheme=\"teal\"\n            aria-label=\"Call Segun\"\n            size=\"lg\"\n            icon={isOpen ? <FaDoorOpen /> : <FaDoorClosed />}\n            onClick={() => setFieldValue(`days[${dayOfWeek}].isOpen`, !isOpen )}\n          />\n        </Tooltip>\n      </HStack>\n    )\n  }\n\n  if (!businessContext || myHours.length === 0) {\n    return <LoadingView />\n  }\n\n  console.log('my hours');\n  \n  const initialValue = {\n    days: [\n      { businessId: businessContext.id, openFrom: myHours[0] ? myHours[0].openFrom :  '9:00', openTill: myHours[0] ? myHours[0].openTill : '20:00', isOpen: myHours[0] ? myHours[0].isOpen : true, dayOfWeek: 0 },\n      { businessId: businessContext.id, openFrom: myHours[1] ? myHours[1].openFrom :  '9:10', openTill: myHours[1] ? myHours[1].openTill : '20:00', isOpen: myHours[1] ? myHours[1].isOpen : true, dayOfWeek: 1 },\n      { businessId: businessContext.id, openFrom: myHours[2] ? myHours[2].openFrom :  '9:00', openTill: myHours[2] ? myHours[2].openTill : '20:00', isOpen: myHours[2] ? myHours[2].isOpen : true, dayOfWeek: 2 },\n      { businessId: businessContext.id, openFrom: myHours[3] ? myHours[3].openFrom :  '9:00', openTill: myHours[3] ? myHours[3].openTill : '20:00', isOpen: myHours[3] ? myHours[3].isOpen : true, dayOfWeek: 3 },\n      { businessId: businessContext.id, openFrom: myHours[4] ? myHours[4].openFrom :  '9:00', openTill: myHours[4] ? myHours[4].openTill : '20:00', isOpen: myHours[4] ? myHours[4].isOpen : true, dayOfWeek: 4 },\n      { businessId: businessContext.id, openFrom: myHours[5] ? myHours[5].openFrom :  '9:50', openTill: myHours[5] ? myHours[5].openTill : '20:00', isOpen: myHours[5] ? myHours[5].isOpen : true, dayOfWeek: 5 },\n      { businessId: businessContext.id, openFrom: myHours[6] ? myHours[6].openFrom :  '9:00', openTill: myHours[6] ? myHours[6].openTill : '20:00', isOpen: myHours[6] ? myHours[6].isOpen : true, dayOfWeek: 6 },\n    ]\n  }\n\n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Box>\n          <Heading as='h2' size='md' mb={2}>Horario</Heading>\n        </Box>\n        <Box>\n        <Formik initialValues={initialValue} onSubmit={onSubmit}>\n        { (({ isSubmitting, values, handleChange, setFieldValue }) => (\n          <Form>\n            <Flex w='100%' mt={10}>\n              <VStack w='80%' spacing={3}>\n                { formDay(values, handleChange, setFieldValue, 'Domingo', 0) }\n                { formDay(values, handleChange, setFieldValue, 'Lunes', 1) }\n                { formDay(values, handleChange, setFieldValue, 'Martes', 2) }\n                { formDay(values, handleChange, setFieldValue, 'Miercoles', 3) }\n                { formDay(values, handleChange, setFieldValue, 'Jueves', 4) }\n                { formDay(values, handleChange, setFieldValue, 'Viernes', 5) }\n                { formDay(values, handleChange, setFieldValue, 'Sabado', 6) }\n                <Button size='lg' alignSelf='flex-start' variant='primary' type='submit' isLoading={isSubmitting}>Guardar</Button>\n              </VStack>\n            </Flex>\n          </Form>\n        )) }\n      </Formik>\n        </Box>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","\nexport const minutesToHour = (minutes :number) => {\n  const hour = minutes / 60;\n  // const hourWuthoutDecimal = Number(hour.toFixed(0));\n  const decimals = hour % 1;\n  const min = decimals * 60;\n  if (min === 0) {\n    return `${hour.toFixed(0)} hrs`;\n  } else if(hour < 1) {\n    return `${min} mins`;\n  } else {\n    return `${hour.toFixed(0)}:${min} hrs`;\n  }\n \n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip } from \"@chakra-ui/react\"\nimport moment from 'moment';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\n\ninterface BookingsListHistoryProps {}\n\nexport const BookingsListHistory: React.FC<BookingsListHistoryProps> = ({}) => {\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { startDate: moment(new Date()).toISOString() };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Calculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n            <Th>Estatus</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td>{item.customer?.firstName} {item.customer?.lastName}</Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n              <Td>{item.bookingStatusId === 3 ? 'Cancelada' : 'Terminada'}</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip } from \"@chakra-ui/react\"\nimport moment from 'moment';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\ninterface BookingsListNextProps {}\n\nexport const BookingsListNext: React.FC<BookingsListNextProps> = ({}) => {\n  // hooks\n  const history = useHistory();\n  // state\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { status: 2, time: 10, dateEnd: moment(new Date()).toISOString() };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Calculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking) => (\n            <Tr fontSize='14px'>\n              <Td\n                textDecor='underline'\n                onClick={() => history.push(`/bookings/${item.id}`)}\n                fontWeight='600'\n                _hover={{ bg: 'primaryLight', cursor: 'pointer' }}\n              >\n                {item.customer?.firstName} {item.customer?.lastName}\n              </Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Table, Thead, Tbody, Tr, Th, Td, TableCaption, Box, Text, Flex, IconButton, Tooltip, useToast } from \"@chakra-ui/react\"\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\nimport { useHistory } from 'react-router-dom';\n\nimport { IBooking } from '../../types/IBooking';\nimport { formatDate } from '../../utils/formatDate';\nimport { minutesToHour } from '../../utils/minutesToHours';\nimport { BookingService } from '../../services/bookingService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface BookingsListProps {}\n\n// Añadir toolt tip al tiempo y precio indicando que es el calculo basado en lo que registro el negocio\n\n// Este monto se basa en el precio de los servicios que registraste\n\nexport const BookingsList: React.FC<BookingsListProps> = ({}) => {\n  // hooks\n  const toast = useToast();\n  const history = useHistory();\n\n  const [bookings, setBookings] = useState<IBooking[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [bookingId, setBookingId] = useState(0)\n\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const params = { status: 1, time: 10 };\n      \n      const { bookings } = await new BookingService().getAll(params);\n      setBookings(bookings);\n      setIsLoading(false);\n    }\n    fetchBookings();\n  }, []);\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  const handleToAcept = async (index :number, id? :number) => {\n    console.log('Booking id', id);\n    if (id) {\n      setBookingId(id);\n      const response = await new BookingService().update(id, { bookingStatusId: 2 });\n      if (response.success) {\n        setBookings([\n          ...bookings.slice(0, index),\n          ...bookings.slice(index + 1)\n        ]);\n\n        toast({\n          status: 'success',\n          title: 'Servicio aceptado',\n          position: 'top',\n        })\n      }\n      setBookingId(0);\n    }    \n  }\n\n  const handleToCancel = async (index :number, id? :number) => {\n    if (id) {\n      setBookingId(id);\n      const response = await new BookingService().update(id, { bookingStatusId: 3 });\n      if (response.success) {\n        setBookings([\n          ...bookings.slice(0, index),\n          ...bookings.slice(index + 1)\n        ]);\n\n        toast({\n          status: 'error',\n          title: 'Servicio rechazado',\n          position: 'top',\n        })\n      }\n      setBookingId(0);\n    }    \n  }\n\n  return (\n    <Table variant=\"simple\" size=\"md\">\n        <TableCaption>*Calculos basados en el tiempo y precio de cada servicio</TableCaption>\n        <Thead>\n          <Tr>\n            <Th>Cliente</Th>\n            <Th>Fecha de servicio</Th>\n            <Th>Tiempo de servicio*</Th>\n            <Th>Total a cobrar*</Th>\n            <Th />\n          </Tr>\n        </Thead>\n        <Tbody>\n          { bookings.map((item: IBooking, index :number) => (\n            <Tr fontSize='14px'>\n              <Td\n                textDecor='underline'\n                onClick={() => history.push(`/bookings/${item.id}`)}\n                fontWeight='600'\n                _hover={{ bg: 'primaryLight', cursor: 'pointer' }}\n              >\n                {item.customer?.firstName} {item.customer?.lastName}\n              </Td>\n              <Td>{item.bookingDate ? formatDate(item.bookingDate) : ''}</Td>\n              <Td>{item.totalTime ? minutesToHour(item.totalTime) : ''}</Td>\n              <Td>${item.totalPrice}MXN</Td>\n              <Td>\n                <Flex>\n                  <Tooltip label=\"Aceptar\" fontSize=\"md\">\n                    <IconButton\n                      aria-label=\"Aceptar\"\n                      variant=\"ghost\"\n                      size='lg'\n                      fontSize=\"36px\"\n                      icon={<AiOutlineCheckCircle />}\n                      mr={1}\n                      onClick={() => handleToAcept(index, item.id)}\n                      isLoading={bookingId === item.id}\n                    />\n                  </Tooltip>\n                  <Tooltip label=\"Rechazar\" fontSize=\"md\">\n                    <IconButton\n                      aria-label=\"Aceptar\"\n                      variant=\"ghost\"\n                      size='lg'\n                      fontSize=\"36px\"\n                      icon={<AiOutlineCloseCircle />}\n                      mr={1}\n                      onClick={() => handleToCancel(index, item.id)}\n                      isLoading={bookingId === item.id}\n                    />\n                  </Tooltip>\n                </Flex>\n              </Td>\n            </Tr>\n          )) }\n        </Tbody>\n      </Table>\n  );\n}","import { Box, Button, Flex, HStack, Link, Text } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react'\nimport { BookingsListHistory } from '../components/booking/BookingHistoryList';\nimport { BookingsListNext } from '../components/booking/BookingListNext';\nimport { BookingsList } from '../components/booking/BookingsList';\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { BookingService } from '../services/bookingService';\nimport { IBooking } from '../types/IBooking';\n\ninterface BookingsProps {}\n\nconst MenuLink: React.FC<{ title: string, onClick: any, isActive: boolean }> = ({title, onClick, isActive}) => (\n  <Button bg={isActive ? 'primary' : ''} variant='ghost' fontWeight='bold' pr={6} onClick={onClick}>\n    <Text color={isActive ? '#FFF' : ''} fontSize='md'>{title}</Text>\n  </Button>\n)\n\nexport const Bookings: React.FC<BookingsProps> = ({}) => {\n  const [tab, setTab] = useState(1);\n\n  return (\n    <ContainerPage title='Reservaciones'>\n      <Box bg='surface' borderBottomWidth={1} borderColor='borders' py={3}>\n        <Box>\n          <HStack mt={4} borderBottomWidth={1} borderColor='borders' p={3}>\n            <MenuLink title='Pendientes' onClick={() => setTab(1)} isActive={tab === 1} />\n            <MenuLink title='Proximas' onClick={() => setTab(2)} isActive={tab === 2} />\n            <MenuLink title='Historial' onClick={() => setTab(3)} isActive={tab === 3} />\n          </HStack>\n          { tab === 1 && <BookingsList /> }\n          { tab === 2 && <BookingsListNext /> }\n          { tab === 3 && <BookingsListHistory /> }\n        </Box>\n      </Box>\n    </ContainerPage>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Container, Flex, Heading, HStack, IconButton, Spacer, Stack, Text, Tooltip, useToast, VStack } from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom';\nimport { AiOutlineCheckCircle, AiOutlineCloseCircle } from 'react-icons/ai';\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { IBooking } from '../types/IBooking';\nimport { BookingService } from '../services/bookingService';\nimport { formatDateLG } from '../utils/formatDate';\nimport { minutesToHour } from '../utils/minutesToHours';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { IBookingService } from '../types/IBookingService';\n\ninterface BookingProps {}\n\n// Datos de clioente\n/**\n Nombre\n Telefono,\n\n Fecha\n Hora\n Mensaje\n\n Servicios\n\n Acciones\n  Aceptar\n  Rechazar\n  Contactar\n*/\n\nexport const Booking: React.FC<BookingProps> = ({}) => {\n\n  // hooks\n  const { id } :any = useParams();\n  const toast = useToast();\n\n  // state\n  const [booking, setBooking] = useState<Required<IBooking>>();\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchBooking = async () => {\n    const { success, booking } = await new BookingService().get(id)\n    if (success) {\n      setBooking(booking);\n    }\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchBooking();\n  }, []);\n\n  const handleToAcept = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().update(id, { bookingStatusId: 2 });\n      if (response.success) {\n        fetchBooking();\n      }\n      setIsLoading(false);\n      console.log('respues de reservacion', response);\n    }    \n  }\n\n  const handleToCancel = async () => {\n    if (id) {\n      setIsLoading(true);\n      const response = await new BookingService().update(id, { bookingStatusId: 3 });\n      if (response.success) {\n        fetchBooking();\n      }\n      console.log('Respuesta de servicio', response);\n      setIsLoading(false);\n      toast({\n        status: 'error',\n        title: 'Servicio rechazado',\n        position: 'top',\n      })\n      \n    }\n  }    \n\n  if (isLoading) {\n    return <LoadingView />\n  }\n\n  if (!booking) {\n    return (\n      <Text>Servicio no encontrado</Text>\n    )\n  }\n\n  const colorStatus = (statusId :number) => {\n    switch (statusId) {\n      case 1:\n        return '#D69E2E'\n      case 2:\n        return 'primary'\n      case 3:\n        return 'error'\n      default:\n        break;\n    }\n  }\n  \n  return (\n    <>\n      <Box bg={colorStatus(booking.bookingStatusId)} color='#FFF' py={6} px={12} borderBottomWidth={1} borderColor='borders'>\n        <VStack align='left' justify='flex-start'>\n          <Heading as='h1'>{booking.customer.firstName} {booking.customer.lastName}</Heading>\n          <Text color='#FFF'>Teléfono: {booking.customer.phone}</Text>\n          <Text color='#FFF'>Fecha de solicitud: {formatDateLG(booking.createdAt)}</Text>\n        </VStack>\n      </Box>\n      \n      <ContainerPage>\n        <Flex justify='space-between'>\n          <Flex direction='column' w='62%'>\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders' mb={6}>\n              <Heading as='h4' fontSize='2xl' mb={6}>Resumen del servicio</Heading>\n\n              { booking.message &&\n              <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                <Text fontSize='sm' fontWeight='600' color='subtext'>Comentario</Text>\n                <Text as='cite'>{booking.message}</Text>\n              </VStack>\n              }\n              <HStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Fecha de servicio</Text>\n                  <Text fontWeight='600'>{formatDateLG(booking.bookingDate)}</Text>\n                </VStack>\n              </HStack>\n              <HStack spacing={10}>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Tiempo de servicio</Text>\n                  <Text fontWeight='600'>{minutesToHour(booking.totalTime)}</Text>\n                </VStack>\n                <VStack textAlign='left' align='flex-start' justify='flex-start' spacing={1} mb={4}>\n                  <Text fontSize='sm' fontWeight='600' color='subtext'>Total a cobrar</Text>\n                  <Text fontWeight='600'>${booking.totalPrice}MXN</Text>\n                </VStack>\n              </HStack>\n            </Box>\n\n            <Box bg='surface' py={6} px={6} w='100%' borderWidth={1} borderColor='borders'>\n              <Heading as='h4' fontSize='2xl' mb={6}>Servicios</Heading>\n              <Stack mb={3} w='100%'>\n                { booking.bookingService.map((item: IBookingService) => (\n                  <Flex align='center' justify='space-evenly' flex='100%'>\n                    <Text fontSize='md' fontWeight='semibold' w='260px'>{item.nameService}</Text>\n                    <Spacer />\n                    <Flex alignSelf='center'>\n                      <Box w='15px' />\n                      <Flex direction='column'>\n                        <Text fontSize='xs' pr='10px'>${item.priceService}MXN</Text>\n                        <Text fontSize='xs' pr='10px'>{item.timeService}min</Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )) }\n              </Stack>\n            </Box>\n          </Flex>\n\n          <Box w='35%'>\n            { booking.bookingStatusId === 1 &&\n            <Box bg='surface' py={6} px={6} borderWidth={1} borderColor='borders'>\n              <Flex justifyContent='center' direction='column' alignItems='center'>\n                <Heading as='h4' fontSize='2xl'>Solicitud</Heading>\n                <Text mt={10} textAlign='center'>Oscar Alberto esta interesado en hacer una reservación. ¿Lo aceptas?</Text>\n                <VStack my={6} w='100%'>\n                  <Button variant='primary' isFullWidth size='lg' onClick={handleToAcept}>\n                    Aceptar\n                  </Button>\n                  <Button variant='outline' colorScheme='red' isFullWidth size='lg' onClick={handleToCancel}>\n                    Rechazar\n                  </Button>\n                </VStack>\n              </Flex>\n            </Box>\n            }\n          </Box>\n\n        </Flex>\n      </ContainerPage>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormLabel, Text, useToast, Image } from '@chakra-ui/react';\n\nimport { BusinessService } from '../../services/businessService';\n\ninterface UploadCoverProps {}\n\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg';\n\nexport const UploadCover: React.FC<UploadCoverProps> = ({}) => {\n  // hooks\n  const toast = useToast();\n\n  // state\n  const [cover, setCover] = useState('');\n  const [isUploading, setIsUplaoding] = useState(false);\n\n  const fetch = async () => {\n    const response = await new BusinessService().get();\n    setCover(response.business.cover);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, [])\n\n  const onChange = async (e :any) => {\n    setIsUplaoding(true);\n\n    const data = new FormData();\n    data.append('file', e.target.files[0]);\n    await new BusinessService().uplaodCover(data);\n\n    fetch();   \n\n    toast({\n      title: \"Datos actualizados.\",\n      status: \"success\",\n      isClosable: true,\n      position: 'top'\n    });\n\n    setIsUplaoding(false);\n  }\n\n  return (\n    <>\n      <Box w='60%' pr={10}>\n        <Text fontWeight='bold' mb={4}>Foto de portada</Text>\n        <Text fontSize='sm' color='subtext' mb={3}>Tu foto de portada es la primera impresión que tienen tus clientes de tu negocio.</Text>\n        <Text fontSize='sm' color='subtext'>\n          {/* Directrices importantes: Tamańo recomendado 930 x 620 píxeles; formato .jpg, .jpeg, o .png. */}\n          Directrices importantes: Tamańo recomendado 780 x 520 píxeles; formato .jpg, .jpeg, o .png.\n        </Text>\n        <Button variant='primary-outline' isLoading={isUploading} p={0} mt={4}>\n          <FormLabel w='100%' h='100%' htmlFor='file' m={0} p={2} px={4} >Cambiar foto</FormLabel>\n        </Button>\n\n        <input\n          type=\"file\"\n          id=\"file\" \n          name='file'\n          accept={acceptedFileTypes} \n          multiple={false} \n          onChange={onChange}\n          style={{ display: 'none' }}\n        />\n      </Box>\n      <Flex w='40%' justify='center' alignItems='center'>\n        <Image src={cover} w='300px' h='200px' objectFit=\"cover\" loading='eager' />\n      </Flex>\n    </>\n  );\n}","import React, { useEffect, useState } from 'react'\nimport { Box, Button, Flex, FormLabel, Text, useToast, Image, VStack, SimpleGrid, Wrap, IconButton } from '@chakra-ui/react';\nimport { IoIosAdd } from 'react-icons/io';\nimport { RiDeleteBin6Line } from 'react-icons/ri'\n\n\nimport { BusinessService } from '../../services/businessService';\nimport { LoadingView } from '../general/LoadingView';\n\ninterface UploadGalleryProps {}\n\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg';\n\nexport const UploadGallery: React.FC<UploadGalleryProps> = ({}) => {\n  // hooks\n  const toast = useToast();\n\n  // state\n  const [photos, setPhotos] = useState<object[]>([]);\n  const [isUploading, setIsUplaoding] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetch = async () => {\n    const response = await new BusinessService().getPhotos();\n    if (response.success) {\n      const files = response.photos.map((item :any) => ({\n        image: item.file,\n        id: item.id,\n      }))\n\n      console.log('Files fetvh', files);\n      \n      setPhotos(files);\n    }\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetch();\n  }, [])\n\n  \n\n  const onChangeGallery = async (e :any) => {\n    setIsUplaoding(true);\n    setIsLoading(true);\n    const files : FileList = e.target.files;\n    const newFiles = Array.from(files).map((item:any) => ({\n      image: URL.createObjectURL(item),\n      id: item.id,\n    }))\n    \n    const newPhotos = [...photos, ...newFiles]\n    setPhotos(newPhotos);\n\n    const dataFiles = new FormData();\n    for (let i = 0; i < files.length; i++) {\n      dataFiles.append('files', files[i]);\n    }\n    \n    const response = await new BusinessService().uplaodGallery(dataFiles);\n\n    if (response.success) {\n      toast({\n        title: \"Datos actualizados.\",\n        status: \"success\",\n        isClosable: true,\n        position: 'top'\n      });\n      // setTimeout(() => {\n      //   // window.location.reload();\n      //   fetch();\n      //   setIsUplaoding(false);\n      // }, 5000)\n    }\n    setIsUplaoding(false);\n    setIsLoading(false);\n  }\n\n  const handleDeletePhoto = async (id :number, index :number) => {\n    setIsLoading(true);\n    if (id) {\n      const response = await new BusinessService().deletePhoto(id);\n      if (response.success) {\n        setPhotos([\n          ...photos.splice(0, index),\n          ...photos.splice(index + 1),\n        ]);\n      }\n    }\n    setIsLoading(false);\n  }\n\n  if (isLoading) {\n    return <LoadingView />\n  }\n  \n  return (\n    <>\n      <Box w='60%'>\n        <Text fontWeight='bold' mb={4}>Galeria</Text>\n        <Text fontSize='sm' color='subtext' mb={3}>Añade las fotos de tu negocio y local para que los usuarios conozcan tus servicios.</Text>\n        <Button variant='primary-outline' isLoading={isUploading} p={0} mt={4}>\n          <FormLabel w='100%' h='100%' htmlFor='files' m={0} p={2} px={4} >Añadir imagenes +</FormLabel>\n        </Button>\n        <input\n          type=\"file\"\n          id=\"files\" \n          name='files'\n          accept={acceptedFileTypes} \n          multiple\n          onChange={onChangeGallery}\n          style={{ display: 'none' }}\n        />\n      </Box>\n      <Box w='90%'>\n        <Wrap direction='row' flex={1} mt={4}>\n          { photos.map((photo :any, index :number) => (\n            <Box p={2} key={index} pos='relative' role='group'>\n              <Flex pos='absolute' w='200px' alignItems='flex-end' justifyContent='flex-end' p={2} display='none' _groupHover={{ display: 'flex' }}>\n                <IconButton size='sm' aria-label='Delete photo' icon={<RiDeleteBin6Line size={20} />} onClick={() => handleDeletePhoto(photo.id, index)} />\n              </Flex>\n              <Image w='200px' h='133px' objectFit=\"cover\" src={photo.image} />\n            </Box>\n          )) }\n        </Wrap>\n      </Box>\n    </>\n  );\n}","import React, { HtmlHTMLAttributes, useEffect, useState } from 'react'\nimport { Text, Heading, Box, Flex, Image, Divider, Button, VStack, FormLabel, useToast } from '@chakra-ui/react';\n\n\nimport { ContainerPage } from '../components/general/ContainerPage';\nimport { WrapperSettings } from '../components/general/WrapperSettings';\nimport { BusinessService } from '../services/businessService';\nimport { LoadingView } from '../components/general/LoadingView';\nimport { UploadCover } from '../components/gallery/UploadCover';\nimport { UploadGallery } from '../components/gallery/UploadGallery';\n\ninterface SettingsGalleryProps {}\n\nexport const SettingsGallery: React.FC<SettingsGalleryProps> = () => {\n  \n  return (\n    <ContainerPage title='Configuración'>\n      <WrapperSettings>\n        <Heading as='h2' size='md' mb={2}>Fotos</Heading>\n\n        <Flex w='90%' justify='space-between' mt={4}>\n          <UploadCover />\n        </Flex>\n\n        <Divider my={6} />\n\n        <Flex w='100%' justify='space-between' direction='column'>\n          <UploadGallery />\n        </Flex>\n      </WrapperSettings>\n    </ContainerPage>\n  );\n}","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport * as Cookies from \"js-cookie\";\n\n// Components\nimport { Layout } from './components/general/Layout';\n\n// Pages\nimport { Login } from './pages/Login';\nimport { Home } from './pages/Home';\nimport { Signup } from './pages/Signup';\nimport { Settings } from './pages/Settings';\nimport { BookingCalendar } from './pages/BookingCalendar';\nimport { NewBusiness } from './pages/NewBusiness';\nimport { SettingsAddress } from './pages/SettingsAddress';\nimport { SettingsLocation } from './pages/SettingsLocation';\nimport { SettingsServices } from './pages/SettingsServices';\nimport { SettingsHour } from './pages/SettingsHour';\nimport { Bookings } from './pages/Bookings';\nimport { Booking } from './pages/Booking';\nimport { SettingsGallery } from './pages/SettingsGallery';\n\nconst App = () => {\n\n  console.log('variables de entorno', process.env.REACT_APP_API_URL);\n  console.log('process.env.TOKEN_MAPBOX', process.env.REACT_APP_TOKEN_MAPBOX);\n\n  const PrivateRoutes = () => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    if (isAuth) {\n      return (\n        <Route exact path='/:path?/:path2?'>\n          <Layout>\n            <Route path='/' exact component={Home} />\n            <Route path='/calendar' exact component={BookingCalendar} />\n            <Route path='/bookings' exact component={Bookings} />\n            <Route path='/bookings/:id' exact component={Booking} />\n            <Route path='/settings' exact component={Settings} />\n            <Route path='/settings/services' exact component={SettingsServices} />\n            <Route path='/settings/address' exact component={SettingsAddress} />\n            <Route path='/settings/location' exact component={SettingsLocation} />\n            <Route path='/settings/hours' exact component={SettingsHour} />\n            <Route path='/settings/photos' exact component={SettingsGallery} />\n            {/* <Route component={NotFound}/> */}\n          </Layout>\n        </Route>\n      )\n    } else {\n      return <Route render={() => <Redirect to={{ pathname: '/login' }} />} />\n    }\n  }\n\n  const PrivateRoute = ({ component: Component, ...rest }: any) => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    return (\n      <Route\n        {...rest}\n        render={(props) => ( isAuth\n          ? ( <Component {...props} /> ) \n          : ( <Redirect to={{ pathname: '/login' }} /> )) \n        } \n      />\n    )\n  }\n\n  const PublicRoute = ({ component: Component, ...rest }: any) => {\n    const isAuth = Cookies.get(\"qid\") ? true : false\n    console.log('isAuth', isAuth);\n    return (\n      <Route\n        {...rest}\n        render={(props) => ( !isAuth\n          ? ( <Component {...props} /> ) \n          : ( <Redirect to={{ pathname: '/' }} /> )) \n        } \n      />\n    )\n  }\n\n  return (\n    <BrowserRouter basename='/manager/'>\n      \n      <Switch>\n        <PublicRoute path='/login' exact component={Login} />\n        <PublicRoute path='/signup' exact component={Signup} />\n        \n        <PrivateRoute path='/new-business/:step?' exact component={NewBusiness} />\n        {/* <Route component={NotFound}/> */}\n\n        <PrivateRoutes />\n      </Switch>\n    </BrowserRouter>   \n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport { extendTheme, theme as chakraTheme } from '@chakra-ui/react'\n\nconst fonts = { ...chakraTheme.fonts, mono: `'Menlo', monospace` }\n\n// const breakpoints = ['40em', '52em', '64em']\n\nconst theme = extendTheme({\n  ...chakraTheme,\n  styles: {\n    global: {\n      body: {\n        bg: \"#F6F7F9\",\n        // color: \"#333333\",\n        color: '#020621',\n      },\n    },\n  },\n  colors: {\n    ...chakraTheme.colors,\n    black: '#16161D',\n    primary: '#25CB67',  // Primary\n    _primary: '#05AF3C', // Priamry variant \n    secondary: '#020621', // Secondanry\n    _secondary: '#161e2c', // Secondanry variant\n    error: '#B00020',\n    background: '#F6F7F9',\n    surface: '#FFFFFF',\n    borders: '#d9e3eb',\n    subtext: '#717171',\n    primaryLight: '#E9F9EF'\n  },\n  fonts,\n  // breakpoints,\n  components: {\n    Link: {\n      variants: {\n        \"primary\": {\n          fontWeight: 'semibold',\n          _hover: {\n            textDecoration: 'none',\n            color: 'primary'\n          },\n        },\n      },\n    },\n    Button: {\n      variants: {\n        \"primary\": {\n          bg: \"primary\",\n          borderColor: \"#05AF3C\",\n          color: '#FFF',\n          _hover: {\n            bg: \"_primary\",\n          },\n        },\n        \"primary-outline\": {\n          bg: \"transparent\",\n          borderColor: \"primary\",\n          borderWidth: 1,\n          color: 'primary',\n          _hover: {\n            bg: \"_primary\",\n            color: '#FFFFFF',\n          },\n        },\n        \"secondary\": {\n          bg: \"secondary\",\n          borderColor: \"#05AF3C\",\n          color: '#FFF',\n          _hover: {\n            bg: \"_secondary\",\n          },\n        },\n      },\n    },\n    Input: {\n      baseStyle: {\n        field: {\n          _focus: {\n            borderColor: '_primary',\n            borderWidth: 1,\n            outline: 0,\n            boxShadow: 'none',\n          },\n          boxShadow: 'none',\n        },\n      },\n      variants: {\n        outline: () => ({\n          field: {\n            _focus: {\n              borderColor: '_primary',\n              borderWidth: 1,\n              outline: 0,\n              boxShadow: 'none',\n            },\n            _hover: {\n              borderColor: '_primary',\n              borderWidth: 1,\n            }\n          },\n        }),\n        \"app\": {\n          field: {\n            _focus: {\n              borderColor: '_primary',\n              borderWidth: 1,\n              outline: 0,\n            },\n          },\n        },\n      },\n    },\n  }\n})\n\nexport default theme","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/react';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './config/theme';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <CSSReset />\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}